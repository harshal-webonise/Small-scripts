Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Activities/View/Activities] => Array
        (
            [search.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 

     $activity) {
                if ($key > 4) {
                    break;
                }
                if ($activity['data']['type'] == 'assessment_taken') {
                    echo $this->element('Activities.assessment_taken', array('activity' => $activity));
                } elseif ($activity['data']['type'] == 'job_role_created') {
                    echo $this->element('Activities.job_role_created', array('activity' => $activity));
                } elseif ($activity['data']['type'] == 'assessment_created') {
                    echo $this->element('Activities.assessment_created', array('activity' => $activity));
                }
            }
        }
        ?>
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Activities/View/Activities] => Array
        (
            [view_all.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                        )

                    [div] => Array
                        (
                            [0] => 

    
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
        ?>

    

    
        
            
                Activity 
            
        
        element('assessment_taken', array('activity' => $activity));
                    } elseif ($activity['data']['type'] == 'job_role_created') {
                        echo $this->element('job_role_created', array('activity' => $activity));
                    } elseif ($activity['data']['type'] == 'assessment_created') {
                        echo $this->element('assessment_created', array('activity' => $activity));
                    }
                }
            }
            ?>
        
        element('pagination'); ?>
    

                            [1] => 
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
        ?>

    
                            [2] => 
        
            
                Activity 
            
        
        element('assessment_taken', array('activity' => $activity));
                    } elseif ($activity['data']['type'] == 'job_role_created') {
                        echo $this->element('job_role_created', array('activity' => $activity));
                    } elseif ($activity['data']['type'] == 'assessment_created') {
                        echo $this->element('assessment_created', array('activity' => $activity));
                    }
                }
            }
            ?>
        
        element('pagination'); ?>
    
                            [3] => 
            
                Activity 
            
        
                            [4] => 
                Activity 
            
                            [5] => 
                        )

                )

        )

)
Array
(
)
Array
(
)
Array
(
)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Apis] => Array
        (
            [assessment_report_link_request_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Assessment Report Link Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Report Link Request XML (ARLR)
                    Assessment Report Link Request Notification (ARLRN)
                Form->textarea('ARLR', array('value' => $apiResponse['ARLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ARLRN', array('value' => $apiResponse['ARLRN'], 'rows' => 30, 'cols' => 70))?>
                
    

                            [1] => 
        Assessment Report Link Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Report Link Request XML (ARLR)
                    Assessment Report Link Request Notification (ARLRN)
                Form->textarea('ARLR', array('value' => $apiResponse['ARLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ARLRN', array('value' => $apiResponse['ARLRN'], 'rows' => 30, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Report Link Request XML (ARLR)
                    Assessment Report Link Request Notification (ARLRN)
                Form->textarea('ARLR', array('value' => $apiResponse['ARLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ARLRN', array('value' => $apiResponse['ARLRN'], 'rows' => 30, 'cols' => 70))?>
                
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Apis] => Array
        (
            [assessment_request_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Assessment Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                    
                        
                    
                Api Key :
                    Form->input('ats_username');?>
                    
                        
                    
                Api Secret :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Name :
                    Form->input('candidate_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL :
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Request XML (AR)
                    Assessment Request Notification (ARN)
                Form->textarea('AR', array('value' => $apiResponse['AR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ARN'], 'rows' => 50, 'cols' => 70))?>
                
    

                            [1] => 
        Assessment Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                    
                        
                    
                Api Key :
                    Form->input('ats_username');?>
                    
                        
                    
                Api Secret :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Name :
                    Form->input('candidate_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL :
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Request XML (AR)
                    Assessment Request Notification (ARN)
                Form->textarea('AR', array('value' => $apiResponse['AR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ARN'], 'rows' => 50, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'Chemistry'));?>
                    
                    
                        
                    
                Api Key :
                    Form->input('ats_username');?>
                    
                        
                    
                Api Secret :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Name :
                    Form->input('candidate_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL :
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Request XML (AR)
                    Assessment Request Notification (ARN)
                Form->textarea('AR', array('value' => $apiResponse['AR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ARN'], 'rows' => 50, 'cols' => 70))?>
                
                            [4] => 
                            [5] => 
                            [6] => 
                            [7] => 
                            [8] => 
                            [9] => 
                            [10] => 
                            [11] => 
                            [12] => 
                            [13] => 
                            [14] => 
                            [15] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Apis] => Array
        (
            [assessment_status_request_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Assessment Status Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name', array('value' => 'Chemistry'));?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Request Notification (ASRN)
                Form->textarea('ASR', array('value' => $apiResponse['ASR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ASRN', array('value' => $apiResponse['ASRN'], 'rows' => 30, 'cols' => 70))?>
                
    

                            [1] => 
        Assessment Status Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name', array('value' => 'Chemistry'));?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Request Notification (ASRN)
                Form->textarea('ASR', array('value' => $apiResponse['ASR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ASRN', array('value' => $apiResponse['ASRN'], 'rows' => 30, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name', array('value' => 'Chemistry'));?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Receipt Id :
                    Form->input('receipt_id', array('type' => 'text'));?>
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Request Notification (ASRN)
                Form->textarea('ASR', array('value' => $apiResponse['ASR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('ASRN', array('value' => $apiResponse['ASRN'], 'rows' => 30, 'cols' => 70))?>
                
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Apis] => Array
        (
            [certificate_number_lookup_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Certificate Number Lookup Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name');?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Certificate Number :
                    Form->input('certificate_number', array('type' => 'text'));?>
                Form->input('email', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Certificate Number Lookup Request XML (CNLR)
                    Certificate Number Lookup Request Notification (CNLRN)
                Form->textarea('CNLR', array('value' => $apiResponse['CNLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('CNLRN', array('value' => $apiResponse['CNLRN'], 'rows' => 30, 'cols' => 70))?>
                
    

                            [1] => 
        Certificate Number Lookup Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name');?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Certificate Number :
                    Form->input('certificate_number', array('type' => 'text'));?>
                Form->input('email', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Certificate Number Lookup Request XML (CNLR)
                    Certificate Number Lookup Request Notification (CNLRN)
                Form->textarea('CNLR', array('value' => $apiResponse['CNLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('CNLRN', array('value' => $apiResponse['CNLRN'], 'rows' => 30, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    Form->input('account_name');?>
                Api Key :
                    Form->input('ats_username');?>
                Api Secret :
                    Form->input('ats_password');?>
                ATS Name :
                    Form->input('ats_name');?>
                Certificate Number :
                    Form->input('certificate_number', array('type' => 'text'));?>
                Form->input('email', array('type' => 'text'));?>
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Certificate Number Lookup Request XML (CNLR)
                    Certificate Number Lookup Request Notification (CNLRN)
                Form->textarea('CNLR', array('value' => $apiResponse['CNLR'], 'rows' => 30, 'cols' => 70))?>
                    Form->textarea('CNLRN', array('value' => $apiResponse['CNLRN'], 'rows' => 30, 'cols' => 70))?>
                
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Taleos] => Array
        (
            [aor_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Taleo Assessment Order Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate First Name :
                    Form->input('candidate_first_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Middle Name :
                    Form->input('candidate_middle_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Last Name :
                    Form->input('candidate_last_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL (reportRecipient):
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Order Request XML (AOR)
                    Assessment Order Acknowledgement (AOA)
                Form->textarea('AR', array('value' => $apiResponse['AOR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['AOA'], 'rows' => 50, 'cols' => 70))?>
                
    

                            [1] => 
        Taleo Assessment Order Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate First Name :
                    Form->input('candidate_first_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Middle Name :
                    Form->input('candidate_middle_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Last Name :
                    Form->input('candidate_last_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL (reportRecipient):
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Order Request XML (AOR)
                    Assessment Order Acknowledgement (AOA)
                Form->textarea('AR', array('value' => $apiResponse['AOR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['AOA'], 'rows' => 50, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate First Name :
                    Form->input('candidate_first_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Middle Name :
                    Form->input('candidate_middle_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Last Name :
                    Form->input('candidate_last_name', array('type' => 'text'));?>
                    
                        
                    
                Candidate Email :
                    Form->input('email', array('type' => 'text'));?>
                    
                        
                    
                Assessment ID :
                    Form->input('assessment_id', array('type' => 'text'));?>
                    
                        
                    
                Transaction Id :
                    Form->input('transaction_id', array('type' => 'text'));?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Call Back URL :
                    Form->input('call_back_url');?>
                    
                        
                    
                Result Submission URL (reportRecipient):
                    Form->input('result_submission_url');?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Order Request XML (AOR)
                    Assessment Order Acknowledgement (AOA)
                Form->textarea('AR', array('value' => $apiResponse['AOR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['AOA'], 'rows' => 50, 'cols' => 70))?>
                
                            [4] => 
                            [5] => 
                            [6] => 
                            [7] => 
                            [8] => 
                            [9] => 
                            [10] => 
                            [11] => 
                            [12] => 
                            [13] => 
                            [14] => 
                            [15] => 
                            [16] => 
                            [17] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Ats/View/Taleos] => Array
        (
            [asr_console.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Taleo Assessment Order Request
    
    

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                ReceiptID :
                    Form->input('receipt_id', array('type' => 'text'));?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Acknowledgement (ASA)
                Form->textarea('AR', array('value' => $apiResponse['ASR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ASA'], 'rows' => 50, 'cols' => 70))?>
                
    

                            [1] => 
        Taleo Assessment Order Request
    
                            [2] => 

        
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                ReceiptID :
                    Form->input('receipt_id', array('type' => 'text'));?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Acknowledgement (ASA)
                Form->textarea('AR', array('value' => $apiResponse['ASR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ASA'], 'rows' => 50, 'cols' => 70))?>
                
    
                            [3] => 
            Form->create('Api', array('inputDefaults' => array('label' => false, 'div' => false)));

            echo $this->Form->hidden('from', array('value' => 'console'));
            ?>
            Account Name :
                    
                        Form->input('account_name', array('value' => 'ChemistryGroup'));?>
                    
                    
                        
                    
                UserId :
                    Form->input('ats_username');?>
                    
                        
                    
                Password :
                    Form->input('ats_password');?>
                    
                        
                    
                ATS Name :
                    Form->input('ats_name');?>
                    
                        
                    
                Order Id :
                    Form->input('order_id', array('type' => 'text'));?>
                    
                        
                    
                Candidate Id :
                    Form->input('candidate_id', array('type' => 'text'));?>
                    
                        
                    
                ReceiptID :
                    Form->input('receipt_id', array('type' => 'text'));?>
                    
                        
                    
                 
                    Form->submit('Submit');?>
                Form->end();?>

            Assessment Status Request XML (ASR)
                    Assessment Status Acknowledgement (ASA)
                Form->textarea('AR', array('value' => $apiResponse['ASR'], 'rows' => 50, 'cols' => 70))?>
                    Form->textarea('AR', array('value' => $apiResponse['ASA'], 'rows' => 50, 'cols' => 70))?>
                
                            [4] => 
                            [5] => 
                            [6] => 
                            [7] => 
                            [8] => 
                            [9] => 
                            [10] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Assessments] => Array
        (
            [cancelled.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Cancelled
                
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Cancelled
                
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Cancelled
                
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Cancelled
                
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Cancelled
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 
                        Your assessment is been cancelled.
                    
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Assessments] => Array
        (
            [error.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                
            
        
    

                            [1] => 
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                
            
        
    
                            [2] => 
            
                
                    
                                                                                                                                                                          
                    
                    
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                
            
        
                            [3] => 
                
                    
                                                                                                                                                                          
                    
                    
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                
            
                            [4] => 
                    
                                                                                                                                                                          
                    
                    
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                
                            [5] => 
                                                                                                                                                                          
                    
                            [6] => 
                        ATS credentials are not matching, please try after sometime';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after sometime';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again after sometime. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        } elseif ($status == 'invalid_channel') {
                            echo 'The assessment you are trying to access is customised to view only through a proper channel. ';
                        }
                        ?>

                    
                            [7] => 
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'continue'));
                        }
                        ?>
                    
                            [8] => 
    
        
    

                            [9] => 
        
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Assessments] => Array
        (
            [maintenance.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Maintenance
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Continue";
                        echo $this->Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Assessments] => Array
        (
            [retake.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Important note!
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 
                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Assessments] => Array
        (
            [unavailable.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Job role not available
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('continue'), $redirectionUrl, array('class' => 'btn btn-large', 'title' => 'continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaCoreThemes] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    
                            [5] => 
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                            [6] => 
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                            [7] => 
                            [8] => 
                            [9] => 
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
                            [10] => 
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                            [11] => 
            Html->image('ajax-loader_product.gif');?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaCoreThemes] => Array
        (
            [edit.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Cultural Assessment
                            [1] => Done With Editing
                        )

                    [place_holders] => Array
                        (
                            [0] => user alias
                        )

                    [submit] => Array
                        (
                            [0] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select 
                            [1] => Please correct score error
                            [2] => Please correct score error
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                            [1] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
    Select  Questions for each cultural theme

    
        
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'],));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    


                            [1] => 
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
                            [2] => 
             Cultural Fit Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
                            [4] => 
                            [5] => 
        
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'],));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    
                            [6] => 
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'],));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        
                            [7] => 
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'],));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
                            [8] => 
                    request->data['CfaCoreTheme']['name']; ?>
                
                            [9] => 
                    request->data['CfaCtQuestion']);?> Questions selected
                
                            [10] => 
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
                            [11] => 

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            [12] => 
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                            [13] => 
    
        
            Text for report
            
                    1. Low description

                    
                        Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                
                    2. High description

                    
                        Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                            ?>
                        
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                            ?>
                        
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                            ?>
                        
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                            ?>
                        
                    
                
    

                            [14] => 
        
            Text for report
            
                    1. Low description

                    
                        Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                
                    2. High description

                    
                        Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                            ?>
                        
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                            ?>
                        
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                            ?>
                        
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                            ?>
                        
                    
                
    
                            [15] => 
            Text for report
            
                    1. Low description

                    
                        Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                
                    2. High description

                    
                        Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                            ?>
                        
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                            ?>
                        
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                            ?>
                        
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                            ?>
                        
                    
                
                            [16] => 
                    1. Low description

                    
                        Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                            [17] => 
                        Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                            [18] => 
                    2. High description

                    
                        Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                
                            [19] => 
                        Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                        ?>
                    
                            [20] => 
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                            ?>
                        
                    
                            [21] => 
                            Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                            ?>
                        
                            [22] => 
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                    
                            [23] => 
                            Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                            [24] => 
                        3. If candidate falls in the area Most suited

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                            ?>
                        
                    
                            [25] => 
                            Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                            ?>
                        
                            [26] => 
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                            ?>
                        
                    
                            [27] => 
                            Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                            ?>
                        
                            [28] => 
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                            ?>
                        
                    
                            [29] => 
                            Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                            ?>
                        
                            [30] => 

    
    Form->button('Set Score', array('class' => 'btnBlack noSpace btn pull-right', 'id' => 'showScale',));



    echo $this->Form->submit('Done With Editing', array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', 'id' => 'completeEditing', 'style' => 'display:none;'));



    ?>
    

                            [31] => 
    Html->image('ajax-loader_product.gif');?>

                            [32] => 
    
        
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [33] => 
        
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [34] => 
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => request->data['CfaCtQuestion']);?>
                            [1] => Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                            [2] => Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                            
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'],));
                    ?> Critical theme 
                            [1] => 
                            [2] => 
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                            [3] => 1. Low description
                            [4] => 2. High description
                            [5] => 1. If candidate falls in the area Fail (less than most suited)
                            [6] => 2. If candidate falls in the area Acceptable (less than most suited)
                            [7] => 3. If candidate falls in the area Most suited
                            [8] => 4. If candidate falls in the area Acceptable (greater than most suited)
                            [9] => 5. If candidate falls in the area Fail (greater than most suited)
                            [10] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaCoreThemes] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add new theme
                            [1] => Edit Assessment
                        )

                    [alert_messages] => Array
                        (
                            [0] => You can not edit this CFA as there are active users, please try again after sometime
                        )

                    [h1] => Array
                        (
                            [0] => Preview Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Preview Cultural Fit Assessment

    
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $hash), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
    
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                

                            [1] => 
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $hash), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
                            [2] => 
                            [3] => 
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                
                            [4] => 
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                
                            [5] => 
                
                    
                          Critical theme 
                            
                            [6] => 
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                            [7] => 
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                            [8] => 
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                            [9] => 
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                            [10] => 
                                                        
                            [11] => 
                            [12] => The Scores have been reversed for this question
                                                    
                        )

                    [span] => Array
                        (
                            [0] => 
            
                            [1] => 
                    
                            [2] => 
                                       
                        )

                    [labels] => Array
                        (
                            [0] =>   Critical theme 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaCoreThemes] => Array
        (
            [select.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'select', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'select', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    
                            [5] => 
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                            [6] => 
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                            [7] => 
                            [8] => 
                            [9] => 
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
                            [10] => 
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                            [11] => 
            Html->image('ajax-loader_product.gif');?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaParameters] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment Parameters
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment Parameters

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Form->create('Cfa', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'add', $hash)));
    ?>
    
        
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
    Form->end();?>

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 
        
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [5] => 
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
                            [6] => 
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
                            [7] => 
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
                            [8] => 
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaParameters] => Array
        (
            [edit.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Edit Cultural Fit Assessment Parameters
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit Cultural Fit Assessment Parameters

    

    Form->create('CfaParameters', array('url' => array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'edit', $hash), 'class' => 'topSpace'));
    ?>
    
        
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('CfaParameter.id', array('value' => $this->request->data('CfaParameter.id')));
                $options = '';
                echo $this->Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions', 'selected' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_questions', array('value' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_responses', array('value' => $this->request->data('CfaParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);

                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('CfaParameter.no_of_responses')));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('CfaParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.id', array('value' => $cfaResponsesIds[$key]));

                            echo $this->Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
    Form->end();?>

                            [1] => 
                            [2] => 
        
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('CfaParameter.id', array('value' => $this->request->data('CfaParameter.id')));
                $options = '';
                echo $this->Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions', 'selected' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_questions', array('value' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_responses', array('value' => $this->request->data('CfaParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);

                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('CfaParameter.no_of_responses')));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('CfaParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.id', array('value' => $cfaResponsesIds[$key]));

                            echo $this->Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [3] => 
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('CfaParameter.id', array('value' => $this->request->data('CfaParameter.id')));
                $options = '';
                echo $this->Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions', 'selected' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_questions', array('value' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_responses', array('value' => $this->request->data('CfaParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);

                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('CfaParameter.no_of_responses')));
                ?>
            
        
                            [4] => 
                Select max. no. of questions for each Cultural Theme
                Form->hidden('CfaParameter.id', array('value' => $this->request->data('CfaParameter.id')));
                $options = '';
                echo $this->Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions', 'selected' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_questions', array('value' => $this->request->data('CfaParameter.no_of_questions')));

                echo $this->Form->hidden('CfaParameterPrev.no_of_responses', array('value' => $this->request->data('CfaParameter.no_of_responses')));

                ?>
            
                            [5] => 
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);

                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('CfaParameter.no_of_responses')));
                ?>
            
                            [6] => 
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('CfaParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.id', array('value' => $cfaResponsesIds[$key]));

                            echo $this->Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaQuestions] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => Save & Continue
                            [2] => Save & Exit
                            [3] => Clicking here will reset the order of score that you have set before
                            [4] => Click here to reverse the score
                        )

                    [submit] => Array
                        (
                            [0] => Set Score
                            [1] => Set report content
                            [2] => Save 
                            [3] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select 
                            [1] => since this is a critical theme, there should be at least one bucket either in acceptable or most suited section
                            [2] => Please Correct the scoring error
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 

    Setup Cultural Fit Assessment

    

    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Select  Questions for each cultural theme

    

        
            
                
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        

    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        
            
                
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        

    
                            [5] => 
            
                
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        
                            [6] => 
                
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
                            [7] => 
                    ( 0 Questions Selected )
                
                            [8] => 

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
                            [9] => 

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
                            [10] => 
                            
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                            [11] => 
                                Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            
                            [12] => 
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                            [13] => 
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => 0));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            [14] => 
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                            [15] => 
    element('score_slider');
    ?>

                            [16] => 
    
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));
        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));
        echo $this->Form->submit('Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => '', //$cfaCoreThemeCountsData['isLastCoreTheme'] ? 1 : 0,
            'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [17] => 
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));
        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));
        echo $this->Form->submit('Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => '', //$cfaCoreThemeCountsData['isLastCoreTheme'] ? 1 : 0,
            'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
                            [18] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [19] => 
    
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [20] => 
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [21] => 
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                            [4] => 
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
                            [1] => 
                                    
                            [2] => 
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaQuestions] => Array
        (
            [continue_cfa.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => isLastCoreTheme
                            [2] => Save & Exit
                            [3] => Clicking here will reset the order of score that you have set before
                            [4] => Click here to reverse the score
                        )

                    [submit] => Array
                        (
                            [0] => Set Score
                            [1] => Set report content
                            [2] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select 
                            [1] => since this is a critical theme, there should be at least one bucket either in acceptable or most suited section
                            [2] => Please Correct the scoring error
                        )

                    [h1] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 

    Select  Questions for each cultural theme

    

    

        
                
                    
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
            

                            [1] => 
                            [2] => 

        
                
                    
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
            
                            [3] => 
                
                    
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
                            [4] => 
                    
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                            [5] => 
                        ( 0 Questions Selected )
                    
                            [6] => 
                    
                         $CrptQuestion):
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
                            [7] => 
                         $CrptQuestion):
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                            [8] => 
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            [9] => 
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                
                            [10] => 
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            [11] => 
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                            [12] => 
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                            ?>

                                        
                            [13] => 
    element('score_slider');
    ?>

                            [14] => 
    
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));

        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));

        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [15] => 
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));

        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));

        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
                            [16] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [17] => 
    
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [18] => 
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [19] => 
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                            [1] => 
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                            [1] => 
                                        
                            [2] => 
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaQuestions] => Array
        (
            [edit.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Cultural Assessment
                            [1] => Done With Editing
                        )

                    [place_holders] => Array
                        (
                            [0] => user alias
                        )

                    [submit] => Array
                        (
                            [0] => Edit report content
                            [1] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select 
                            [1] => since this is a critical theme, there should be at least one bucket either in acceptable or most suited section
                            [2] => Please correct score error
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
    Select  Questions for each cultural theme

    
        
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'], 'class' => 'isCritical'));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    


                            [1] => 
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
                            [2] => 
             Cultural Fit Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
                            [4] => 
                            [5] => 
        
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'], 'class' => 'isCritical'));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    
                            [6] => 
            
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'], 'class' => 'isCritical'));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        
                            [7] => 
                
                    request->data['CfaCoreTheme']['name']; ?>
                
                
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'], 'class' => 'isCritical'));
                    ?> Critical theme 

                
                    request->data['CfaCtQuestion']);?> Questions selected
                
            
                            [8] => 
                    request->data['CfaCoreTheme']['name']; ?>
                
                            [9] => 
                    request->data['CfaCtQuestion']);?> Questions selected
                
                            [10] => 
                 $question): ?>
                        
                            

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
                            [11] => 

                                Form->checkbox("CfaCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));

                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.cfa_core_theme_id', array('value' => $this->request->data['CfaCoreTheme']['id']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CfaCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            [12] => 
                                
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CfaCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CfaCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                            [13] => 
    element('score_slider');
    ?>

                            [14] => 

    
    Form->button('Set Score', array('class' => 'btnBlack noSpace btn pull-right', 'id' => 'showScale',));

    echo $this->Form->submit('Edit report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));

    echo $this->Form->submit('Done With Editing', array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', 'id' => 'completeEditing', 'style' => 'display:none;'));



    ?>
    

                            [15] => 
    Html->image('ajax-loader_product.gif');?>

                            [16] => 
    
        
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [17] => 
        
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [18] => 
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => request->data['CfaCtQuestion']);?>
                            [1] => Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                            [2] => Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                            
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->hidden('CfaCoreTheme.id', array('value' => $this->request->data['CfaCoreTheme']['id']));

                    $checked = 'false';
                    echo $this->Form->checkbox('CfaCoreTheme.is_critical', array('checked' => $this->request->data['CfaCoreTheme']['is_critical'], 'id' => $this->request->data['CfaCoreTheme']['id'], 'class' => 'isCritical'));
                    ?> Critical theme 
                            [1] => 
                            [2] => 
                                    Form->checkbox("CfaCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                            [3] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaQuestions] => Array
        (
            [get_question_responses.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaQuestions] => Array
        (
            [select.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => isLastCoreTheme
                            [2] => Save & Exit
                            [3] => Clicking here will reset the order of score that you have set before
                            [4] => Click here to reverse the score
                        )

                    [submit] => Array
                        (
                            [0] => Set Score
                            [1] => Set report content
                            [2] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select 
                            [1] => since this is a critical theme, there should be at least one bucket either in acceptable or most suited section
                            [2] => Please Correct the scoring error
                        )

                    [h1] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 
    Select  Questions for each cultural theme

    
    

        
                
                    
                        
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            //                    pr($CrptQuestion);exit;
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
            

                            [1] => 
                            [2] => 

        
                
                    
                        
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            //                    pr($CrptQuestion);exit;
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
            
                            [3] => 
                
                    
                        
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                
                    
                         $CrptQuestion):
                            //                    pr($CrptQuestion);exit;
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
            
                            [4] => 
                    
                        
                        ( 0 Questions Selected )
                    
                    
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                
                            [5] => 
                        
                        ( 0 Questions Selected )
                    
                            [6] => 
                    
                         $CrptQuestion):
                            //                    pr($CrptQuestion);exit;
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                
                            [7] => 
                         $CrptQuestion):
                            //                    pr($CrptQuestion);exit;
                            ?>
                            
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            
                            [8] => 
                                
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                

                                
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            
                            [9] => 
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                    echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                    //if there is no alias then take it from here
                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                    echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $coreTheme['cfa_core_theme_id']));


                                    ?>

                                    
                                        
                                
                            [10] => 
                                    Alias for this question
                                    Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                    ?>
                                    
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                                
                            [11] => 
                                        
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                                        Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));
                                        if (count($cfaImages) >= 1) {
                                            echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                        }
                                        ?>
                                    
                            [12] => 
                                            Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                            echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));
                                            ?>

                                        
                            [13] => 
    element('score_slider');
    ?>

                            [14] => 
    
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));

        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));

        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [15] => 
        Form->submit('Set Score', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn',));

        echo $this->Form->submit('Set report content', array('class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'setContentBtn',));

        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
                            [16] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [17] => 
    
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [18] => 
        
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [19] => 
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                            [1] => 
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        Form->checkbox('CfaCoreTheme.is_critical', array('id' => 'critical', 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['cfa_core_theme_id'], 'checked' => $coreTheme['is_critical']));


                        echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $coreTheme['cfa_core_theme_id']), array('class' => 'ctOrgProductId'));

                        echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                        echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                        ?>
                        Critical theme 
                            [1] => 
                                        
                            [2] => 
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaScores] => Array
        (
            [add.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
    

    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        


                            [1] => 
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
                            [3] => 
                            [4] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [5] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.

                            [6] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [7] => Select pass score for this Assessment
                            [8] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [9] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [10] => 
                            [11] => 
                            [12] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [13] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [14] => 
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [15] => 
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [16] => This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            [17] => 

    
        Form->hidden('id', array('value' => $cftSliderData['id'], 'id' => 'cfaId'));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [18] => 
        Form->hidden('id', array('value' => $cftSliderData['id'], 'id' => 'cfaId'));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
                            [19] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                            [4] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaScores] => Array
        (
            [get_cfa_slider_data.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit pass score for this 
    
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    

                            [1] => Edit pass score for this 
                            [2] => 
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    
                            [3] => 
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [4] => 
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [5] => 
                            [6] => 
                            [7] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [8] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [9] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [10] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [11] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [12] => 
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.
        
                            [13] => 
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/CfaScores] => Array
        (
            [update.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
    

                            [1] => 
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
                            [3] => 
                            [4] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.

                            [5] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [6] => Select pass score for this Assessment
                            [7] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [8] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [9] => 
                            [10] => 
                            [11] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [12] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [13] => 
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [14] => 
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [15] => This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            [16] => 

    
        Form->hidden('id', array('value' => $sliderData['cfa_id']));
        echo $this->Form->hidden('min_pass_score', array('value' => $sliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $sliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [17] => 
        Form->hidden('id', array('value' => $sliderData['cfa_id']));
        echo $this->Form->hidden('min_pass_score', array('value' => $sliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $sliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
                            [18] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [add.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Cfa Title already exist
                        )

                    [title] => Array
                        (
                            [0] => Back
                            [1] => Save and Move to Next Step
                        )

                    [place_holders] => Array
                        (
                            [0] => eg. Branch Manager
                            [1] => Button title
                            [2] => http://example.com/test
                            [3] => Button title
                            [4] => http://example.com/test
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Create Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
        
    

                            [1] => 
        
             Create Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
        
    
                            [2] => 
             Create Cultural Fit Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
                            [4] => 
                            [5] => 
    Form->create('Cfa', array('class' => 'form-horizontal', 'id' => 'createJobRole'));
    ?>
    
        CFA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
        
    
    
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
    
    
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Success)*

        
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
    
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Fail) *

        
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
    
        
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
    
    
        
            Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));?>Choose five questions per page
        
    
    
        
            Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));?>Allow Anonymous Candidates 
        
    
    
        
            Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));?>Close the browser tab on clicking the button after assessment is completed
        
    
    
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
    
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    

    Form->end();
    ?>

                            [6] => 
        CFA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
        
    
                            [7] => 
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
        
                            [8] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
                            [9] => 
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
    
                            [10] => 
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
                            [11] => Enter the time period after which the candidate can retake this assessment (in days)
                            [12] => 
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
                            [13] => 
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
                            [14] => e.g. register and apply now
                            [15] => 
        Redirect URL(Success)*

        
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
                            [16] => 
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
                            [17] => e.g. http://example.com/test
                            [18] => 
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
                            [19] => 
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
                            [20] => e.g. register and apply now
                            [21] => 
        Redirect URL(Fail) *

        
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
                            [22] => 
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
                            [23] => e.g. http://example.com/test
                            [24] => 
        
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
    
                            [25] => 
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
                            [26] => 
        
            Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));?>Choose five questions per page
        
    
                            [27] => 
            Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));?>Choose five questions per page
        
                            [28] => 
        
            Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));?>Allow Anonymous Candidates 
        
    
                            [29] => 
            Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));?>Allow Anonymous Candidates 
        
                            [30] => 
        
            Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));?>Close the browser tab on clicking the button after assessment is completed
        
    
                            [31] => 
            Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));?>Close the browser tab on clicking the button after assessment is completed
        
                            [32] => 
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
                            [33] => 
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
                            [34] => 
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    
                            [35] => 
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                            [2] => *
                            [3] => *
                            [4] => *
                            [5] => *
                        )

                    [labels] => Array
                        (
                            [0] => CFA Title *
                            [1] => Retake Days *
                            [2] => Button Title(Success) *
                            [3] => Redirect URL(Success)*
                            [4] => Button Title(Fail)*
                            [5] => Redirect URL(Fail) *
                            [6] => Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));?>Choose five questions per page
                            [7] => Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));?>Allow Anonymous Candidates 
                            [8] => Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));?>Close the browser tab on clicking the button after assessment is completed
                            [9] => 
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [core_themes.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'core_themes', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        Form->create('CfaCoreTheme', array('url' => array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'core_themes', $hash), 'class' => 'competencySave'));
        ?>
         $coreTheme) {
                    ?>
                    
                        
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                        
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                    
                    
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    
                            [5] => 
                            
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        
                            [6] => 
                            Form->input('CfaCoreTheme.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['CoreTheme']['id'], 'class' => 'aliasTextBox_' . $coreTheme['CoreTheme']['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                            ?>

                            
                        
                            [7] => 
                            [8] => 
                            [9] => 
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
                            [10] => 
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                            [11] => 
            Html->image('ajax-loader_product.gif');?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                                Form->checkbox('CfaCoreTheme.' . $key . '.core_theme_id', array('value' => $coreTheme['CoreTheme']['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['CoreTheme']['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['CoreTheme']['id'], 'type' => 'checkbox', 'hiddenField' => false));

                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.name', array('value' => $coreTheme['CoreTheme']['name']));
                                echo $this->Form->hidden('CfaCoreTheme.' . $key . '.cfa_id', array('value' => $cfaId));

                                ?>
                                 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [edit.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Cfa Title already exist
                        )

                    [title] => Array
                        (
                            [0] => Back
                            [1] => Save
                        )

                    [place_holders] => Array
                        (
                            [0] => eg. Branch Manager
                            [1] => Button title
                            [2] => http://example.com/test
                            [3] => Button title
                            [4] => http://example.com/test
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Create Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    


                            [1] => 
        
             Create Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    
                            [2] => 
             Create Cultural Fit Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
                            [4] => 
                            [5] => 
    Form->create('Cfa', array('class' => 'form-horizontal', 'id' => 'createJobRole'));
    ?>
    
        CFA Title *

        
            
                Form->hidden('id', array('value' => $cfaId));
                echo $this->Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    

    
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
    
    
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>

            e.g. register and apply now
        
    
    
        Redirect URL(Success) *

        
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
    
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Fail) *

        
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
    
        
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
    
    
        
            
                Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
    
    
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    
    
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    

    
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    

    
        
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
    

    Form->end();
    ?>

                            [6] => 
        CFA Title *

        
            
                Form->hidden('id', array('value' => $cfaId));
                echo $this->Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    
                            [7] => 
            
                Form->hidden('id', array('value' => $cfaId));
                echo $this->Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
                            [8] => 
                Form->hidden('id', array('value' => $cfaId));
                echo $this->Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
                            [9] => 
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
    
                            [10] => 
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
                            [11] => Enter the time period after which the candidate can retake this assessment (in days)
                            [12] => 
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>

            e.g. register and apply now
        
    
                            [13] => 
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>

            e.g. register and apply now
        
                            [14] => e.g. register and apply now
                            [15] => 
        Redirect URL(Success) *

        
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
                            [16] => 
            Form->input('redirect_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
                            [17] => e.g. http://example.com/test
                            [18] => 
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
    
                            [19] => 
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
                            [20] => e.g. register and apply now
                            [21] => 
        Redirect URL(Fail) *

        
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
                            [22] => 
            Form->input('redirect_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
                            [23] => e.g. http://example.com/test
                            [24] => 
        
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
    
                            [25] => 
            Html->tag('label', $this->Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,)) . 'Enable demographics page', array('class' => 'checkbox'));
            ?>
        
                            [26] => 
        
            
                Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
    
                            [27] => 
            
                Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
                            [28] => 
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    
                            [29] => 
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
                            [30] => 
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    
                            [31] => 
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
                            [32] => 
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
                            [33] => 
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
                            [34] => 
        
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
    
                            [35] => 
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                            [2] => *
                            [3] => *
                            [4] => *
                            [5] => *
                        )

                    [labels] => Array
                        (
                            [0] => CFA Title *
                            [1] => Retake Days *
                            [2] => Button Title(Success) *
                            [3] => Redirect URL(Success) *
                            [4] => Button Title(Fail)*
                            [5] => Redirect URL(Fail) *
                            [6] => 
                Form->checkbox('questions_per_page', array('id' => 'questions_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
                            [7] => 
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
                            [8] => 
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
                            [9] => 
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [edit_cfa.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Cultural Fit Assessment
                            [1] => Edit Behaviour
                            [2] => Delete Cultural Theme
                            [3] => Delete Cultural Theme
                            [4] => Edit Cultural theme
                            [5] => Edit Cultural Fit Assessment
                            [6] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => ".$message."
                            [1] => There is only one cultural theme,You not able to delete
                        )

                    [submit] => Array
                        (
                            [0] => Done With Editing
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
        
    

    
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $cfaLink = array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit', $hash);
                $cfaAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                //            if($jobRole['JobRole']['is_invited']) {
                //                $jobRoleLink = 'javascript:void(0)';
                //                $message = "You can not edit the basic information, as this role is used in other tools";
                //                $jobRoleAttr['onclick'] = "alert('".$message."')";
                //            }
                echo $this->Html->link('', $cfaLink, $cfaAttr);

                ?>
            
        
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CfaCoreTheme']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if ($culturalAssessment['CfaCoreTheme']['cfa_core_theme_candidates_count'] == 0) {
                            echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'delete', $culturalAssessment['CfaCoreTheme']['id'], $hash

                            ), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', 'javascript:alert("Unable to delete cultural theme, it is already in use.")', array('title' => 'Delete Cultural Theme', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                        }

                        echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_questions', 'action' => 'edit', $hash, $culturalAssessment['CfaCoreTheme']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                
    
        
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'edit', $hash), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                
            
        

    

                            [1] => 
        
            
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
        
    
                            [2] => 
            
        
                            [3] => 
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'add', $hash), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
                            [4] => 
                            [5] => 
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $cfaLink = array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit', $hash);
                $cfaAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                //            if($jobRole['JobRole']['is_invited']) {
                //                $jobRoleLink = 'javascript:void(0)';
                //                $message = "You can not edit the basic information, as this role is used in other tools";
                //                $jobRoleAttr['onclick'] = "alert('".$message."')";
                //            }
                echo $this->Html->link('', $cfaLink, $cfaAttr);

                ?>
            
        
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CfaCoreTheme']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if ($culturalAssessment['CfaCoreTheme']['cfa_core_theme_candidates_count'] == 0) {
                            echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'delete', $culturalAssessment['CfaCoreTheme']['id'], $hash

                            ), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', 'javascript:alert("Unable to delete cultural theme, it is already in use.")', array('title' => 'Delete Cultural Theme', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                        }

                        echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_questions', 'action' => 'edit', $hash, $culturalAssessment['CfaCoreTheme']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                
                            [6] => 
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $cfaLink = array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit', $hash);
                $cfaAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                //            if($jobRole['JobRole']['is_invited']) {
                //                $jobRoleLink = 'javascript:void(0)';
                //                $message = "You can not edit the basic information, as this role is used in other tools";
                //                $jobRoleAttr['onclick'] = "alert('".$message."')";
                //            }
                echo $this->Html->link('', $cfaLink, $cfaAttr);

                ?>
            
        
                            [7] => 
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $cfaLink = array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit', $hash);
                $cfaAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                //            if($jobRole['JobRole']['is_invited']) {
                //                $jobRoleLink = 'javascript:void(0)';
                //                $message = "You can not edit the basic information, as this role is used in other tools";
                //                $jobRoleAttr['onclick'] = "alert('".$message."')";
                //            }
                echo $this->Html->link('', $cfaLink, $cfaAttr);

                ?>
            
                            [8] => 
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CfaCoreTheme']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if ($culturalAssessment['CfaCoreTheme']['cfa_core_theme_candidates_count'] == 0) {
                            echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'delete', $culturalAssessment['CfaCoreTheme']['id'], $hash

                            ), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', 'javascript:alert("Unable to delete cultural theme, it is already in use.")', array('title' => 'Delete Cultural Theme', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                        }

                        echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_questions', 'action' => 'edit', $hash, $culturalAssessment['CfaCoreTheme']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                            [9] => 

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CfaCoreTheme']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if ($culturalAssessment['CfaCoreTheme']['cfa_core_theme_candidates_count'] == 0) {
                            echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'delete', $culturalAssessment['CfaCoreTheme']['id'], $hash

                            ), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', 'javascript:alert("Unable to delete cultural theme, it is already in use.")', array('title' => 'Delete Cultural Theme', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                        }

                        echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_questions', 'action' => 'edit', $hash, $culturalAssessment['CfaCoreTheme']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            
                            [10] => 

                        
                                        
                                            
                                        
                                            
                                    

                                    
                            [11] => 
                                            
                            [12] => 
        
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'edit', $hash), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                
            
        

    
                            [13] => 
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'edit', $hash), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                
            
        
                            [14] => 
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'crpts', 'controller' => 'cfa_parameters', 'action' => 'edit', $hash), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
                            [15] => 
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                
            
                            [16] => 
                    
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                
                            [17] => 
                        User Aliases

                        
                         $parameter) {

                                ?>
                                

                                    
                                
                            [18] => 
                            [19] => 
    
    Form->submit('Done With Editing', array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', "id" => "completeEditing"));
    ?>

                        )

                    [span] => Array
                        (
                            [0] => Cultural Fit Assessment Parameters
                            [1] => 
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_questions'];
                            }
                            ?>
                        
                            [2] => Selected Number of Questions :
                            [3] => 
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['CfaParameter']['no_of_responses'];
                    }
                    ?>
                
                            [4] => Selected Number of Responses :
                            [5] => 
                    Responses :
                
                            [6] => Responses :
                        )

                    [labels] => Array
                        (
                            [0] => Critical theme
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [get_cfa_slider_data.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit pass score for this 
    
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    

                            [1] => Edit pass score for this 
                            [2] => 
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    
                            [3] => 
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [4] => 
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [5] => 
                            [6] => 
                            [7] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [8] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [9] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [10] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [11] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [12] => 
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
                            [13] => 
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New
                            [1] => Click Here to Complete
                            [2] => View CFA
                            [3] => Edit CFA
                            [4] => Delete CFA
                            [5] => Delete CFA
                        )

                    [place_holders] => Array
                        (
                            [0] => Search
                        )

                    [alert_messages] => Array
                        (
                            [0] => Can not edit overall score as there are live users
                            [1] => Assessment can not be edited, error retrieving status of active candidates.
                            [2] => Assessment can not be edited as there are live users
                            [3] => You can not delete Cfa
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            CFA  CFA Listing
        
        
            Cultural Fit Assessment
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create CFA', true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            ?>
        

        Form->create('');
        //            ?>
         'Filter By',
        //                    'name' => 'Name'
        //                );
        //
        //                echo $this->Form->select('filter',
        //                    $options,
        //                    array(
        //                         'label' => false,
        //                         'value' => '',
        //                         'class' => 'cstSelList',
        //                         'div'   => false,
        //                         'empty' => false,
        //                         'id'    => 'ProductsUserFilter'
        //                    ));
        //                ?>
        Form->input('title',
        //                    array(
        //                         'label'       => false,
        //                         'div'         => false,
        //                         'id'          => 'name',
        //                         'value'       => '',
        //                         'placeholder' => 'Search'
        //                    ));
        //                echo $this->Form->submit('',
        //                    array(
        //                         'div'   => false,
        //                         'class' => 'searchIcon'
        //                    ));
        //                ?>
        Form->end(); ?>
        
    

                            [1] => 
        
            CFA  CFA Listing
        
        
            Cultural Fit Assessment
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create CFA', true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            ?>
        

        Form->create('');
        //            ?>
         'Filter By',
        //                    'name' => 'Name'
        //                );
        //
        //                echo $this->Form->select('filter',
        //                    $options,
        //                    array(
        //                         'label' => false,
        //                         'value' => '',
        //                         'class' => 'cstSelList',
        //                         'div'   => false,
        //                         'empty' => false,
        //                         'id'    => 'ProductsUserFilter'
        //                    ));
        //                ?>
        Form->input('title',
        //                    array(
        //                         'label'       => false,
        //                         'div'         => false,
        //                         'id'          => 'name',
        //                         'value'       => '',
        //                         'placeholder' => 'Search'
        //                    ));
        //                echo $this->Form->submit('',
        //                    array(
        //                         'div'   => false,
        //                         'class' => 'searchIcon'
        //                    ));
        //                ?>
        Form->end(); ?>
        
    
                            [2] => 
            CFA  CFA Listing
        
                            [3] => 
            Cultural Fit Assessment
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create CFA', true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            ?>
        
                            [4] => 
    
                    
                    ">
                        

                        ">
                    
                    
                        Assessment created successfully
                            Recent Activities
                            Completed adding basic information
                                Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed setting parameters
                                    Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed setting parameters
                                    Completed selecting questions
                                    html->tag('span', '' . 'Overall Score', array('class' => $scoreLinkClass, 'id' => 'scoreEditLink', 'data-id' => $cfa['Cfa']['id']));
                                if ($themeVersion == 0) {
                                    echo $this->Html->link($this->Html->tag('i', '', array('class' => 'icon-wrench')) . 'Manage CMS', array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $cfa['Cfa']['id'], 1), array('class' => 'manageCMSLink', 'escape' => false));
                                }

                                ?>
                            

                            Form->button('Copy link to clipboard', array('class' => 'btn LinkBtn', 'link' => $publicLink . $cfa['Cfa']['hash']));
                        } else {

                            echo $this->Html->link(__('Click Here to Complete'), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'select', $cfa['Cfa']['hash']), array('class' => 'btn', 'title' => 'Click Here to Complete'));
                        }
                        ?>
                    
                    
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'view', $cfa['Cfa']['hash']), array('title' => 'View CFA', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $cfa['Cfa']['hash']), array('title' => 'Edit CFA', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $cfa['Cfa']['id']));

                        if ($cfa['Cfa']['cfa_candidate_count']  0) {
                                $message = 'Are you sure you want to delete this Cfa, as it is used in job role';
                            }
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'delete', $cfa['Cfa']['id']), array('title' => 'Delete CFA', 'escape' => false,), __($message));
                        } else {
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteCfa'))), "#", array('title' => 'Delete CFA', 'escape' => false,));
                        }
                        ?>
                    
                
                
    

                            [5] => 
                            [6] => ">
                        

                        ">
                    
                            [7] => ">
                            [8] => 
                        Assessment created successfully
                            Recent Activities
                            Completed adding basic information
                                Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed setting parameters
                                    Completed adding basic information
                                    Completed selecting cultural themes
                                    Completed setting parameters
                                    Completed selecting questions
                                    html->tag('span', '' . 'Overall Score', array('class' => $scoreLinkClass, 'id' => 'scoreEditLink', 'data-id' => $cfa['Cfa']['id']));
                                if ($themeVersion == 0) {
                                    echo $this->Html->link($this->Html->tag('i', '', array('class' => 'icon-wrench')) . 'Manage CMS', array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $cfa['Cfa']['id'], 1), array('class' => 'manageCMSLink', 'escape' => false));
                                }

                                ?>
                            

                            Form->button('Copy link to clipboard', array('class' => 'btn LinkBtn', 'link' => $publicLink . $cfa['Cfa']['hash']));
                        } else {

                            echo $this->Html->link(__('Click Here to Complete'), array('plugin' => 'crpts', 'controller' => 'cfa_core_themes', 'action' => 'select', $cfa['Cfa']['hash']), array('class' => 'btn', 'title' => 'Click Here to Complete'));
                        }
                        ?>
                    
                            [9] => html->tag('span', '' . 'Overall Score', array('class' => $scoreLinkClass, 'id' => 'scoreEditLink', 'data-id' => $cfa['Cfa']['id']));
                                if ($themeVersion == 0) {
                                    echo $this->Html->link($this->Html->tag('i', '', array('class' => 'icon-wrench')) . 'Manage CMS', array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $cfa['Cfa']['id'], 1), array('class' => 'manageCMSLink', 'escape' => false));
                                }

                                ?>
                            
                            [10] => 
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'view', $cfa['Cfa']['hash']), array('title' => 'View CFA', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $cfa['Cfa']['hash']), array('title' => 'Edit CFA', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $cfa['Cfa']['id']));

                        if ($cfa['Cfa']['cfa_candidate_count']  0) {
                                $message = 'Are you sure you want to delete this Cfa, as it is used in job role';
                            }
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn'))), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'delete', $cfa['Cfa']['id']), array('title' => 'Delete CFA', 'escape' => false,), __($message));
                        } else {
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteCfa'))), "#", array('title' => 'Delete CFA', 'escape' => false,));
                        }
                        ?>
                    
                            [11] => 
                            [12] => 
                            [13] => 
                        )

                    [span] => Array
                        (
                            [0] => CFA
                            [1] => 
                            [2] => CFA Listing
                            [3] => Assessment created successfully
                            [4] => Recent Activities
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [preview.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add new theme
                            [1] => Edit Assessment
                        )

                    [alert_messages] => Array
                        (
                            [0] => You can not edit this CFA as there are active users, please try again after sometime
                        )

                    [h1] => Array
                        (
                            [0] => Preview Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Preview Cultural Fit Assessment

    
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
    
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                

                            [1] => 
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
                            [2] => 
                            [3] => 
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                
                            [4] => 
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                
                            [5] => 
                
                    
                          Critical theme 
                            
                            [6] => 
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                            [7] => 
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                            [8] => 
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                            [9] => 
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                            [10] => 
                                                        
                            [11] => 
                            [12] => The Scores have been reversed for this question
                                                    
                        )

                    [span] => Array
                        (
                            [0] => 
            
                            [1] => 
                    
                            [2] => 
                                       
                        )

                    [labels] => Array
                        (
                            [0] =>   Critical theme 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [questions.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => isLastCoreTheme
                            [2] => Save & Continue
                            [3] => Save & Exit
                            [4] => Clicking here will reset the order of score that you have set before
                            [5] => Click here to reverse the score
                        )

                    [submit] => Array
                        (
                            [0] => Set Score
                            [1] => Save 
                            [2] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select 
                            [1] => Please Correct the scoring error
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                            [1] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 

    Setup Cultural Fit Assessment

    

    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Select  Questions for each cultural theme

    

        
            
                
                    
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        

    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        
            
                
                    
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        

    
                            [5] => 
            
                
                    
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
            

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
        
                            [6] => 
                
                    
                    ( 0 Questions Selected )
                
                
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
            
                            [7] => 
                    
                    ( 0 Questions Selected )
                
                            [8] => 

                

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
            
                            [9] => 

                     $CrptQuestion):
                        ?>

                        
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                        
                            [10] => 
                            
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                        
                            [11] => 
                                Form->hidden(
                                //                                'CfaCtQuestion..' . $CrptQuestionsKey . '.id',
                                //                                array(
                                //                                     'value' => $CrptQuestion['primaryId']
                                //                                )
                                //                            );
                                echo $this->Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['CrptQuestion']['id'], 'class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id'], 'id' => $CrptQuestion['CrptQuestion']['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => ''));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['CrptQuestion']['title']));

                                echo $this->Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.cfa_core_theme_id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']));


                                ?>

                                
                                    
                            
                            [12] => 
                                Alias for this question
                                Form->textarea('CfaCtQuestion.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['CrptQuestion']['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => ''));
                                ?>
                                
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            
                            [13] => 
                                    
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                                    Form->hidden('CfaCtQuestion.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage__' . $CrptQuestion['CrptQuestion']['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['CrptQuestion']['assessment_image_id']) ? $CrptQuestion['CrptQuestion']['assessment_image_id'] : $assessmentImageId));


                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));

                                    ?>
                                
                            [14] => 
                                        Form->checkbox('CfaCtQuestion.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $cfaCoreTheme['CfaCoreTheme']['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => ''));

                                        echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                        ?>

                                    
                            [15] => 
    
        
            Text for report
            
                    1. Low description

                    
                        
                
                
                    2. High description

                    
                        
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            
                    
                
    

                            [16] => 
        
            Text for report
            
                    1. Low description

                    
                        
                
                
                    2. High description

                    
                        
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            
                    
                
    
                            [17] => 
            Text for report
            
                    1. Low description

                    
                        
                
                
                    2. High description

                    
                        
                
                Statements for reports
                    
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            
                    
                    
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            
                    
                    
                        3. If candidate falls in the area Most suited

                        
                            
                    
                    
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            
                    
                    
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            
                    
                
                            [18] => 
                    1. Low description

                    
                        
                
                            [19] => 
                        
                            [20] => 
                    2. High description

                    
                        
                
                            [21] => 
                        
                            [22] => 
                        1. If candidate falls in the area Fail (less than most suited)

                        
                            
                    
                            [23] => 
                            
                            [24] => 
                        2. If candidate falls in the area Acceptable (less than most suited)

                        
                            
                    
                            [25] => 
                            
                            [26] => 
                        3. If candidate falls in the area Most suited

                        
                            
                    
                            [27] => 
                            
                            [28] => 
                        4. If candidate falls in the area Acceptable (greater than most suited)

                        
                            
                    
                            [29] => 
                            
                            [30] => 
                        5. If candidate falls in the area Fail (greater than most suited)

                        
                            
                    
                            [31] => 
                            
                            [32] => 
    
        Form->submit('Set Score', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn', /*'id' => 'complete',*/ /*'style' => "display: none;"*/));


        /*echo $this->Form->submit($cfaCoreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array(
                                                                                                                              'class'     => 'btnBlack noSpaceRight btn pull-right whichButtonClicked',
                                                                                                                              'title'     => $cfaCoreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue',
                                                                                                                              'data-name' => '2',
                                                                                                                              'div'       => false,
                                                                                                                              'id'        => 'saveQuestions',
                                                                                                                               'style'     => "display: none;"
                                                                                                                         ));*/

        echo $this->Form->submit('Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => '', //$cfaCoreThemeCountsData['isLastCoreTheme'] ? 1 : 0,
            'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [33] => 
        Form->submit('Set Score', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn', /*'id' => 'complete',*/ /*'style' => "display: none;"*/));


        /*echo $this->Form->submit($cfaCoreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array(
                                                                                                                              'class'     => 'btnBlack noSpaceRight btn pull-right whichButtonClicked',
                                                                                                                              'title'     => $cfaCoreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue',
                                                                                                                              'data-name' => '2',
                                                                                                                              'div'       => false,
                                                                                                                              'id'        => 'saveQuestions',
                                                                                                                               'style'     => "display: none;"
                                                                                                                         ));*/

        echo $this->Form->submit('Save & Continue', array('class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', 'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => '', //$cfaCoreThemeCountsData['isLastCoreTheme'] ? 1 : 0,
            'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
                            [34] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [35] => 
    
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [36] => 
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [37] => 
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                            [4] => 
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->checkbox('CfaCoreTheme.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $cfaCoreTheme['CfaCoreTheme']['id']));


                    echo $this->Form->hidden('CfaCoreTheme.id', array('value' => $cfaCoreTheme['CfaCoreTheme']['id']), array('class' => 'ctOrgProductId'));

                    echo $this->Form->hidden('CfaCoreTheme.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                    echo $this->Form->hidden('CfaCoreTheme.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                    ?>
                    Critical theme 
                            [1] => 
                                    
                            [2] => 1. Low description
                            [3] => 2. High description
                            [4] => 1. If candidate falls in the area Fail (less than most suited)
                            [5] => 2. If candidate falls in the area Acceptable (less than most suited)
                            [6] => 3. If candidate falls in the area Most suited
                            [7] => 4. If candidate falls in the area Acceptable (greater than most suited)
                            [8] => 5. If candidate falls in the area Fail (greater than most suited)
                            [9] => 
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [report.ctp] => Array
                (
                    [h1] => Array
                        (
                            [0] => Report of 
                        )

                    [div] => Array
                        (
                            [0] => 

    Report of 

    
    
        

            
            Has  the CFA assessment.

            Report will be shown very soon, as it is under progress

            
    

    

    

                            [1] => 
                            [2] => 

    
                        )

                    [span] => Array
                        (
                            [0] => 

            
            Has  the CFA assessment.

            Report will be shown very soon, as it is under progress

            
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [report_expiry.ctp] => Array
                (
                    [h1] => Array
                        (
                            [0] => This report has been expired. Please click on the 'More Details' link from taleo dashboard
                        )

                    [div] => Array
                        (
                            [0] => 

    This report has been expired. Please click on the 'More Details' link from taleo dashboard


                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [set_parameters.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment Parameters
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment Parameters

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Form->create('Cfa', array('url' => array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'set_parameters', $hash)));
    ?>
    
        
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
    Form->end();?>

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 
        
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [5] => 
            
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
            
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
                            [6] => 
                Select max. no. of questions for each Cultural Theme
                Form->input('CfaParameter.no_of_questions', array('label' => false, 'options' => $questionOptions, 'id' => 'totalQuestions'));


                ?>
            
                            [7] => 
                Select no. of responses for each question
                 4, '5' => 5, '6' => 6);
                echo $this->Form->input('CfaParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
                            [8] => 
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('CfaResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('CfaResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('CfaResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [set_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
    

    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        


                            [1] => 
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
                            [3] => 
                            [4] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [5] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.

                            [6] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [7] => Select pass score for this Assessment
                            [8] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [9] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [10] => 
                            [11] => 
                            [12] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [13] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [14] => 
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [15] => 
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [16] => This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            [17] => 

    
        Form->hidden('id', array('value' => $cftSliderData['id'], 'id' => 'cfaId'));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [18] => 
        Form->hidden('id', array('value' => $cftSliderData['id'], 'id' => 'cfaId'));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
                            [19] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                            [4] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Cfas] => Array
        (
            [view.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Manage CMS
                            [1] => Edit Assessment
                            [2] => Delete Assessment
                            [3] => Delete Assessment
                            [4] => Back
                        )

                    [place_holders] => Array
                        (
                            [0] => Start Date
                            [1] => End Date
                            [2] => Search
                        )

                    [para_message] => Array
                        (
                            [0] => <p class="noteText pull-left">Passing Score for this Cultural Theme:</p>
                        )

                    [alert_messages] => Array
                        (
                            [0] => Assessment can not be edited, error retrieving status of active candidates.
                            [1] => Assessment can not be edited as there are live users
                        )

                    [h1] => Array
                        (
                            [0] => Preview Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 

    Html->link(__($this->Html->tag('i', '', array('class' => 'icon-wrench iconManageCMS')), true), array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $cfa['Cfa']['id'], 1), array('title' => 'Manage CMS', 'escape' => false, 'class' => 'btn'));
    }

    echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $cfa['Cfa']['hash']), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn checkCandidateActiveStatus', 'data-id' => $cfa['Cfa']['id']));


    if ($cfa['Cfa']['cfa_candidate_count']  0) {
            $message = 'Are you sure you want to delete this Cfa, as it is used in job role';
        }

        echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'delete', $cfa['Cfa']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'), __($message));
    } else {
        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteIcon'))), 'javascript:alert("Unable to delete Cfa, it is already in use.")', array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));
    }
    ?>


    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>






    
        CFA: 
                    
    
    
        Status :
                    
                        
        
    


Candidates
    Detailed View
    CFA Information



    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    


    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                


    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            







                            [1] => 
    Html->link(__($this->Html->tag('i', '', array('class' => 'icon-wrench iconManageCMS')), true), array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $cfa['Cfa']['id'], 1), array('title' => 'Manage CMS', 'escape' => false, 'class' => 'btn'));
    }

    echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'edit_cfa', $cfa['Cfa']['hash']), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn checkCandidateActiveStatus', 'data-id' => $cfa['Cfa']['id']));


    if ($cfa['Cfa']['cfa_candidate_count']  0) {
            $message = 'Are you sure you want to delete this Cfa, as it is used in job role';
        }

        echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'delete', $cfa['Cfa']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'), __($message));
    } else {
        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteIcon'))), 'javascript:alert("Unable to delete Cfa, it is already in use.")', array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));
    }
    ?>

                            [2] => 
    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>

                            [3] => 
                            [4] => 



    
        CFA: 
                    
    
    
        Status :
                    
                        
        
    


Candidates
    Detailed View
    CFA Information



    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    


    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                


    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            






                            [5] => 

    
        CFA: 
                    
    
    
        Status :
                    
                        
        
    


Candidates
    Detailed View
    CFA Information



    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    


    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                


    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            




                            [6] => 
    
        CFA: 
                    
    
    
        Status :
                    
                        
        
    

                            [7] => 
        CFA: 
                    
    
                            [8] => 
        Status :
                    
                        
        
    
                            [9] => Status :
                    
                        
        
                            [10] => 
Candidates
    Detailed View
    CFA Information



    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    


    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                


    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            


                            [11] => 


    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    


    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                


    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            

                            [12] => 
    
        Filter Candidates:
        Download Report
    

    
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    

    
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    

                            [13] => 
        Filter Candidates:
        Download Report
    
                            [14] => 
        
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
        
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        

        
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
        

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
    
                            [15] => 
             'All', 2 => 'Candidates passed CFA', 3 => 'Candidates failed CFA');

            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
            echo $this->Form->hidden('cfaId', array('value' => isset($cfa['Cfa']['id']) ? $cfa['Cfa']['id'] : '', 'id' => 'cfaId'));

            ?>
        
                            [16] => 
            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
            ?>
        
                            [17] => 
            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
            ?>
        
                            [18] => 

            
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            

            
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            

            
        
                            [19] => 
                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_number' => 'Certificate Number', 'country' => 'Country');

                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                ?>
            
                            [20] => 
                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                ?>
            
                            [21] => 
                            [22] => 
        element('Crpts.cfa_candidates_list', array('candidateList' => $candidatesList, 'cfaHash' => isset($cfa['Cfa']['hash']) ? $cfa['Cfa']['hash'] : ''));?>
    
                            [23] => 
    Preview Cultural Fit Assessment
    
    Candidate has to select country while taking an assessment
     1) { ?>
    Chosen five questions per page
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                

                            [24] => 
                            [25] => 
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                
                            [26] => 
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                
                            [27] => 
                
                    
                          Critical theme 
                            
                            [28] => 
                        
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                            [29] => 
                            
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                            [30] => 
                                
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                            [31] => 
                                    Passing Score for this Cultural Theme:

                                    
                                        
                                            
                                        
                                            
                                    
                                
                            [32] => 
                                        
                                            
                                        
                                            
                                    
                            [33] => 
                                            
                            [34] => 
                                            
                            [35] => 
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                            [36] => 
                                                        
                            [37] => 
                            [38] => The Scores have been reversed for this question
                                                    
                            [39] => 
    
    Configured for anonymous users
                Demographics page is configured
                
            No information to display
            
                            [40] => 
                            [41] => 
                        )

                    [span] => Array
                        (
                            [0] => 
                    
                            [1] => 
                        
                            [2] => Candidate has to select country while taking an assessment
                            [3] => Chosen five questions per page
                            [4] => 
            
                            [5] => 
                    
                        )

                    [labels] => Array
                        (
                            [0] =>   Critical theme 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Countries] => Array
        (
            [index.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Type here to search
                        )

                    [title] => Array
                        (
                            [0] => label
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
    

    
        element('product/left_side_bar'); ?>

        
            
                Select Countries from the global list
            
            
                Country Name 

                

                    Form->input('title', array('label' => false, 'div' => false, 'id' => 'countries', 'value' => '', 'type' => 'text', 'placeholder' => 'Type here to search'));
                    ?>

                    
                
                
                        Html->image('ajax-loader_product_sml.gif');?>
                
            
            
                
                    List of countries added
                
                
                       >X
                    
                    
        
    

                            [1] => 
        
            Parameters & settings
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        element('product/left_side_bar'); ?>

        
            
                Select Countries from the global list
            
            
                Country Name 

                

                    Form->input('title', array('label' => false, 'div' => false, 'id' => 'countries', 'value' => '', 'type' => 'text', 'placeholder' => 'Type here to search'));
                    ?>

                    
                
                
                        Html->image('ajax-loader_product_sml.gif');?>
                
            
            
                
                    List of countries added
                
                
                       >X
                    
                    
        
    
                            [4] => 
            
                Select Countries from the global list
            
            
                Country Name 

                

                    Form->input('title', array('label' => false, 'div' => false, 'id' => 'countries', 'value' => '', 'type' => 'text', 'placeholder' => 'Type here to search'));
                    ?>

                    
                
                
                        Html->image('ajax-loader_product_sml.gif');?>
                
            
            
                
                    List of countries added
                
                
                       >X
                    
                    
        
                            [5] => 
                Select Countries from the global list
            
                            [6] => 
                Country Name 

                

                    Form->input('title', array('label' => false, 'div' => false, 'id' => 'countries', 'value' => '', 'type' => 'text', 'placeholder' => 'Type here to search'));
                    ?>

                    
                
                
                        Html->image('ajax-loader_product_sml.gif');?>
                
            
                            [7] => 

                    Form->input('title', array('label' => false, 'div' => false, 'id' => 'countries', 'value' => '', 'type' => 'text', 'placeholder' => 'Type here to search'));
                    ?>

                    
                
                            [8] => 
                
                    List of countries added
                
                
                       >X
                    
                    
                            [9] => 
                    List of countries added
                
                        )

                    [span] => Array
                        (
                            [0] => 
                        Html->image('ajax-loader_product_sml.gif');?>
                
                            [1] => 
                       >X
                    
                        )

                    [labels] => Array
                        (
                            [0] => Select Countries from the global list
                            [1] => Country Name 
                            [2] => List of countries added
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Elements] => Array
        (
            [cfa_candidates_list.ctp] => Array
                (
                    [alert_messages] => Array
                        (
                            [0] => Unable to send email to anonymous candidate
                        )

                    [title] => Array
                        (
                            [0] => Click here to view report
                            [1] => click here to send mail
                        )

                    [div] => Array
                        (
                            [0] => 
    Paginator->options(array('url' => array('plugin' => 'Crpts', 'controller' => 'cfas', 'action' => 'cfa_candidates_list')));
    ?>
    element('pagination');?>

                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Elements] => Array
        (
            [report_text_behaviour.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.data.data.statements.high');?>
                Form->hidden('RpaBehaviour.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.candidate_data.data.statements.high');?>
                Form->hidden('RpaBehaviour.candidate_data.data.statements.low');?>
            
    

                            [1] => 
        
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.data.data.statements.high');?>
                Form->hidden('RpaBehaviour.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.candidate_data.data.statements.high');?>
                Form->hidden('RpaBehaviour.candidate_data.data.statements.low');?>
            
    
                            [2] => 
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.data.data.statements.high');?>
                Form->hidden('RpaBehaviour.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('RpaBehaviour.candidate_data.data.statements.high');?>
                Form->hidden('RpaBehaviour.candidate_data.data.statements.low');?>
            
                            [3] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements1');
                        ?>
                    
                
                            [4] => 
                        Form->textarea('RpaBehaviour.data.data.statements.statements1');
                        ?>
                    
                            [5] => 
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements2');
                        ?>
                    
                
                            [6] => 
                        Form->textarea('RpaBehaviour.data.data.statements.statements2');
                        ?>
                    
                            [7] => 
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.data.data.statements.statements3');
                        ?>
                    
                
                            [8] => 
                        Form->textarea('RpaBehaviour.data.data.statements.statements3');
                        ?>
                    
                            [9] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements1');
                        ?>
                    
                
                            [10] => 
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements1');
                        ?>
                    
                            [11] => 
                    2. If candidate falls in OK fit

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements2');
                        ?>
                    
                
                            [12] => 
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements2');
                        ?>
                    
                            [13] => 
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements3');
                        ?>
                    
                
                            [14] => 
                        Form->textarea('RpaBehaviour.candidate_data.data.statements.statements3');
                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => 1. If candidate falls in Risk
                            [1] => 2. If candidate falls in OK fit
                            [2] => 3. If candidate falls in Strong fit *
                            [3] => 1. If candidate falls in Risk
                            [4] => 2. If candidate falls in OK fit
                            [5] => 3. If candidate falls in Strong fit *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Elements] => Array
        (
            [report_text_cfa.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Text for report
            Report contents for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit *

                        
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                    
                
            Report contents for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.candidate_data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit

                        

                        
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                
            
    

                            [1] => 
        
            Text for report
            Report contents for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit *

                        
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                    
                
            Report contents for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.candidate_data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit

                        

                        
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                
            
    
                            [2] => 
            Text for report
            Report contents for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit *

                        
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                    
                
            Report contents for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.candidate_data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit

                        

                        
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                
            
                            [3] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit *

                        
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                    
                
                            [4] => 
                        Form->textarea('Cfa.data.Statements.statement1', array('label' => false,));
                        ?>
                    
                            [5] => 
                        2. If candidate falls in OK fit *

                        
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                    
                            [6] => 
                            Form->textarea('Cfa.data.Statements.statement2', array('label' => false,));
                            ?>
                        
                            [7] => 
                            3. If candidate falls in Strong fit

                            

                            
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                            [8] => 
                                Form->textarea('Cfa.data.Statements.statement3', array('label' => false,));
                                ?>
                            
                            [9] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('Cfa.candidate_data.Statements.statement1', array('label' => false,));
                        ?>
                    
                    
                        2. If candidate falls in OK fit

                        

                        
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                
                            [10] => 
                        Form->textarea('Cfa.candidate_data.Statements.statement1', array('label' => false,));
                        ?>
                    
                            [11] => 
                        2. If candidate falls in OK fit

                        

                        
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                        
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                            [12] => 
                            Form->textarea('Cfa.candidate_data.Statements.statement2', array('label' => false,));
                            ?>
                        
                            [13] => 
                            3. If candidate falls in Strong fit *

                            
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        
                            [14] => 
                                Form->textarea('Cfa.candidate_data.Statements.statement3', array('label' => false,));
                                ?>
                            
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => 1. If candidate falls in Risk
                            [1] => 2. If candidate falls in OK fit *
                            [2] => 3. If candidate falls in Strong fit

                            
                            [3] => 1. If candidate falls in Risk
                            [4] => 2. If candidate falls in OK fit

                        
                            [5] => 3. If candidate falls in Strong fit *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Elements] => Array
        (
            [report_text_cultural_theme.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
                Text for report

                
                    
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    

                    
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    
                
            
        
    
    

                            [1] => 
        
            
                Text for report

                
                    
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    

                    
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    
                
            
        
    
                            [2] => 
            
                Text for report

                
                    
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    

                    
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    
                
            
        
                            [3] => 
                Text for report

                
                    
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    

                    
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    
                
            
                            [4] => 
                    
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    

                    
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                    
                
                            [5] => 
                        
                            Report content for the Admin's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                            [6] => 
                            Report content for the Admin's version
                        
                            [7] => 
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            [8] => 
                                    Form->input('CfaCoreTheme.data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            [9] => 
                                2. High description

                                
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            
                            [10] => 
                                    Form->input('CfaCoreTheme.data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',));
                                    ?>
                                
                            [11] => 
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                            [12] => 
                                        Form->textarea('CfaCoreTheme.data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                            [13] => 
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                            [14] => 
                                        Form->textarea('CfaCoreTheme.data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                            [15] => 
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                            [16] => 
                                        Form->textarea('CfaCoreTheme.data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                            [17] => 
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                            [18] => 
                                        Form->textarea('CfaCoreTheme.data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                            [19] => 
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            [20] => 
                                        Form->textarea('CfaCoreTheme.data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                            [21] => 
                        
                            Report content for the Candidate's version
                        
                        
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            Statements for reports
                                
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                                
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            
                            [22] => 
                            Report content for the Candidate's version
                        
                            [23] => 
                                1. Low description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            [24] => 
                                    Form->input('CfaCoreTheme.candidate_data.Statements.low', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            [25] => 
                                2. High description

                                
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            
                            [26] => 
                                    Form->input('CfaCoreTheme.candidate_data.Statements.high', array('label' => false, 'div' => false, 'type' => 'text',

                                    ));
                                    ?>
                                
                            [27] => 
                                    1. If candidate falls in the area Fail (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                                
                            [28] => 
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement1', array('label' => false,));
                                        ?>
                                    
                            [29] => 
                                    2. If candidate falls in the area Acceptable (less than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                                
                            [30] => 
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement2', array('label' => false,));
                                        ?>
                                    
                            [31] => 
                                    3. If candidate falls in the area Most suited

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                                
                            [32] => 
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement3', array('label' => false,));
                                        ?>
                                    
                            [33] => 
                                    4. If candidate falls in the area Acceptable (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                                
                            [34] => 
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement4', array('label' => false,));
                                        ?>
                                    
                            [35] => 
                                    5. If candidate falls in the area Fail (greater than most suited)

                                    
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                                
                            [36] => 
                                        Form->textarea('CfaCoreTheme.candidate_data.Statements.statement5', array('label' => false,));
                                        ?>
                                    
                        )

                    [span] => Array
                        (
                            [0] => Report content for the Admin's version
                            [1] => Report content for the Candidate's version
                        )

                    [labels] => Array
                        (
                            [0] => 1. Low description
                            [1] => 2. High description
                            [2] => 1. If candidate falls in the area Fail (less than most suited)
                            [3] => 2. If candidate falls in the area Acceptable (less than most suited)
                            [4] => 3. If candidate falls in the area Most suited
                            [5] => 4. If candidate falls in the area Acceptable (greater than most suited)
                            [6] => 5. If candidate falls in the area Fail (greater than most suited)
                            [7] => 1. Low description
                            [8] => 2. High description
                            [9] => 1. If candidate falls in the area Fail (less than most suited)
                            [10] => 2. If candidate falls in the area Acceptable (less than most suited)
                            [11] => 3. If candidate falls in the area Most suited
                            [12] => 4. If candidate falls in the area Acceptable (greater than most suited)
                            [13] => 5. If candidate falls in the area Fail (greater than most suited)
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Elements] => Array
        (
            [report_text_rpa.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => Text for report
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.data.data.statements.high');?>
                Form->hidden('Rpa.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.candidate_data.data.statements.high');?>
                Form->hidden('Rpa.candidate_data.data.statements.low');?>
            
    

                            [1] => 
        
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.data.data.statements.high');?>
                Form->hidden('Rpa.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.candidate_data.data.statements.high');?>
                Form->hidden('Rpa.candidate_data.data.statements.low');?>
            
    
                            [2] => 
            Text for report
            Report content for Admin's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.data.data.statements.high');?>
                Form->hidden('Rpa.data.data.statements.low');?>
            Report content for Candidate's version
                
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements1');
                        ?>
                    
                
                
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements2');
                        ?>
                    
                
                
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements3');
                        ?>
                    
                
                Form->hidden('Rpa.candidate_data.data.statements.high');?>
                Form->hidden('Rpa.candidate_data.data.statements.low');?>
            
                            [3] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.data.data.statements.statements1');
                        ?>
                    
                
                            [4] => 
                        Form->textarea('Rpa.data.data.statements.statements1');
                        ?>
                    
                            [5] => 
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.data.data.statements.statements2');
                        ?>
                    
                
                            [6] => 
                        Form->textarea('Rpa.data.data.statements.statements2');
                        ?>
                    
                            [7] => 
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.data.data.statements.statements3');
                        ?>
                    
                
                            [8] => 
                        Form->textarea('Rpa.data.data.statements.statements3');
                        ?>
                    
                            [9] => 
                    1. If candidate falls in Risk

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements1');
                        ?>
                    
                
                            [10] => 
                        Form->textarea('Rpa.candidate_data.data.statements.statements1');
                        ?>
                    
                            [11] => 
                    2. If candidate falls in OK fit

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements2');
                        ?>
                    
                
                            [12] => 
                        Form->textarea('Rpa.candidate_data.data.statements.statements2');
                        ?>
                    
                            [13] => 
                    3. If candidate falls in Strong fit *

                    
                        Form->textarea('Rpa.candidate_data.data.statements.statements3');
                        ?>
                    
                
                            [14] => 
                        Form->textarea('Rpa.candidate_data.data.statements.statements3');
                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => 1. If candidate falls in Risk
                            [1] => 2. If candidate falls in OK fit
                            [2] => 3. If candidate falls in Strong fit *
                            [3] => 1. If candidate falls in Risk
                            [4] => 2. If candidate falls in OK fit
                            [5] => 3. If candidate falls in Strong fit *
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Reports] => Array
        (
            [cfa_candidate.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                        )

                    [h2] => Array
                        (
                            [0] => Report for 
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
            

            
                
        
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'view', isset($candidateInfo['Cfa']['hash']) ? $candidateInfo['Cfa']['hash'] : ''), array('class' => 'backBtn pull-right', 'title' => 'Back', 'escape' => false));
        ?>
        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
    
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_cfa_candidate', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
    Overall Result:
        
    
        
            
                How to read the scale? 
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            ?>
        

    

                            [1] => 
        
            
            

            
                
        
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'cfas', 'action' => 'view', isset($candidateInfo['Cfa']['hash']) ? $candidateInfo['Cfa']['hash'] : ''), array('class' => 'backBtn pull-right', 'title' => 'Back', 'escape' => false));
        ?>
        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
                            [2] => 
            
            

            
                
        
                            [3] => 

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
                            [4] => 
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_cfa_candidate', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
                            [5] => 
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_cfa_candidate', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
                            [6] => Overall Result:
        
                            [7] => 
        
            
                How to read the scale? 
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            ?>
        

    
                            [8] => 
            
                How to read the scale? 
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            ?>
        
                            [9] => 
                How to read the scale? 
            
                        )

                    [span] => Array
                        (
                            [0] => 
            
                            [1] => Certificate No:
                            [2] => 
                
                            [3] => Assessment taken on:
                            [4] => 
                    
                            [5] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Reports] => Array
        (
            [job_role_candidate.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => Report for 
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                

            
                
        
                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
    
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_job_role_candidate', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));

            ?>
        
    
    Overall Result:
        
    
        
            
                
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            if (isset($rpaScores) && !empty($rpaScores)) {
                if (isset($reportType) && ($reportType == Candidate::CANDIDATE_REPORT)) {
                    echo $this->element('Crpts.Reports/candidate_rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                }
            }
            ?>
        

    

                            [1] => 
        
            
                

            
                
        
                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
                            [2] => 
            
                

            
                
        
                            [3] => 

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
                            [4] => 
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_job_role_candidate', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));

            ?>
        
    
                            [5] => 
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon')) . __('Export to PDF'), array('plugin' => 'crpts', 'controller' => 'reports', 'action' => 'export_job_role_candidate', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));

            ?>
        
                            [6] => Overall Result:
        
                            [7] => 
        
            
                
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            if (isset($rpaScores) && !empty($rpaScores)) {
                if (isset($reportType) && ($reportType == Candidate::CANDIDATE_REPORT)) {
                    echo $this->element('Crpts.Reports/candidate_rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                }
            }
            ?>
        

    
                            [8] => 
            
                
            
            element('Crpts.Reports/candidate_cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
                }
            }
            if (isset($rpaScores) && !empty($rpaScores)) {
                if (isset($reportType) && ($reportType == Candidate::CANDIDATE_REPORT)) {
                    echo $this->element('Crpts.Reports/candidate_rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                } else {
                    echo $this->element('Crpts.Reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
                }
            }
            ?>
        
                            [9] => 
                
            
                        )

                    [span] => Array
                        (
                            [0] => 
                
                            [1] => Certificate No:
                            [2] => 
                
                            [3] => Assessment taken on:
                            [4] => 
                    
                            [5] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Reports] => Array
        (
            [report_expired.ctp] => Array
                (
                    [h1] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 

    

    


                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaBehaviours] => Array
        (
            [add.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours
    
    
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        

    

    
        Form->create('RpaBehaviour', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add', $hash), 'class' => 'form-horizontal')); ?>
         $da) {
                    ?>
                    
                        
                             Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                }

                                echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                ?>
                                 
                        
                    

                    
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        


                            [1] => 
        Parameters and Settings 
        Select behaviours
    
                            [2] => 
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        
                            [3] => 
                            [4] => 
        Form->create('RpaBehaviour', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add', $hash), 'class' => 'form-horizontal')); ?>
         $da) {
                    ?>
                    
                        
                             Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                }

                                echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                ?>
                                 
                        
                    

                    
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        
                            [5] => 
                             Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                }

                                echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                ?>
                                 
                        
                            [6] => 
                            [7] => 
                            [8] => 
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
                            [9] => 
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => Selectbehaviours
                            [4] => Setrole scenario
                            [5] =>  Set response tagsto scenarios
                            [6] => 
                        )

                    [labels] => Array
                        (
                            [0] =>  Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                }

                                echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                ?>
                                 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaBehaviours] => Array
        (
            [add_more.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours
    
    
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        

    

    
        Form->create('RpaBehaviour', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add_more', $hash), 'class' => 'form-horizontal')); ?>
         $da) {
                    if (!in_array($da['DaOrganisationsProduct']['id'], $alreadyAddedBehaviours)) {

                        ?>
                        
                            
                                 Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                    }

                                    echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                    ?>
                                     
                            
                        

                        
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        


                            [1] => 
        Parameters and Settings 
        Select behaviours
    
                            [2] => 
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        
                            [3] => 
                            [4] => 
        Form->create('RpaBehaviour', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add_more', $hash), 'class' => 'form-horizontal')); ?>
         $da) {
                    if (!in_array($da['DaOrganisationsProduct']['id'], $alreadyAddedBehaviours)) {

                        ?>
                        
                            
                                 Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                    }

                                    echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                    ?>
                                     
                            
                        

                        
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        
                            [5] => 
                                 Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                    }

                                    echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                    ?>
                                     
                            
                            [6] => 
                            [7] => 
                            [8] => 
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
                            [9] => 
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => Selectbehaviours
                            [4] => Setrole scenario
                            [5] =>  Set response tagsto scenarios
                            [6] => 
                        )

                    [labels] => Array
                        (
                            [0] =>  Form->input('RpaBehaviour.' . $key . '.id', array('value' => $rpaBehaviourId));

                                    }

                                    echo $this->Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $checked));


                                    ?>
                                     
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaBehaviours] => Array
        (
            [edit.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('RpaBehaviour'); ?>
    
        Form->input('id');
        echo $this->Form->input('rpa_id');
        echo $this->Form->input('da_organisations_product_id');
        echo $this->Form->input('is_critical');
        echo $this->Form->input('is_completed');
        echo $this->Form->input('min_pass_score');
        echo $this->Form->input('max_pass_score');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Form->postLink(__('Delete'), array('action' => 'delete', $this->Form->value('RpaBehaviour.id')), null, __('Are you sure you want to delete # %s?', $this->Form->value('RpaBehaviour.id'))); ?>
        Html->link(__('List Rpa Behaviours'), array('action' => 'index')); ?>
        Html->link(__('List Rpas'), array('controller' => 'rpas', 'action' => 'index')); ?> 
        Html->link(__('New Rpa'), array('controller' => 'rpas', 'action' => 'add')); ?> 
        Html->link(__('List Da Organisations Products'), array('controller' => 'da_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Scenarios'), array('controller' => 'rpa_scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaBehaviours] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('rpa_id'); ?>
            Paginator->sort('da_organisations_product_id'); ?>
            Paginator->sort('is_critical'); ?>
            Paginator->sort('is_completed'); ?>
            Paginator->sort('min_pass_score'); ?>
            Paginator->sort('max_pass_score'); ?>
            Paginator->sort('created'); ?>
            Paginator->sort('modified'); ?>
            
         
                
                    Html->link($rpaBehaviour['Rpa']['name'], array('controller' => 'rpas', 'action' => 'view', $rpaBehaviour['Rpa']['id'])); ?>
                
                
                    Html->link($rpaBehaviour['DaOrganisationsProduct']['name'], array('controller' => 'da_organisations_products', 'action' => 'view', $rpaBehaviour['DaOrganisationsProduct']['id'])); ?>
                
                 
                 
                 
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $rpaBehaviour['RpaBehaviour']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $rpaBehaviour['RpaBehaviour']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $rpaBehaviour['RpaBehaviour']['id']), null, __('Are you sure you want to delete # %s?', $rpaBehaviour['RpaBehaviour']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Rpa Behaviour'), array('action' => 'add')); ?>
        Html->link(__('List Rpas'), array('controller' => 'rpas', 'action' => 'index')); ?> 
        Html->link(__('New Rpa'), array('controller' => 'rpas', 'action' => 'add')); ?> 
        Html->link(__('List Da Organisations Products'), array('controller' => 'da_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Scenarios'), array('controller' => 'rpa_scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaBehaviours] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            Html->link($rpaBehaviour['Rpa']['name'], array('controller' => 'rpas', 'action' => 'view', $rpaBehaviour['Rpa']['id'])); ?>
             
        
        
        
            Html->link($rpaBehaviour['DaOrganisationsProduct']['name'], array('controller' => 'da_organisations_products', 'action' => 'view', $rpaBehaviour['DaOrganisationsProduct']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Rpa Behaviour'), array('action' => 'edit', $rpaBehaviour['RpaBehaviour']['id'])); ?> 
        Form->postLink(__('Delete Rpa Behaviour'), array('action' => 'delete', $rpaBehaviour['RpaBehaviour']['id']), null, __('Are you sure you want to delete # %s?', $rpaBehaviour['RpaBehaviour']['id'])); ?> 
        Html->link(__('List Rpa Behaviours'), array('action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('action' => 'add')); ?> 
        Html->link(__('List Rpas'), array('controller' => 'rpas', 'action' => 'index')); ?> 
        Html->link(__('New Rpa'), array('controller' => 'rpas', 'action' => 'add')); ?> 
        Html->link(__('List Da Organisations Products'), array('controller' => 'da_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Scenarios'), array('controller' => 'rpa_scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'rpa_scenarios', 'action' => 'view', $rpaScenario['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'rpa_scenarios', 'action' => 'edit', $rpaScenario['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'rpa_scenarios', 'action' => 'delete', $rpaScenario['id']), null, __('Are you sure you want to delete # %s?', $rpaScenario['id'])); ?>
                
            
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaResponses] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Setup RPA');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [5] => 
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [6] => 
            Scenario 
                of 
            

        
                            [7] => 
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [8] => 
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [9] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [10] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [11] => 
                     Response 
                        
                    
            
                            [12] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [13] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [14] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [15] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    /*echo $this->Form->hidden('RpaBehaviour.pass_score', array('id'=>'passScore', 'value'=> !empty($rpaBehaviourData['RpaBehaviour']['pass_score']) ? $rpaBehaviourData['RpaBehaviour']['pass_score']:0 ));*/
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [16] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
                            [17] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
                            [18] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [19] => Set Pass Score for this Behaviour
                            [20] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [21] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [22] => 
                            -
                            [23] => 
                            [24] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [25] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [26] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [27] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [28] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [29] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [30] => 
    
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [31] => 
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [32] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [33] => 
    
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    

                            [34] => 
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    
                            [35] => 
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] =>  Response 
                        
                    
                            [5] =>  Response 
                            [6] => 
                            [7] =>  
                            [8] => 
                            [9] => 
                            [10] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                            [11] => 
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaResponses] => Array
        (
            [add_more.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Setup RPA');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [5] => 
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [6] => 
            Scenario 
                of 
            

        
                            [7] => 
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [8] => 
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [9] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [10] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [11] => 
                     Response 
                        
                    
            
                            [12] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [13] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [14] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [15] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    /*echo $this->Form->hidden('RpaBehaviour.pass_score', array('id'=>'passScore', 'value'=> !empty($rpaBehaviourData['RpaBehaviour']['pass_score']) ? $rpaBehaviourData['RpaBehaviour']['pass_score']:0 ));*/
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [16] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
                            [17] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
                            [18] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [19] => Set Pass Score for this Behaviour
                            [20] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [21] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [22] => 
                            -
                            [23] => 
                            [24] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [25] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [26] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [27] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [28] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [29] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [30] => 
    
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [31] => 
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [32] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [33] => 
    
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    

                            [34] => 
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    
                            [35] => 
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] =>  Response 
                        
                    
                            [5] =>  Response 
                            [6] => 
                            [7] =>  
                            [8] => 
                            [9] => 
                            [10] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                            [11] => 
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaResponses] => Array
        (
            [edit.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Edit RPA');
            ?>
        
    

                            [1] => 
        

            Html->tag('h4', 'Edit RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Edit RPA');
            ?>
        
                            [3] => 
    
        
            Scenario 
                of 

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [4] => 
        
            Scenario 
                of 

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [5] => 
            Scenario 
                of 

        
                            [6] => 
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [7] => 
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [8] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [9] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [10] => 
                     Response 
                        
                    
            
                            [11] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [12] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [13] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [14] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [15] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
    
                            [16] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
                            [17] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [18] => Set Pass Score for this Behaviour
                            [19] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [20] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [21] => 
                            -
                            [22] => 
                            [23] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [24] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [25] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [26] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [27] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [28] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [29] => 
    
        Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [30] => 
        Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [31] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [32] => 
    
        
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
    

                            [33] => 
        
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
    
                            [34] => 
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] =>  Response 
                        
                    
                            [2] =>  Response 
                            [3] => 
                            [4] =>  
                            [5] => 
                            [6] => 
                            [7] => Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                            [8] => 
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                            
                        )

                    [labels] => Array
                        (
                            [0] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaResponses] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('rpa_scenario_id'); ?>
            Paginator->sort('scenario_response_id'); ?>
            Paginator->sort('rpa_tag_id'); ?>
            Paginator->sort('name'); ?>
            Paginator->sort('created'); ?>
            Paginator->sort('modified'); ?>
            
         
                
                    Html->link($rpaResponse['RpaScenario']['id'], array('controller' => 'rpa_scenarios', 'action' => 'view', $rpaResponse['RpaScenario']['id'])); ?>
                
                
                    Html->link($rpaResponse['ScenarioResponse']['id'], array('controller' => 'scenario_responses', 'action' => 'view', $rpaResponse['ScenarioResponse']['id'])); ?>
                
                
                    Html->link($rpaResponse['RpaTag']['name'], array('controller' => 'rpa_tags', 'action' => 'view', $rpaResponse['RpaTag']['id'])); ?>
                
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $rpaResponse['RpaResponse']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $rpaResponse['RpaResponse']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $rpaResponse['RpaResponse']['id']), null, __('Are you sure you want to delete # %s?', $rpaResponse['RpaResponse']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Rpa Response'), array('action' => 'add')); ?>
        Html->link(__('List Rpa Scenarios'), array('controller' => 'rpa_scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
        Html->link(__('List Scenario Responses'), array('controller' => 'scenario_responses', 'action' => 'index')); ?> 
        Html->link(__('New Scenario Response'), array('controller' => 'scenario_responses', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Tags'), array('controller' => 'rpa_tags', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Tag'), array('controller' => 'rpa_tags', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaResponses] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            Html->link($rpaResponse['RpaScenario']['id'], array('controller' => 'rpa_scenarios', 'action' => 'view', $rpaResponse['RpaScenario']['id'])); ?>
             
        
        
        
            Html->link($rpaResponse['ScenarioResponse']['id'], array('controller' => 'scenario_responses', 'action' => 'view', $rpaResponse['ScenarioResponse']['id'])); ?>
             
        
        
        
            Html->link($rpaResponse['RpaTag']['name'], array('controller' => 'rpa_tags', 'action' => 'view', $rpaResponse['RpaTag']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Rpa Response'), array('action' => 'edit', $rpaResponse['RpaResponse']['id'])); ?> 
        Form->postLink(__('Delete Rpa Response'), array('action' => 'delete', $rpaResponse['RpaResponse']['id']), null, __('Are you sure you want to delete # %s?', $rpaResponse['RpaResponse']['id'])); ?> 
        Html->link(__('List Rpa Responses'), array('action' => 'index')); ?> 
        Html->link(__('New Rpa Response'), array('action' => 'add')); ?> 
        Html->link(__('List Rpa Scenarios'), array('controller' => 'rpa_scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('controller' => 'rpa_scenarios', 'action' => 'add')); ?> 
        Html->link(__('List Scenario Responses'), array('controller' => 'scenario_responses', 'action' => 'index')); ?> 
        Html->link(__('New Scenario Response'), array('controller' => 'scenario_responses', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Tags'), array('controller' => 'rpa_tags', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Tag'), array('controller' => 'rpa_tags', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [add.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="noteText">Select scenarios for the Behaviours Selected</p>
                        )

                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select at least one scenario per behaviour
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Setup RPA
        
    
    
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        

                            [1] => 
        
            Setup RPA
        
    
                            [2] => 
            Setup RPA
        
                            [3] => 
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        
                            [4] => 
    Select scenarios for the Behaviours Selected

    Form->create('RpaScenario', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_scenarios', 'action' => 'add', $hash), 'class' => 'form-horizontal')); ?>

    

         $rpaDa) {
                $scenarioCount = 0;
                $daId = $rpaDa['DaOrganisationsProduct']['category_id'];
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));
                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                

    
        
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
    
        Html->image('ajax-loader_product.gif');?>
    
    Form->end(); ?>

                            [5] => 

         $rpaDa) {
                $scenarioCount = 0;
                $daId = $rpaDa['DaOrganisationsProduct']['category_id'];
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));
                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                
                            [6] => 
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));
                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                            [7] => 
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));
                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                            [8] => 
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));
                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                            [9] => 


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                            [10] => 
        
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
                            [11] => 
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
                            [12] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => select behaviours
                            [1] => Selectrole scenarios
                            [2] => Set response tagsto the scenarios
                            [3] => 
                
                    
                            [4] => 
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        
                            [5] => Select All
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 
                            [1] => 
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                            [2] => 
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [add_more.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="noteText">Select scenarios for the Behaviours Selected</p>
                        )

                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select at least one scenario per behaviour
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Setup RPA
        
    
    
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        

                            [1] => 
        
            Setup RPA
        
    
                            [2] => 
            Setup RPA
        
                            [3] => 
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        
                            [4] => 
    Select scenarios for the Behaviours Selected

    Form->create('RpaScenario', array('url' => array('plugin' => 'crpts', 'controller' => 'rpa_scenarios', 'action' => 'add_more', $hash), 'class' => 'form-horizontal')); ?>

    

         $rpaDa) {
                $scenarioCount = 0;
                $daId = $rpaDa['DaOrganisationsProduct']['category_id'];
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                

    
        
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
    
        Html->image('ajax-loader_product.gif');?>
    
    Form->end(); ?>

                            [5] => 

         $rpaDa) {
                $scenarioCount = 0;
                $daId = $rpaDa['DaOrganisationsProduct']['category_id'];
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                
                            [6] => 
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                
                            [7] => 
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                    
                            [8] => 
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " of ";
                            echo $this->Html->tag('span', $scenarioCount, array('class' => 'totalScenarios totalScenarios' . $rpaDa['DaOrganisationsProduct']['category_id']));

                            echo " selected";
                            ?>
                        
                            [9] => 


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                                    
                                    
                            [10] => 
        
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
                            [11] => 
            Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
                            [12] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => select behaviours
                            [1] => Selectrole scenarios
                            [2] => Set response tagsto the scenarios
                            [3] => 
                
                    
                            [4] => 
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        
                            [5] => Select All
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $rpaDa['RpaBehaviour']['id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $rpaDa['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 
                            [1] => 
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $rpaDa['DaOrganisationsProduct']['category_id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                            [2] => 
                                            Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['RpaScenario']['id'],));
                                            }

                                            echo $this->Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $rpaDa['RpaBehaviour']['id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['Scenario']['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $rpaDa['RpaBehaviour']['id'], 'data-id' => $rpaDa['RpaBehaviour']['id'], 'checked' => $scenario['RpaScenario']['is_checked']));

                                            echo $this->Html->tag('span', $scenario['Scenario']['title']);

                                            ?>
                                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [add_response_tags.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Setup RPA');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [5] => 
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [6] => 
            Scenario 
                of 
            

        
                            [7] => 
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [8] => 
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [9] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [10] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [11] => 
                     Response 
                        
                    
            
                            [12] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [13] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [14] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [15] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    /*echo $this->Form->hidden('RpaBehaviour.pass_score', array('id'=>'passScore', 'value'=> !empty($rpaBehaviourData['RpaBehaviour']['pass_score']) ? $rpaBehaviourData['RpaBehaviour']['pass_score']:0 ));*/
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [16] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
                            [17] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
                            [18] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [19] => Set Pass Score for this Behaviour
                            [20] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [21] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [22] => 
                            -
                            [23] => 
                            [24] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [25] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [26] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [27] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [28] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [29] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [30] => 
    
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [31] => 
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [32] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [33] => 
    
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    

                            [34] => 
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    
                            [35] => 
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] =>  Response 
                        
                    
                            [5] =>  Response 
                            [6] => 
                            [7] =>  
                            [8] => 
                            [9] => 
                            [10] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                            [11] => 
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [edit.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('RpaScenario'); ?>
    
        Form->input('id');
        echo $this->Form->input('rpa_behaviour_id');
        echo $this->Form->input('scenario_id');
        echo $this->Form->input('assessment_image_id');
        echo $this->Form->input('alias');
        echo $this->Form->input('is_completed');
        echo $this->Form->input('background_image');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Form->postLink(__('Delete'), array('action' => 'delete', $this->Form->value('RpaScenario.id')), null, __('Are you sure you want to delete # %s?', $this->Form->value('RpaScenario.id'))); ?>
        Html->link(__('List Rpa Scenarios'), array('action' => 'index')); ?>
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
        Html->link(__('List Scenarios'), array('controller' => 'scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Scenario'), array('controller' => 'scenarios', 'action' => 'add')); ?> 
        Html->link(__('List Assessment Images'), array('controller' => 'assessment_images', 'action' => 'index')); ?> 
        Html->link(__('New Assessment Image'), array('controller' => 'assessment_images', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Responses'), array('controller' => 'rpa_responses', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Response'), array('controller' => 'rpa_responses', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => controller
                        )

                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('rpa_behaviour_id'); ?>
            Paginator->sort('scenario_id'); ?>
            Paginator->sort('assessment_image_id'); ?>
            Paginator->sort('alias'); ?>
            Paginator->sort('is_completed'); ?>
            Paginator->sort('background_image'); ?>
            Paginator->sort('created'); ?>
            Paginator->sort('modified'); ?>
            
         
                
                    Html->link($rpaScenario['RpaBehaviour']['id'], array('controller' => 'rpa_behaviours', 'action' => 'view', $rpaScenario['RpaBehaviour']['id'])); ?>
                
                
                    Html->link($rpaScenario['Scenario']['title'], array('controller' => 'scenarios', 'action' => 'view', $rpaScenario['Scenario']['id'])); ?>
                
                
                    Html->link($rpaScenario['AssessmentImage']['id'], array('controller' => 'assessment_images', 'action' => 'view', $rpaScenario['AssessmentImage']['id'])); ?>
                
                 
                 
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $rpaScenario['RpaScenario']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $rpaScenario['RpaScenario']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $rpaScenario['RpaScenario']['id']), null, __('Are you sure you want to delete # %s?', $rpaScenario['RpaScenario']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Rpa Scenario'), array('action' => 'add')); ?>
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
        Html->link(__('List Scenarios'), array('controller' => 'scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Scenario'), array('controller' => 'scenarios', 'action' => 'add')); ?> 
        Html->link(__('List Assessment Images'), array('controller' => 'assessment_images', 'action' => 'index')); ?> 
        Html->link(__('New Assessment Image'), array('controller' => 'assessment_images', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Responses'), array('controller' => 'rpa_responses', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Response'), array('controller' => 'rpa_responses', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/RpaScenarios] => Array
        (
            [view.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => controller
                        )

                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            Html->link($rpaScenario['RpaBehaviour']['id'], array('controller' => 'rpa_behaviours', 'action' => 'view', $rpaScenario['RpaBehaviour']['id'])); ?>
             
        
        
        
            Html->link($rpaScenario['Scenario']['title'], array('controller' => 'scenarios', 'action' => 'view', $rpaScenario['Scenario']['id'])); ?>
             
        
        
        
            Html->link($rpaScenario['AssessmentImage']['id'], array('controller' => 'assessment_images', 'action' => 'view', $rpaScenario['AssessmentImage']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Rpa Scenario'), array('action' => 'edit', $rpaScenario['RpaScenario']['id'])); ?> 
        Form->postLink(__('Delete Rpa Scenario'), array('action' => 'delete', $rpaScenario['RpaScenario']['id']), null, __('Are you sure you want to delete # %s?', $rpaScenario['RpaScenario']['id'])); ?> 
        Html->link(__('List Rpa Scenarios'), array('action' => 'index')); ?> 
        Html->link(__('New Rpa Scenario'), array('action' => 'add')); ?> 
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
        Html->link(__('List Scenarios'), array('controller' => 'scenarios', 'action' => 'index')); ?> 
        Html->link(__('New Scenario'), array('controller' => 'scenarios', 'action' => 'add')); ?> 
        Html->link(__('List Assessment Images'), array('controller' => 'assessment_images', 'action' => 'index')); ?> 
        Html->link(__('New Assessment Image'), array('controller' => 'assessment_images', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Responses'), array('controller' => 'rpa_responses', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Response'), array('controller' => 'rpa_responses', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'rpa_responses', 'action' => 'view', $rpaResponse['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'rpa_responses', 'action' => 'edit', $rpaResponse['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'rpa_responses', 'action' => 'delete', $rpaResponse['id']), null, __('Are you sure you want to delete # %s?', $rpaResponse['id'])); ?>
                
            
        Html->link(__('New Rpa Response'), array('controller' => 'rpa_responses', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Rpa Response'), array('controller' => 'rpa_responses', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [add.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Rpa Title already exist
                        )

                    [title] => Array
                        (
                            [0] => Back
                            [1] => Save and Move to Next Step
                        )

                    [place_holders] => Array
                        (
                            [0] => eg. Branch Manager
                            [1] => Button title
                            [2] => http://example.com/test
                            [3] => Button title
                            [4] => http://example.com/test
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Role Preference Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    

                            [1] => 
        
             Role Preference Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    
                            [2] => 
             Role Preference Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
                            [4] => 
                            [5] => 
    Form->create('Rpa', array('class' => 'form-horizontal', 'id' => 'createRPA'));
    ?>
    
        RPA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    

    
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
    
    
        Button Title(Success)*

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Success) *

        
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
    
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Fail) *

        
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
    
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    

    Form->end();
    ?>

                            [6] => 
        RPA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    
                            [7] => 
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
                            [8] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
                            [9] => 
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
    
                            [10] => 
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'value' => '60'));
            ?>

            Enter the time period after which the candidate can retake this assessment (in days)
        
                            [11] => Enter the time period after which the candidate can retake this assessment (in days)
                            [12] => 
        Button Title(Success)*

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
                            [13] => 
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
                            [14] => e.g. register and apply now
                            [15] => 
        Redirect URL(Success) *

        
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
                            [16] => 
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
                            [17] => e.g. http://example.com/test
                            [18] => 
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
    
                            [19] => 
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title', 'value' => 'register and apply now'));
            ?>
            e.g. register and apply now
        
                            [20] => e.g. register and apply now
                            [21] => 
        Redirect URL(Fail) *

        
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
                            [22] => 
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
                            [23] => e.g. http://example.com/test
                            [24] => 
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    
                            [25] => 
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                            [2] => *
                            [3] => *
                            [4] => *
                            [5] => *
                        )

                    [labels] => Array
                        (
                            [0] => RPA Title *
                            [1] => Retake Days *
                            [2] => Button Title(Success)*
                            [3] => Redirect URL(Success) *
                            [4] => Button Title(Fail)*
                            [5] => Redirect URL(Fail) *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [edit.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Rpa Title already exist
                        )

                    [title] => Array
                        (
                            [0] => Back
                            [1] => Save and Move to Next Step
                        )

                    [place_holders] => Array
                        (
                            [0] => eg. Branch Manager
                            [1] => Button title
                            [2] => http://example.com/test
                            [3] => Button title
                            [4] => http://example.com/test
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Role Preference Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    

                            [1] => 
        
             Role Preference Assessment
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    
                            [2] => 
             Role Preference Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
                            [4] => 
                            [5] => 
    Form->create('Rpa', array('class' => 'form-horizontal', 'id' => 'createRPA'));
    ?>
    
        RPA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    

    
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
    
    
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Success) *

        
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
    
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
    
    
        Redirect URL(Fail) *

        
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
    
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    

    Form->end();
    ?>

                            [6] => 
        RPA Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
    
                            [7] => 
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            

        
                            [8] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));
                ?>
            
                            [9] => 
        Retake Days *

        
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
    
                            [10] => 
            Form->input('retake_days', array('id' => 'retakeDays', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate',));
            ?>
            Enter the time period after which the candidate can retake this assessment (in days)
        
                            [11] => Enter the time period after which the candidate can retake this assessment (in days)
                            [12] => 
        Button Title(Success) *

        
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>
            e.g. register and apply now
        
    
                            [13] => 
            Form->input('button_title', array('id' => 'buttonTitle', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title',));
            ?>
            e.g. register and apply now
        
                            [14] => e.g. register and apply now
                            [15] => 
        Redirect URL(Success) *

        
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
    
                            [16] => 
            Form->input('job_role_url', array('id' => 'redirectUrl', 'label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'http://example.com/test'));
            ?>
            e.g. http://example.com/test
        
                            [17] => e.g. http://example.com/test
                            [18] => 
        Button Title(Fail)*

        
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
    
                            [19] => 
            Form->input('button_title_fail', array('id' => 'buttonTitleFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'Button title'));
            ?>
            e.g. register and apply now
        
                            [20] => e.g. register and apply now
                            [21] => 
        Redirect URL(Fail) *

        
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
    
                            [22] => 
            Form->input('job_role_url_fail', array('id' => 'redirectUrlFail', 'label' => false, 'div' => false, 'type' => 'text', 'class' => 'expiryDate', 'placeholder' => 'http://example.com/test'));
            ?>

            e.g. http://example.com/test
        
                            [23] => e.g. http://example.com/test
                            [24] => 
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    
                            [25] => 
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                            [2] => *
                            [3] => *
                            [4] => *
                            [5] => *
                        )

                    [labels] => Array
                        (
                            [0] => RPA Title *
                            [1] => Retake Days *
                            [2] => Button Title(Success) *
                            [3] => Redirect URL(Success) *
                            [4] => Button Title(Fail)*
                            [5] => Redirect URL(Fail) *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [edit_assessment.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New Behaviour
                            [1] => Edit Basic Info
                            [2] => Delete Behaviour
                            [3] => Delete Behaviour
                            [4] => Edit Behaviour
                            [5] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => There is only one behaviour, You not able to delete it.
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add_more', $rpa['Rpa']['hash']), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
        
    

    
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $editRpaLink = array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit', $rpa['Rpa']['id']);
                $editRpaAttr = array('class' => 'editIcon', 'title' => 'Edit Basic Info');

                echo $this->Html->link('', $editRpaLink, $editRpaAttr);

                ?>
            
        
    
    

        
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if ($behaviour['RpaBehaviour']['rpa_behaviour_candidates_count'] == 0) {
                                echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'delete', $behaviour['RpaBehaviour']['id'], $rpa['Rpa']['hash'],), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } else {
                                echo $this->Html->link('', 'javascript:alert("Unable to delete Behaviour, it is already in use.")', array('title' => 'Delete Behaviour', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                            }

                            echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'rpa_responses', 'action' => 'edit', $rpa['Rpa']['hash'], $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                    


                            [1] => 
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add_more', $rpa['Rpa']['hash']), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
        
    
                            [2] => 
             
        
                            [3] => 
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add_more', $rpa['Rpa']['hash']), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
                            [4] => 
                            [5] => 
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $editRpaLink = array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit', $rpa['Rpa']['id']);
                $editRpaAttr = array('class' => 'editIcon', 'title' => 'Edit Basic Info');

                echo $this->Html->link('', $editRpaLink, $editRpaAttr);

                ?>
            
        
    
                            [6] => 
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $editRpaLink = array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit', $rpa['Rpa']['id']);
                $editRpaAttr = array('class' => 'editIcon', 'title' => 'Edit Basic Info');

                echo $this->Html->link('', $editRpaLink, $editRpaAttr);

                ?>
            
        
                            [7] => 
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $editRpaLink = array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit', $rpa['Rpa']['id']);
                $editRpaAttr = array('class' => 'editIcon', 'title' => 'Edit Basic Info');

                echo $this->Html->link('', $editRpaLink, $editRpaAttr);

                ?>
            
                            [8] => 

        
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if ($behaviour['RpaBehaviour']['rpa_behaviour_candidates_count'] == 0) {
                                echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'delete', $behaviour['RpaBehaviour']['id'], $rpa['Rpa']['hash'],), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } else {
                                echo $this->Html->link('', 'javascript:alert("Unable to delete Behaviour, it is already in use.")', array('title' => 'Delete Behaviour', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                            }

                            echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'rpa_responses', 'action' => 'edit', $rpa['Rpa']['hash'], $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                    
                            [9] => 
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if ($behaviour['RpaBehaviour']['rpa_behaviour_candidates_count'] == 0) {
                                echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'delete', $behaviour['RpaBehaviour']['id'], $rpa['Rpa']['hash'],), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } else {
                                echo $this->Html->link('', 'javascript:alert("Unable to delete Behaviour, it is already in use.")', array('title' => 'Delete Behaviour', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                            }

                            echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'rpa_responses', 'action' => 'edit', $rpa['Rpa']['hash'], $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                            [10] => 

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if ($behaviour['RpaBehaviour']['rpa_behaviour_candidates_count'] == 0) {
                                echo $this->Form->PostLink('', array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'delete', $behaviour['RpaBehaviour']['id'], $rpa['Rpa']['hash'],), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } else {
                                echo $this->Html->link('', 'javascript:alert("Unable to delete Behaviour, it is already in use.")', array('title' => 'Delete Behaviour', 'escape' => false, 'class' => 'deleteIcon deleteDa '));
                            }

                            echo $this->Html->link('', array('plugin' => 'crpts', 'controller' => 'rpa_responses', 'action' => 'edit', $rpa['Rpa']['hash'], $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                
                            [11] => 

                            
                                            
                                                
                                            
                                                
                                        

                                        
                            [12] => 
                                                
                            [13] => 
     'crpts', 'controller' => 'rpas', 'action' => 'update_score', $rpa['Rpa']['hash']);

    } else {
        $link = array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index',);

    }
    ?>
    Html->link('Done With Editing', $link, array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', "id" => "completeEditing"));
    ?>


                        )

                    [labels] => Array
                        (
                            [0] => Critical
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [edit_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [place_holders] => Array
                        (
                            [0] => Retake Days
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [validation_messages] => Array
                        (
                            [0] => Retake days should be numeric, should not be zero(0) and less than 365 days
                            [1] => Button title should not be blank
                            [2] => Please enter valid URL
                        )

                    [alert_messages] => Array
                        (
                            [0] => Retake days should be numeric and less than 365 days
                            [1] => Enter a valid url
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
    

                            [1] => 
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
                            [3] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.

                            [4] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [5] => Select pass score for this Assessment
                            [6] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [7] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [8] => 
                            [9] => 
                            [10] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [11] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [12] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [13] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [14] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [15] => 
    
        
        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
    Form->submit('Done', array('class' => 'btn btn-large btnBlack pull-right noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'scoreFormSubmit'));
    ?>

    
        Html->image('ajax-loader_product.gif');?>
    


                            [16] => 
        
        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
                            [17] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [get_rpa_data.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit pass score for this 
    
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    

                            [1] => Edit pass score for this 
                            [2] => 
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    
                            [3] => 
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [4] => 
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [5] => 
                            [6] => 
                            [7] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [8] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [9] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [10] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [11] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [12] => 
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
                            [13] => 
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [get_rpa_data_for_detail_view.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [div] => Array
                        (
                            [0] => 
    
        
        
        
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
    
    The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â

                            [1] => 
        
        
        
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
    
                            [2] => 
                            [3] => 
                            [4] => 
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
                            [5] => 
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
                            [6] => 
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
                            [7] => 
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                            [8] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New
                            [1] => Click here to select behaviours
                            [2] => label
                            [3] => View RPA
                            [4] => Edit RPA
                            [5] => Delete RPA
                            [6] => Delete RPA
                        )

                    [place_holders] => Array
                        (
                            [0] => Search
                        )

                    [alert_messages] => Array
                        (
                            [0] => Can not edit overall score as there are live users
                            [1] => Assessment can not be edited, error retrieving status of active candidates.
                            [2] => Assessment can not be edited as there are live users
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
        
            Role Preference Assessment
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create RPA', true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                ?>
                
                    Html->link(__('Click here to select behaviours'), array('plugin' => 'das', 'controller' => 'categories', 'action' => 'select_behaviours'), array('title' => 'Click here to select behaviours', 'class' => '', 'escape' => false));
                    ?>
                
                

        
            Form->create('Rpa', array('url' => array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                Name
                 'Name',
                                    'name' => 'Name'
                                );

                                echo $this->Form->select('filter',
                                    $options,
                                    array(
                                         'label' => false,
                                         'value' => '',
                                         'class' => 'cstSelList',
                                         'div'   => false,
                                         'empty' => false,
                                         'id'    => 'ProductsUserFilter'
                                    ));
                                */?>
            

            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => '', 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
    

                            [1] => 
        
        
            Role Preference Assessment
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create RPA', true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                ?>
                
                    Html->link(__('Click here to select behaviours'), array('plugin' => 'das', 'controller' => 'categories', 'action' => 'select_behaviours'), array('title' => 'Click here to select behaviours', 'class' => '', 'escape' => false));
                    ?>
                
                

        
            Form->create('Rpa', array('url' => array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                Name
                 'Name',
                                    'name' => 'Name'
                                );

                                echo $this->Form->select('filter',
                                    $options,
                                    array(
                                         'label' => false,
                                         'value' => '',
                                         'class' => 'cstSelList',
                                         'div'   => false,
                                         'empty' => false,
                                         'id'    => 'ProductsUserFilter'
                                    ));
                                */?>
            

            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => '', 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
    
                            [2] => 
            Role Preference Assessment
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create RPA', true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                ?>
                
                    Html->link(__('Click here to select behaviours'), array('plugin' => 'das', 'controller' => 'categories', 'action' => 'select_behaviours'), array('title' => 'Click here to select behaviours', 'class' => '', 'escape' => false));
                    ?>
                
                
                            [3] => 
                    Html->link(__('Click here to select behaviours'), array('plugin' => 'das', 'controller' => 'categories', 'action' => 'select_behaviours'), array('title' => 'Click here to select behaviours', 'class' => '', 'escape' => false));
                    ?>
                
                            [4] => 
            Form->create('Rpa', array('url' => array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                Name
                 'Name',
                                    'name' => 'Name'
                                );

                                echo $this->Form->select('filter',
                                    $options,
                                    array(
                                         'label' => false,
                                         'value' => '',
                                         'class' => 'cstSelList',
                                         'div'   => false,
                                         'empty' => false,
                                         'id'    => 'ProductsUserFilter'
                                    ));
                                */?>
            

            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => '', 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
                            [5] => 
                Name
                 'Name',
                                    'name' => 'Name'
                                );

                                echo $this->Form->select('filter',
                                    $options,
                                    array(
                                         'label' => false,
                                         'value' => '',
                                         'class' => 'cstSelList',
                                         'div'   => false,
                                         'empty' => false,
                                         'id'    => 'ProductsUserFilter'
                                    ));
                                */?>
            
                            [6] => 
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => '', 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
                            [7] => 
                            [8] => 
    
                    
                    ">
                        Text->truncate($rpa['Rpa']['name'], 20, array('ending' => '...', 'exact' => true));
                            ?>
                        
                        
                        
                        
                    
                        Recent Activities
                        Basic Rpa Creation Completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Scenarios selection is completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Scenarios selection is completed
                            Html->link(__('Click Here to Complete'), array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add', $rpa['Rpa']['hash']), array('class' => 'btn'));
                        }

                        ?>
                        
                            Assessment created successfully

                            
                                html->tag('span', '' . 'Overall Score', array('class' => 'scoreLink scoreLinkVanilla', 'id' => 'scoreEditLink', 'data-id' => $rpa['Rpa']['id']))
                                ?>
                            
                            
                        
                    
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'view', $rpa['Rpa']['hash']), array('title' => 'View RPA', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn editJobRole'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit_assessment', $rpa['Rpa']['hash']), array('title' => 'Edit RPA', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $rpa['Rpa']['id'],));

                        if ($rpa['Rpa']['rpa_candidate_count']  0) {
                                $message = 'Are you sure you want to delete this RPA, as it is used in job role';
                            }
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'delete', $rpa['Rpa']['id']), array('title' => 'Delete RPA', 'escape' => false, /*'class'  => 'checkCandidateStatus'*/), __($message));
                        } else {
                            echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), 'javascript:alert("Unable to delete RPA, it is already in use.")', array('title' => 'Delete RPA', 'escape' => false, /* 'class'  => 'checkCandidateStatus'*/));
                        }

                        ?>
                    
                
                
    

                            [9] => 
                            [10] => ">
                        Text->truncate($rpa['Rpa']['name'], 20, array('ending' => '...', 'exact' => true));
                            ?>
                        
                        
                        
                        
                            [11] => 
                            [12] => 
                            [13] => 
                        Recent Activities
                        Basic Rpa Creation Completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Scenarios selection is completed
                            Basic Rpa Creation Completed
                            Behaviours selection is completed
                            Scenarios selection is completed
                            Html->link(__('Click Here to Complete'), array('plugin' => 'crpts', 'controller' => 'rpa_behaviours', 'action' => 'add', $rpa['Rpa']['hash']), array('class' => 'btn'));
                        }

                        ?>
                        
                            Assessment created successfully

                            
                                html->tag('span', '' . 'Overall Score', array('class' => 'scoreLink scoreLinkVanilla', 'id' => 'scoreEditLink', 'data-id' => $rpa['Rpa']['id']))
                                ?>
                            
                            
                        
                            [14] => 
                            Assessment created successfully

                            
                                html->tag('span', '' . 'Overall Score', array('class' => 'scoreLink scoreLinkVanilla', 'id' => 'scoreEditLink', 'data-id' => $rpa['Rpa']['id']))
                                ?>
                            
                            
                            [15] => 
                                html->tag('span', '' . 'Overall Score', array('class' => 'scoreLink scoreLinkVanilla', 'id' => 'scoreEditLink', 'data-id' => $rpa['Rpa']['id']))
                                ?>
                            
                            [16] => 
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'view', $rpa['Rpa']['hash']), array('title' => 'View RPA', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn editJobRole'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit_assessment', $rpa['Rpa']['hash']), array('title' => 'Edit RPA', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $rpa['Rpa']['id'],));

                        if ($rpa['Rpa']['rpa_candidate_count']  0) {
                                $message = 'Are you sure you want to delete this RPA, as it is used in job role';
                            }
                            echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'delete', $rpa['Rpa']['id']), array('title' => 'Delete RPA', 'escape' => false, /*'class'  => 'checkCandidateStatus'*/), __($message));
                        } else {
                            echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), 'javascript:alert("Unable to delete RPA, it is already in use.")', array('title' => 'Delete RPA', 'escape' => false, /* 'class'  => 'checkCandidateStatus'*/));
                        }

                        ?>
                    
                            [17] => 
                            [18] => 
                        )

                    [span] => Array
                        (
                            [0] => Recent Activities
                            [1] => Assessment created successfully
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [set_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [place_holders] => Array
                        (
                            [0] => Retake Days
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [validation_messages] => Array
                        (
                            [0] => Retake days should be numeric, should not be zero(0) and less than 365 days
                            [1] => Button title should not be blank
                            [2] => Please enter valid URL
                        )

                    [alert_messages] => Array
                        (
                            [0] => Retake days should be numeric and less than 365 days
                            [1] => Enter a valid url
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.

                            [5] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [6] => Select pass score for this Assessment
                            [7] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [8] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [9] => 
                            [10] => 
                            [11] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [12] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [13] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [14] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [15] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [16] => 

    

        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
    Form->submit('Done', array('class' => 'btn btn-large btnBlack pull-right noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'scoreFormSubmit'));
    ?>
    
        Html->image('ajax-loader_product.gif');?>
    


                            [17] => 

        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
                            [18] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [update_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [place_holders] => Array
                        (
                            [0] => Retake Days
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [validation_messages] => Array
                        (
                            [0] => Retake days should be numeric, should not be zero(0) and less than 365 days
                            [1] => Button title should not be blank
                            [2] => Please enter valid URL
                        )

                    [alert_messages] => Array
                        (
                            [0] => Retake days should be numeric and less than 365 days
                            [1] => Enter a valid url
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.

                            [5] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [6] => Select pass score for this Assessment
                            [7] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [8] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [9] => 
                            [10] => 
                            [11] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [12] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [13] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [14] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [15] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [16] => 

    
        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
    Form->submit('Done', array('class' => 'btn btn-large btnBlack pull-right noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'scoreFormSubmit'));
    ?>
    
        Html->image('ajax-loader_product.gif');?>
    


                            [17] => 
        Form->input('retake_days',
            array(
                 'value'       => $retakeDays,
                 'class'       => '',
                 'label'       => false,
                 'placeholder' => 'Retake Days',
                 'id'          => 'retakeDays',
                 'type'        => 'text',
                 'div'         => false
            ));*/

        echo $this->Form->hidden('id', array('value' => $rpaId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
                            [18] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Crpts/View/Rpas] => Array
        (
            [view.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Edit Assessment
                            [1] => Delete Assessment
                            [2] => Delete Assessment
                            [3] => Back
                        )

                    [alert_messages] => Array
                        (
                            [0] => Assessment can not be edited, error retrieving status of active candidates.
                            [1] => Assessment can not be edited as there are live users
                        )

                    [div] => Array
                        (
                            [0] => 

    Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit_assessment', $rpa['Rpa']['hash']), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn checkCandidateStatus', 'data-id' => $rpa['Rpa']['id'],));


    if ($rpa['Rpa']['rpa_candidate_count']  0) {
            $message = 'Are you sure you want to delete this RPA, as it is ued in job role';
        }
        echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'delete', $rpa['Rpa']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'), __($message));
    } else {
        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteIcon'))), 'javascript:alert("Unable to delete RPA, it is already in use.")', array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));
    }

    ?>


    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>





    
        
            RPA: 
                        
        
        
            Status :
                        
                            
            
        
    
    
        Scenarios
            Pass scores
            Rpa Information
        
            
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            

            
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            

            
                
                    Behaviours
                    
                                    
                                
            
        
    



    Form->hidden('rpaId', array('value' => $rpaId));
    echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
    ?>




                            [1] => 
    Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'edit_assessment', $rpa['Rpa']['hash']), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn checkCandidateStatus', 'data-id' => $rpa['Rpa']['id'],));


    if ($rpa['Rpa']['rpa_candidate_count']  0) {
            $message = 'Are you sure you want to delete this RPA, as it is ued in job role';
        }
        echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'delete', $rpa['Rpa']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'), __($message));
    } else {
        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteIcon'))), 'javascript:alert("Unable to delete RPA, it is already in use.")', array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));
    }

    ?>

                            [2] => 
    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'crpts', 'controller' => 'rpas', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>

                            [3] => 
                            [4] => 


    
        
            RPA: 
                        
        
        
            Status :
                        
                            
            
        
    
    
        Scenarios
            Pass scores
            Rpa Information
        
            
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            

            
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            

            
                
                    Behaviours
                    
                                    
                                
            
        
    



    Form->hidden('rpaId', array('value' => $rpaId));
    echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
    ?>



                            [5] => 
    
        
            RPA: 
                        
        
        
            Status :
                        
                            
            
        
    
    
        Scenarios
            Pass scores
            Rpa Information
        
            
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            

            
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            

            
                
                    Behaviours
                    
                                    
                                
            
        
    

                            [6] => 
        
            RPA: 
                        
        
        
            Status :
                        
                            
            
        
    
                            [7] => 
            RPA: 
                        
        
                            [8] => 
            Status :
                        
                            
            
        
                            [9] => Status :
                        
                            
            
                            [10] => 
        Scenarios
            Pass scores
            Rpa Information
        
            
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            

            
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            

            
                
                    Behaviours
                    
                                    
                                
            
        
    
                            [11] => 
            
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            

            
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            

            
                
                    Behaviours
                    
                                    
                                
            
        
                            [12] => 
                
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
            
                            [13] => 
                    
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            
                            [14] => 
                                
                                    
                                        
                                
                                
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            
                            [15] => 
                                    
                                        
                                
                            [16] => 
                                    
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    

                                    
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                                
                            [17] => 
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                            [18] => 
                                                Alias

                                                
                                                    
                                            
                            [19] => 
                                        Responses
                                        
                                                        
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                                                        
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                                                    
                                                    
                            [20] => 
                                                            
                                                                
                                                            
                                                                
                                                            
                                                                
                                                        
                            [21] => 
                                                            

                                                            
                                                                Alias

                                                                
                                                                    
                                                            
                                                        
                            [22] => 
                                                                Alias

                                                                
                                                                    
                                                            
                            [23] => 
                
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                Behaviours
                            Pass score
                            Critical
                        
                                
                                
                                    
                            
                            [24] => 
                    Overall pass score: 
                        Edit
                            Save
                            
                    
                
                            [25] => 
                            [26] => 
                
                    Behaviours
                    
                                    
                                
            
                            [27] => 
                    Behaviours
                    
                                    
                                
                            [28] => 
                            [29] => 
    Form->hidden('rpaId', array('value' => $rpaId));
    echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
    ?>

                        )

                    [span] => Array
                        (
                            [0] => 
                        
                            [1] => 
                            
                            [2] => 
                                        
                            [3] => 
                                        
                                            
                                        
                                            

                                            
                                                Alias

                                                
                                                    
                                            
                                        
                                    
                            [4] => 
                            [5] => 
                                                                
                            [6] => 
                                                                
                            [7] => 
                                                                
                            [8] => 
                            [9] => Overall pass score: 
                            [10] => 
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Elements] => Array
        (
            [test.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Go to previous question
                            [1] => Go to next question
                        )

                    [submit] => Array
                        (
                            [0] => Previous question
                            [1] => Next question
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please choose a response before continuing
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            :
                
            
                

                     $response) {

                        $selectedClass = '';
                        if ($selectedResponseId == $response['id']) {
                            $selectedClass = 'active';
                        }
                        ?>

                        

                            

                        
            

            Form->create('CfaCandidateAnswer', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa', $cfaHash, $cfaCandidateHash, $jrHash)));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => 'Go to previous question', 'div' => false, 'tabindex' => 7));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('CfaCandidatesAnswer.response_id', array('value' => $selectedResponseId, 'id' => 'responseId'));
                echo $this->Form->hidden('CfaCandidatesAnswer.response_value', array('value' => $selectedResponseValue, 'id' => 'responseValue'));
                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('CfaCandidatesAnswer.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'tabindex' => 8));
                ?>
            

            Form->end();?>

        
        
            
    

                            [1] => 
        
            :
                
            
                

                     $response) {

                        $selectedClass = '';
                        if ($selectedResponseId == $response['id']) {
                            $selectedClass = 'active';
                        }
                        ?>

                        

                            

                        
            

            Form->create('CfaCandidateAnswer', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa', $cfaHash, $cfaCandidateHash, $jrHash)));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => 'Go to previous question', 'div' => false, 'tabindex' => 7));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('CfaCandidatesAnswer.response_id', array('value' => $selectedResponseId, 'id' => 'responseId'));
                echo $this->Form->hidden('CfaCandidatesAnswer.response_value', array('value' => $selectedResponseValue, 'id' => 'responseValue'));
                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('CfaCandidatesAnswer.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'tabindex' => 8));
                ?>
            

            Form->end();?>

        
        
            
    
                            [2] => 
            :
                
            
                

                     $response) {

                        $selectedClass = '';
                        if ($selectedResponseId == $response['id']) {
                            $selectedClass = 'active';
                        }
                        ?>

                        

                            

                        
            

            Form->create('CfaCandidateAnswer', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa', $cfaHash, $cfaCandidateHash, $jrHash)));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => 'Go to previous question', 'div' => false, 'tabindex' => 7));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('CfaCandidatesAnswer.response_id', array('value' => $selectedResponseId, 'id' => 'responseId'));
                echo $this->Form->hidden('CfaCandidatesAnswer.response_value', array('value' => $selectedResponseValue, 'id' => 'responseValue'));
                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('CfaCandidatesAnswer.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'tabindex' => 8));
                ?>
            

            Form->end();?>

        
                            [3] => :
                
                            [4] => 
                

                     $response) {

                        $selectedClass = '';
                        if ($selectedResponseId == $response['id']) {
                            $selectedClass = 'active';
                        }
                        ?>

                        

                            

                        
            
                            [5] => 

                     $response) {

                        $selectedClass = '';
                        if ($selectedResponseId == $response['id']) {
                            $selectedClass = 'active';
                        }
                        ?>

                        

                            

                        
                            [6] => 
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => 'Go to previous question', 'div' => false, 'tabindex' => 7));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('CfaCandidatesAnswer.response_id', array('value' => $selectedResponseId, 'id' => 'responseId'));
                echo $this->Form->hidden('CfaCandidatesAnswer.response_value', array('value' => $selectedResponseValue, 'id' => 'responseValue'));
                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('CfaCandidatesAnswer.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'tabindex' => 8));
                ?>
            
                            [7] => 
                    
                        
                    

                    
                         of
                        
                    
                
                            [8] => 
                        
                    
                            [9] => 
                            [10] => 
            
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 

                            
                            [2] => 
                            [3] => 
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [ats_candidate_report.ctp] => Array
                (
                    [h1] => Array
                        (
                            [0] => Report of 
                            [1] => This report page has been expired.
                        )

                    [div] => Array
                        (
                            [0] => 
    Report of 

    
    
        

             the  assessment.

            Report will be shown very soon, as it is under progress

            
    

    

    
    This report page has been expired.
    
                            [1] => 
                            [2] => 

    
                        )

                    [span] => Array
                        (
                            [0] => 

             the  assessment.

            Report will be shown very soon, as it is under progress

            
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [cancelled.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
                            [4] => 
                    
                                                                                                                                                                          
                    
                    
                        Your assessment is been cancelled.
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
                            [5] => 
                                                                                                                                                                          
                    
                            [6] => 
                        Your assessment is been cancelled.
                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [candidate_add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => First Name
                            [1] => Last Name
                            [2] => Email address
                        )

                    [title] => Array
                        (
                            [0] => Start assessment
                        )

                    [submit] => Array
                        (
                            [0] => Get started
                        )

                    [validation_messages] => Array
                        (
                            [0] => First name field should not be empty
                            [1] => First name should contain only alphabets
                            [2] => First name should not contain spaces before and after
                            [3] => Last name should contain only alphabets
                            [4] => Last name should not contain spaces before and after
                            [5] => Email field should not be empty
                            [6] => Please enter valid email address.
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            How well matched are we?
        
        
            Form->create('Candidate', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'candidate_add', $hash)));
            echo $this->Form->input('first_name', array('class' => '', 'placeholder' => 'First Name', 'title' => "Candidate's first name"));
            echo $this->Form->input('last_name', array('class' => '', 'placeholder' => 'Last Name', 'title' => "Candidate's last name"));
            echo $this->Form->input('email', array('class' => '', 'placeholder' => 'Email address', 'title' => "Candidate's email address"));

            echo $this->Form->submit('Get started', array('class' => 'btnBlue bottomBtn', 'title' => 'Start assessment'));
            echo $this->Form->end();
            ?>
        
    

                            [1] => 
        
            How well matched are we?
        
        
            Form->create('Candidate', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'candidate_add', $hash)));
            echo $this->Form->input('first_name', array('class' => '', 'placeholder' => 'First Name', 'title' => "Candidate's first name"));
            echo $this->Form->input('last_name', array('class' => '', 'placeholder' => 'Last Name', 'title' => "Candidate's last name"));
            echo $this->Form->input('email', array('class' => '', 'placeholder' => 'Email address', 'title' => "Candidate's email address"));

            echo $this->Form->submit('Get started', array('class' => 'btnBlue bottomBtn', 'title' => 'Start assessment'));
            echo $this->Form->end();
            ?>
        
    
                            [2] => 
            How well matched are we?
        
                            [3] => 
            Form->create('Candidate', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'candidate_add', $hash)));
            echo $this->Form->input('first_name', array('class' => '', 'placeholder' => 'First Name', 'title' => "Candidate's first name"));
            echo $this->Form->input('last_name', array('class' => '', 'placeholder' => 'Last Name', 'title' => "Candidate's last name"));
            echo $this->Form->input('email', array('class' => '', 'placeholder' => 'Email address', 'title' => "Candidate's email address"));

            echo $this->Form->submit('Get started', array('class' => 'btnBlue bottomBtn', 'title' => 'Start assessment'));
            echo $this->Form->end();
            ?>
        
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [cfa1_question.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => div
                            [1] => Go to next question
                        )

                    [submit] => Array
                        (
                            [0] => Previous question
                            [1] => Next question
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            .
                .
            
                

                    element('Sky/cfa1/responses', array('getData' => $getData, 'selectedResponseId' => $selectedResponseId))?>

                
            

            Form->create('', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa_save', $cfaHash, $cfaCandidateHash, $jrHash), 'id' => ''));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => $title, 'div' => false, 'tabindex' => 8));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('ResData.1', array('value' => $selectedResponseId));

                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('ResData.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'disabled' => true, 'id' => 'saveAndContinueBtn', 'tabindex' => 7));

                ?>
            

            Form->end();
            echo $this->Html->script(array('/js/sky/cfa.js'));
            ?>

        

        
            
                
        
    

                            [1] => 
        
            .
                .
            
                

                    element('Sky/cfa1/responses', array('getData' => $getData, 'selectedResponseId' => $selectedResponseId))?>

                
            

            Form->create('', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa_save', $cfaHash, $cfaCandidateHash, $jrHash), 'id' => ''));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => $title, 'div' => false, 'tabindex' => 8));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('ResData.1', array('value' => $selectedResponseId));

                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('ResData.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'disabled' => true, 'id' => 'saveAndContinueBtn', 'tabindex' => 7));

                ?>
            

            Form->end();
            echo $this->Html->script(array('/js/sky/cfa.js'));
            ?>

        

        
            
                
        
    
                            [2] => 
            .
                .
            
                

                    element('Sky/cfa1/responses', array('getData' => $getData, 'selectedResponseId' => $selectedResponseId))?>

                
            

            Form->create('', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'cfa_save', $cfaHash, $cfaCandidateHash, $jrHash), 'id' => ''));

            ?>

            
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => $title, 'div' => false, 'tabindex' => 8));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('ResData.1', array('value' => $selectedResponseId));

                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('ResData.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'disabled' => true, 'id' => 'saveAndContinueBtn', 'tabindex' => 7));

                ?>
            

            Form->end();
            echo $this->Html->script(array('/js/sky/cfa.js'));
            ?>

        
                            [3] => .
                .
                            [4] => 
                

                    element('Sky/cfa1/responses', array('getData' => $getData, 'selectedResponseId' => $selectedResponseId))?>

                
            
                            [5] => 

                    element('Sky/cfa1/responses', array('getData' => $getData, 'selectedResponseId' => $selectedResponseId))?>

                
                            [6] => 
                Form->submit('Previous question', array('class' => 'btnBlue prevBtnLink whichButtonClicked ' . $disabledClass . '', 'data-value' => 1, 'data-name' => 'previous', 'disabled' => $disabled, 'title' => $title, 'div' => false, 'tabindex' => 8));
                ?>


                
                    
                        
                    

                    
                         of
                        
                    
                

                Form->hidden('ResData.1', array('value' => $selectedResponseId));

                /**
                 * when user clicks on the Next or Previous button populate this field with the button value,
                 * so after posting the data we can recognise whether to save the data or go to previous question
                 */
                echo $this->Form->hidden('ResData.whichButton', array('value' => 0, 'class' => 'whichButton'));
                //data-name & data-value is IMP : used in js to detect & assign value to the hidden field
                echo $this->Form->submit('Next question', array('class' => 'btnBlue nextBtnLink whichButtonClicked', 'data-value' => 2, 'data-name' => 'next', 'title' => 'Go to next question', 'div' => false, 'disabled' => true, 'id' => 'saveAndContinueBtn', 'tabindex' => 7));

                ?>
            
                            [7] => 
                    
                        
                    

                    
                         of
                        
                    
                
                            [8] => 
                        
                    
                            [9] => 
                            [10] => 
            
                
        
                            [11] => 
                
                        )

                    [span] => Array
                        (
                            [0] => .
                            [1] => 
                            [2] => 
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [cfa_report.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Export to pdf
                        )

                    [h2] => Array
                        (
                            [0] => Report for 
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
            

            
                
        

                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
    
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_cfa_report', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
    Overall Result:
        
    
        
            
                How to read the scale? 
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            ?>
        

    

                            [1] => 
        
            
            

            
                
        

                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
                            [2] => 
            
            

            
                
        
                            [3] => 

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
                            [4] => 
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_cfa_report', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
                            [5] => 
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_cfa_report', isset($cfaCandidateId) ? $cfaCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
                            [6] => Overall Result:
        
                            [7] => 
        
            
                How to read the scale? 
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            ?>
        

    
                            [8] => 
            
                How to read the scale? 
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            ?>
        
                            [9] => 
                How to read the scale? 
            
                        )

                    [span] => Array
                        (
                            [0] => 
            
                            [1] => Certificate No:
                            [2] => 
                
                            [3] => Assessment taken on:
                            [4] => 
                    
                            [5] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [error.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                
            
        
    

                            [1] => 
        
            
                
                    
                                                                                                                                                                          
                    
                    
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                
            
        
    
                            [2] => 
            
                
                    
                                                                                                                                                                          
                    
                    
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                
            
        
                            [3] => 
                
                    
                                                                                                                                                                          
                    
                    
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                
            
                            [4] => 
                    
                                                                                                                                                                          
                    
                    
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                    
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                
                            [5] => 
                                                                                                                                                                          
                    
                            [6] => 
                        Taleo credentials are not matching, please try after some time';
                        } elseif ($status == 'invalid_assessment') {
                            echo 'The assessment you are trying to attend is no longer present, please try after some time';
                        } elseif ($status == 'name_missing') {
                            echo 'Your first name and last name is missing, please try again. ';
                        } elseif ($status == 'name_email_format_incorrect') {
                            echo 'Name & Email is not well formatted, please try again. ';
                        } elseif ($status == 'assessment_in_edit_mode') {
                            echo 'This assessment is in edit mode, please try again after sometime. ';
                        }
                        ?>

                    
                            [7] => 
                        Html->link(__('Back'), $redirectCallBackURL, array('class' => 'btnBlue', 'title' => 'Back'));
                        ?>
                    
                            [8] => 
    
        
    

                            [9] => 
        
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [maintenance.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Maintenance
                
                
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Maintenance
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 
                        Website is currently under maintenance, we will be back soon.

                        For any assistance, please email
                            admin@crucibleapp.com.
                        
                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [report.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Export report to pdf
                        )

                    [h2] => Array
                        (
                            [0] => Report for 
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                

            
                
        
                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
    
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export report to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_pdf_report', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
    Overall Result:
        
    
        
            
                
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            if (!empty($rpaScores)) {
                echo $this->element('Users.reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
            }
            ?>
        

    

                            [1] => 
        
            
                

            
                
        
                    

        

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
    
                            [2] => 
            
                

            
                
        
                            [3] => 

            
                Certificate No:
                
                
            

            
                Assessment taken on:
                
                    
            
        
                            [4] => 
        Report for 

        
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export report to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_pdf_report', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
    
                            [5] => 
            Html->link($this->Html->tag('i', '', array('class' => 'pdfIcon', 'title' => 'Export report to pdf')) . __('Export to PDF'), array('plugin' => 'users', 'controller' => 'candidates', 'action' => 'export_pdf_report', isset($jobRoleCandidateId) ? $jobRoleCandidateId : ''), array('class' => 'btn btnThin pull-right', 'escape' => false));
            ?>
        
                            [6] => Overall Result:
        
                            [7] => 
        
            
                
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            if (!empty($rpaScores)) {
                echo $this->element('Users.reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
            }
            ?>
        

    
                            [8] => 
            
                
            
            element('Users.reports/cfa', array('cfaScores' => isset($cfaScores) ? $cfaScores : ''));
            }
            if (!empty($rpaScores)) {
                echo $this->element('Users.reports/rpa', array('cfaScores' => isset($rpaScores) ? $rpaScores : ''));
            }
            ?>
        
                            [9] => 
                
            
                        )

                    [span] => Array
                        (
                            [0] => 
                
                            [1] => Certificate No:
                            [2] => 
                
                            [3] => Assessment taken on:
                            [4] => 
                    
                            [5] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [report_expired.ctp] => Array
                (
                    [h1] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 

    

    


                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [retake.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Important note!
                
                
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Important note!
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    
                        
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 
                        
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [rpa_scenario.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
            
        
        
            
    
    
        Form->create('ResData', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'rpa', $rpaHash, $rpaCandidateHash, $jrHash), 'id' => ''));?>
        
            
                Situation

                
                    

                Choose a response to each statement below
            
            
                 $rpaResponse) {
                        //remove last li bottom border
                        $responseLiClass = 'scenarioResponses';
                        if ($totalResponseCount == $responseCount) {
                            $responseLiClass = 'liLastChild scenarioResponses';
                        }
                        ?>
                        
                            .

                            

                            Please select
                                
                                
                            Form->hidden('ResData.' . $key . '.response', array('value' => $rpaResponse['response']));
                                    echo $this->Form->hidden('ResData.' . $key . '.rpa_tag_id', array('class' => 'rpaTagId', 'value' => 0));
                                    ?>
                         
                            element('Sky/example_allocate_points');
                                ?>
                            
                        
        

        Form->submit($getData['buttonTitle'], array('class' => 'btnBlue bottomBtn nextQuestion', 'title' => 'Continue', 'id' => 'saveAndContinueBtn'));
        echo $this->Form->end();

        echo $this->Html->script(array('/js/sky/rpa.js'));
        ?>
    

                            [1] => 
        
            
            
        
        
            
    
                            [2] => 
            
            
        
                            [3] => 
            
                            [4] => 
        Form->create('ResData', array('url' => array('plugin' => 'customisations', 'controller' => 'skys', 'action' => 'rpa', $rpaHash, $rpaCandidateHash, $jrHash), 'id' => ''));?>
        
            
                Situation

                
                    

                Choose a response to each statement below
            
            
                 $rpaResponse) {
                        //remove last li bottom border
                        $responseLiClass = 'scenarioResponses';
                        if ($totalResponseCount == $responseCount) {
                            $responseLiClass = 'liLastChild scenarioResponses';
                        }
                        ?>
                        
                            .

                            

                            Please select
                                
                                
                            Form->hidden('ResData.' . $key . '.response', array('value' => $rpaResponse['response']));
                                    echo $this->Form->hidden('ResData.' . $key . '.rpa_tag_id', array('class' => 'rpaTagId', 'value' => 0));
                                    ?>
                         
                            element('Sky/example_allocate_points');
                                ?>
                            
                        
        

        Form->submit($getData['buttonTitle'], array('class' => 'btnBlue bottomBtn nextQuestion', 'title' => 'Continue', 'id' => 'saveAndContinueBtn'));
        echo $this->Form->end();

        echo $this->Html->script(array('/js/sky/rpa.js'));
        ?>
    
                            [5] => 
            
                Situation

                
                    

                Choose a response to each statement below
            
            
                 $rpaResponse) {
                        //remove last li bottom border
                        $responseLiClass = 'scenarioResponses';
                        if ($totalResponseCount == $responseCount) {
                            $responseLiClass = 'liLastChild scenarioResponses';
                        }
                        ?>
                        
                            .

                            

                            Please select
                                
                                
                            Form->hidden('ResData.' . $key . '.response', array('value' => $rpaResponse['response']));
                                    echo $this->Form->hidden('ResData.' . $key . '.rpa_tag_id', array('class' => 'rpaTagId', 'value' => 0));
                                    ?>
                         
                            element('Sky/example_allocate_points');
                                ?>
                            
                        
        
                            [6] => 
                Situation

                
                    

                Choose a response to each statement below
            
                            [7] => 
                 $rpaResponse) {
                        //remove last li bottom border
                        $responseLiClass = 'scenarioResponses';
                        if ($totalResponseCount == $responseCount) {
                            $responseLiClass = 'liLastChild scenarioResponses';
                        }
                        ?>
                        
                            .

                            

                            Please select
                                
                                
                            Form->hidden('ResData.' . $key . '.response', array('value' => $rpaResponse['response']));
                                    echo $this->Form->hidden('ResData.' . $key . '.rpa_tag_id', array('class' => 'rpaTagId', 'value' => 0));
                                    ?>
                         
                            element('Sky/example_allocate_points');
                                ?>
                            
                        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => .
                            [2] => Please select
                            [3] => 
                            Form->hidden('ResData.' . $key . '.response', array('value' => $rpaResponse['response']));
                                    echo $this->Form->hidden('ResData.' . $key . '.rpa_tag_id', array('class' => 'rpaTagId', 'value' => 0));
                                    ?>
                        
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Customisations/View/Skys] => Array
        (
            [unavailable.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Continue
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    

                            [1] => 
        
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
    
                            [2] => 
            
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
        
                            [3] => 
                
                    Job role not available
                
                
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
            
                            [4] => 
                    Job role not available
                
                            [5] => 
                    
                                                                                                                                                                          
                    
                    

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                    Html->link(__('Continue'), $redirectionUrl, array('class' => 'btnBlue', 'title' => 'Continue'));
                    }
                    ?>
                
                            [6] => 
                                                                                                                                                                          
                    
                            [7] => 

                        Sorry, you can not take this assessment now as admin is working on it currently.

                        Please try again after sometime. For any support contact
                            admin@crucibleapp.com
                        
                    
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Assessments] => Array
        (
            [index.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="center">Please enter your basic information.</p>
                        )

                    [h2] => Array
                        (
                            [0] => Candidate Information
                        )

                    [div] => Array
                        (
                            [0] => 
                
                    
                
                    Webonise

                     Culture and Role preference tool
                
            
                            [1] => 
                    
                            [2] => 
                    Webonise

                     Culture and Role preference tool
                
                            [3] =>  Culture and Role preference tool
                            [4] => 
                
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
            
                            [5] => 
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
                            [6] => 
                        Candidate Information
                    
                            [7] => 
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                            [8] => 
                                Name

                                
                            
                            [9] => 
                            [10] => 
                                Email

                                
                                    
                            
                            [11] => 
                                    
                            [12] => 
                
                     Terms of use
                         Privacy Policy 
                        
                    
                © Chemistry 2012
            
                            [13] => 
                     Terms of use
                         Privacy Policy 
                        
                    
                            [14] => 
                        )

                    [labels] => Array
                        (
                            [0] => Name
                            [1] => Email
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Assessments] => Array
        (
            [live_test.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="center">Please enter your basic information.</p>
                        )

                    [h2] => Array
                        (
                            [0] => Candidate Information
                        )

                    [div] => Array
                        (
                            [0] => 
                
                    
                
                    Webonise

                     Culture and Role preference tool
                
            
                            [1] => 
                    
                            [2] => 
                    Webonise

                     Culture and Role preference tool
                
                            [3] =>  Culture and Role preference tool
                            [4] => 
                
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
            
                            [5] => 
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
                            [6] => 
                        Candidate Information
                    
                            [7] => 
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                            [8] => 
                                Name

                                
                            
                            [9] => 
                            [10] => 
                                Email

                                
                                    
                            
                            [11] => 
                                    
                            [12] => 
                
                     Terms of use
                         Privacy Policy 
                        
                    
                © Chemistry 2012
            
                            [13] => 
                     Terms of use
                         Privacy Policy 
                        
                    
                            [14] => 
                        )

                    [labels] => Array
                        (
                            [0] => Name
                            [1] => Email
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [add_core_themes.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & Settings 
            Development Areas
        
        
            1 SelectDevelopment Areas
                2 SelectCore Themes
                3 Select Questions& Set Passing Score
            
        
            Select Development Areas
        
    

                            [1] => 
        
            Parameters & Settings 
            Development Areas
        
        
            1 SelectDevelopment Areas
                2 SelectCore Themes
                3 Select Questions& Set Passing Score
            
        
            Select Development Areas
        
    
                            [2] => 
            Parameters & Settings 
            Development Areas
        
                            [3] => 
            1 SelectDevelopment Areas
                2 SelectCore Themes
                3 Select Questions& Set Passing Score
            
                            [4] => 
            Select Development Areas
        
                            [5] => 
    Form->create('DaOrganisationsProduct', array('class' => 'form-horizontal'));
    ?>
     $da) {

                if (isset($coreThemesAvailable[$key]['total_core_themes']) && isset($selectedDAs[$key]['themeCount'])) {
                    if ($selectedDAs[$key]['themeCount'] 
                
                    
                        

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            if (isset($selectedDAs[$key]['id'])) {
                                echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.id', array('value' => $selectedDAs[$key]['id']));
                            }

                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                                ?>



                             
                    
                    

                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name', 'value' => $alias));
                        ?>

                        
                            
                    
                

                There is no Development area to select';
        }
        ?>
        
            

            
            
                Form->submit('Next', array('class' => 'btn btnBlack', 'div' => false));
                ?>

            
        
    Form->end(); ?>

                            [6] => 
                        

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            if (isset($selectedDAs[$key]['id'])) {
                                echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.id', array('value' => $selectedDAs[$key]['id']));
                            }

                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                                ?>



                             
                    
                            [7] => 

                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name', 'value' => $alias));
                        ?>

                        
                            
                    
                            [8] => 
                            
                            [9] => 

            
                            [10] => 
                Form->submit('Next', array('class' => 'btn btnBlack', 'div' => false));
                ?>

            
                        )

                    [span] => Array
                        (
                            [0] => Parameters & Settings
                            [1] => 
                            [2] => Development Areas
                            [3] => SelectDevelopment Areas
                            [4] => SelectCore Themes
                            [5] => Select Questions& Set Passing Score
                            [6] => 
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                                ?>



                            
                        )

                    [labels] => Array
                        (
                            [0] => 

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            if (isset($selectedDAs[$key]['id'])) {
                                echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.id', array('value' => $selectedDAs[$key]['id']));
                            }

                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                                ?>



                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [add_more_behaviours.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Add
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & Settings 
            Development Areas
        
        
            Add more behaviours
        
    

                            [1] => 
        
            Parameters & Settings 
            Development Areas
        
        
            Add more behaviours
        
    
                            [2] => 
            Parameters & Settings 
            Development Areas
        
                            [3] => 
            Add more behaviours
        
                            [4] => 
    Form->create('DaOrganisationsProduct', array('class' => 'form-horizontal'));
    ?>
     $da) {

                ?>
                
                    
                        

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => '', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'label' => $da['Category']));



                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));



                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));
                                ?>



                             
                    
                    

                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name', 'value' => ''));
                        ?>

                        

                        
                    
                

                There is no Development area to select';
        }
        ?>
        
            

            
            
                Form->submit('Add', array('class' => 'btn btnBlack', 'div' => false, 'id' => 'nextSubmitButton'));
                ?>

            
        
        
            Html->image('ajax-loader_product.gif');?>
        
    Form->end(); ?>

                            [5] => 
                        

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => '', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'label' => $da['Category']));



                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));



                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));
                                ?>



                             
                    
                            [6] => 

                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name', 'value' => ''));
                        ?>

                        

                        
                    
                            [7] => 

                        
                            [8] => 

            
                            [9] => 
                Form->submit('Add', array('class' => 'btn btnBlack', 'div' => false, 'id' => 'nextSubmitButton'));
                ?>

            
                        )

                    [span] => Array
                        (
                            [0] => Parameters & Settings
                            [1] => 
                            [2] => Development Areas
                            [3] => 
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));
                                ?>



                            
                        )

                    [labels] => Array
                        (
                            [0] => 

                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => '', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'label' => $da['Category']));



                            /*pass organisation id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));



                            ?>

                            
                                Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));
                                ?>



                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [edit.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('Category'); ?>
    
        Form->input('id');
        echo $this->Form->input('name');
        echo $this->Form->input('parent_id');
        echo $this->Form->input('lft');
        echo $this->Form->input('rght');
        echo $this->Form->input('type');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Form->postLink(__('Delete'), array('action' => 'delete', $this->Form->value('Category.id')), null, __('Are you sure you want to delete # %s?', $this->Form->value('Category.id'))); ?>
        Html->link(__('List Categories'), array('action' => 'index')); ?>
        Html->link(__('List Core Themes'), array('controller' => 'core_themes', 'action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
        Html->link(__('List Da Organisations Products'), array('controller' => 'da_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [edit_response_tags.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Save
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Edit response tags
    
    Form->create('RpaTag', array('class' => 'form-horizontal'));
    ?>
    
        

            Crt->ScenarioResponseTags();
            ?>

             $responseTag) { ?>
                
                        
                    
                        
                            Form->input($key . '.RpaTag.name', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name', 'value' => $tagName));

                            //                            echo $this->Form->hidden($key.'.RpaTag.organisation_id',
                            //                                array('value' => $organisationId));
                            //
                            //                            echo $this->Form->hidden($key.'.RpaTag.product_id',
                            //                                array('value' => $productId));

                            echo $this->Form->hidden($key . '.RpaTag.response_id', array('value' => $key));


                            echo $this->Form->hidden($key . '.RpaTag.id', array('value' => $tagId));

                            ?>
                        
                    
                
                    
                        Form->submit('Save', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    

    Form->end(); ?>

                            [1] => 
        Parameters and Settings 
        Edit response tags
    
                            [2] => 
        

            Crt->ScenarioResponseTags();
            ?>

             $responseTag) { ?>
                
                        
                    
                        
                            Form->input($key . '.RpaTag.name', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name', 'value' => $tagName));

                            //                            echo $this->Form->hidden($key.'.RpaTag.organisation_id',
                            //                                array('value' => $organisationId));
                            //
                            //                            echo $this->Form->hidden($key.'.RpaTag.product_id',
                            //                                array('value' => $productId));

                            echo $this->Form->hidden($key . '.RpaTag.response_id', array('value' => $key));


                            echo $this->Form->hidden($key . '.RpaTag.id', array('value' => $tagId));

                            ?>
                        
                    
                
                    
                        Form->submit('Save', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [3] => 

            Crt->ScenarioResponseTags();
            ?>

             $responseTag) { ?>
                
                        
                    
                        
                            Form->input($key . '.RpaTag.name', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name', 'value' => $tagName));

                            //                            echo $this->Form->hidden($key.'.RpaTag.organisation_id',
                            //                                array('value' => $organisationId));
                            //
                            //                            echo $this->Form->hidden($key.'.RpaTag.product_id',
                            //                                array('value' => $productId));

                            echo $this->Form->hidden($key . '.RpaTag.response_id', array('value' => $key));


                            echo $this->Form->hidden($key . '.RpaTag.id', array('value' => $tagId));

                            ?>
                        
                    
                
                    
                        Form->submit('Save', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                            [4] => 
                            Form->input($key . '.RpaTag.name', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name', 'value' => $tagName));

                            //                            echo $this->Form->hidden($key.'.RpaTag.organisation_id',
                            //                                array('value' => $organisationId));
                            //
                            //                            echo $this->Form->hidden($key.'.RpaTag.product_id',
                            //                                array('value' => $productId));

                            echo $this->Form->hidden($key . '.RpaTag.response_id', array('value' => $key));


                            echo $this->Form->hidden($key . '.RpaTag.id', array('value' => $tagId));

                            ?>
                        
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Edit response tags
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [index.ctp] => Array
                (
                    [alert_messages] => Array
                        (
                            [0] =>  + responseClass + 
                            [1] =>  + responseClass + 
                        )

                    [h2] => Array
                        (
                            [0] => List of Behaviours
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        Add more behaviours
    
    
        element('product/left_side_bar'); ?>
        
            
                
                    List of Behaviours
                
                
                     $behaviour_name) {
                        ?>
                        
                            
                                
                                
                                    
                                
                                
                            
                        
                        
            

            
                
                    
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                
            

        
    


                            [1] => 
        
            Parameters & settings
        
        Add more behaviours
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        element('product/left_side_bar'); ?>
        
            
                
                    List of Behaviours
                
                
                     $behaviour_name) {
                        ?>
                        
                            
                                
                                
                                    
                                
                                
                            
                        
                        
            

            
                
                    
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                
            

        
    
                            [4] => 
            
                
                    List of Behaviours
                
                
                     $behaviour_name) {
                        ?>
                        
                            
                                
                                
                                    
                                
                                
                            
                        
                        
            

            
                
                    
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                
            

        
                            [5] => 
                
                    List of Behaviours
                
                
                     $behaviour_name) {
                        ?>
                        
                            
                                
                                
                                    
                                
                                
                            
                        
                        
            
                            [6] => 
                    List of Behaviours
                
                            [7] => 
                     $behaviour_name) {
                        ?>
                        
                            
                                
                                
                                    
                                
                                
                            
                        
                        
                            [8] => 
                            
                                
                                
                                    
                                
                                
                            
                        
                            [9] => 
                                
                                
                                    
                                
                                
                            
                            [10] => 
                            [11] => 
                                    
                            [12] => 
                
                    
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                
            
                            [13] => 
                    
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                
                            [14] => 
                        
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                        
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                    
                            [15] => 
                            Response Tags

                            Html->link('', array('plugin' => 'das', 'controller' => 'categories', 'action' => 'edit_response_tags'), array('class' => 'editIcon', 'title' => "Edit"));


                            ?>

                        
                            [16] => 
                             1) {
                                    foreach ($responseTags as $responseTag) {
                                        ?>
                                        
                                            
                                        
                        )

                    [span] => Array
                        (
                            [0] => Response Tags
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [select.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [title] => Array
                        (
                            [0] => Back
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Assessment

    
    
        1 SelectDevelopment Areas
            2 SelectCore Themes
            3 SelectParameters
            4 Select Questions& Set Passing Score
        
    Form->create('DaOrganisationsProduct', array('class' => 'form-horizontal'));
    ?>
     $da):
                ?>
                
                    
                        
                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));
                            ?>

                            
                            Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                            ?>
                        
                    
                    
                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name'));
                        ?>

                        
                    
                
                
            
            
                
                Form->submit('Next', array('class' => 'btn btnBlack pull-left', 'div' => false, 'id' => 'saveDa'));

                /*echo $this->Html->link('Back',
                    'javascript:history.go(-1);',
                    array(
                        'class' => 'back pull-left linkSpacing',
                        'title' => 'Back'
                    )
                );*/
                ?>

            
        
    Form->end();?>

                            [1] => 
                            [2] => 
        1 SelectDevelopment Areas
            2 SelectCore Themes
            3 SelectParameters
            4 Select Questions& Set Passing Score
        
                            [3] => 
                        
                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));
                            ?>

                            
                            Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                            ?>
                        
                    
                            [4] => 
                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name'));
                        ?>

                        
                    
                            [5] => 
                            [6] => 
                
                Form->submit('Next', array('class' => 'btn btnBlack pull-left', 'div' => false, 'id' => 'saveDa'));

                /*echo $this->Html->link('Back',
                    'javascript:history.go(-1);',
                    array(
                        'class' => 'back pull-left linkSpacing',
                        'title' => 'Back'
                    )
                );*/
                ?>

            
                        )

                    [span] => Array
                        (
                            [0] => SelectDevelopment Areas
                            [1] => SelectCore Themes
                            [2] => SelectParameters
                            [3] => Select Questions& Set Passing Score
                            [4] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $key, 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));
                            ?>

                            
                            Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            /*pass product id as hidden to store */
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da, 'label' => false, 'div' => false));
                            ?>
                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [select_behaviours.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours
    
    
        1 Selectbehaviours
            2 Setresponse tags
        

    

    
        Form->create('DaOrganisationsProduct', array('class' => 'form-horizontal')); ?>
         $da) {
                ?>

                
                    
                         Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            ?>
                            Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));

                                ?> 
                    
                    
                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name'));
                        ?>
                        
                    
                

                
                
                
                    Form->submit('Next', array('class' => 'btn btnBlack pull-left nextBtn', 'div' => false, 'id' => 'nextSubmitButton'));
                    ?>
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        

    



    $(document).ready(function () {

        var activateLoader = function () {
            $('.hideOnSubmit').hide();
            $('#activateLoader').show();
        }

        $('.disableTextBox').hide();

        $('.disableInput').show();

        $('.nextBtn').attr('disabled', true);

        $('.daCheckBox').on('click', function () {

            if (this.checked == 0) {
                $('#' + $(this).attr('data-id') + '').hide();
                $('#div' + $(this).attr('data-id-div')).show();
            } else {
                $('#' + $(this).attr('data-id') + '').show();
                $('#div' + $(this).attr('data-id-div')).hide();
            }

            if ($('.daCheckBox:checked').length > 0) {
                $('.nextBtn').attr('disabled', false);
            } else {
                $('.nextBtn').attr('disabled', true);
            }
        });

        $('#nextSubmitButton').click(function () {
            activateLoader();
        });
    });


                            [1] => 
        Parameters and Settings 
        Select behaviours
    
                            [2] => 
        1 Selectbehaviours
            2 Setresponse tags
        
                            [3] => 
                            [4] => 
        Form->create('DaOrganisationsProduct', array('class' => 'form-horizontal')); ?>
         $da) {
                ?>

                
                    
                         Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            ?>
                            Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));

                                ?> 
                    
                    
                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name'));
                        ?>
                        
                    
                

                
                
                
                    Form->submit('Next', array('class' => 'btn btnBlack pull-left nextBtn', 'div' => false, 'id' => 'nextSubmitButton'));
                    ?>
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        

    


                            [5] => 
                         Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            ?>
                            Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));

                                ?> 
                    
                            [6] => 
                        Form->input('DaOrganisationsProduct.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'class' => 'disableTextBox', 'placeholder' => 'Alias Name'));
                        ?>
                        
                    
                            [7] => 
                            [8] => 
                            [9] => 
                    Form->submit('Next', array('class' => 'btn btnBlack pull-left nextBtn', 'div' => false, 'id' => 'nextSubmitButton'));
                    ?>
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        

    
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => Selectbehaviours
                            [4] => Setresponse tags
                            [5] => Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));

                                ?>
                        )

                    [labels] => Array
                        (
                            [0] =>  Form->checkbox('DaOrganisationsProduct.' . $key . '.category_id', array('value' => $da['Category']['id'], 'id' => 'DaOrganisationsProduct' . $key . 'category_name_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('DaOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));

                            ?>
                            Form->hidden('DaOrganisationsProduct.' . $key . '.name', array('value' => $da['Category']['name'], 'label' => false, 'div' => false));

                                ?> 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [set_response_tags.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours 
        Set response tags
    
    
        1 Selectbehaviours
            2 Setresponse tags
        
    

    Form->create('RpaTag', array('class' => 'form-horizontal'));
    ?>
    
        

            Crt->ScenarioResponseTags();
            ?>

             $resposeTag) { ?>
                
                        
                    
                        
                            
                            Form->input('RpaTag.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name'));

                            echo $this->Form->hidden('RpaTag.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.product_id', array('value' => $productId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.response_id', array('value' => $key));

                            echo $this->Form->hidden('RpaTag.' . $key . '.name', array('value' => $resposeTag));

                            ?>
                        
                    
                
                    
                        
                        Form->submit('Done', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                

    

    Form->end(); ?>
    

                            [1] => 
        Parameters and Settings 
        Select behaviours 
        Set response tags
    
                            [2] => 
        1 Selectbehaviours
            2 Setresponse tags
        
                            [3] => 
        

            Crt->ScenarioResponseTags();
            ?>

             $resposeTag) { ?>
                
                        
                    
                        
                            
                            Form->input('RpaTag.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name'));

                            echo $this->Form->hidden('RpaTag.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.product_id', array('value' => $productId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.response_id', array('value' => $key));

                            echo $this->Form->hidden('RpaTag.' . $key . '.name', array('value' => $resposeTag));

                            ?>
                        
                    
                
                    
                        
                        Form->submit('Done', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                

    
                            [4] => 

            Crt->ScenarioResponseTags();
            ?>

             $resposeTag) { ?>
                
                        
                    
                        
                            
                            Form->input('RpaTag.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name'));

                            echo $this->Form->hidden('RpaTag.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.product_id', array('value' => $productId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.response_id', array('value' => $key));

                            echo $this->Form->hidden('RpaTag.' . $key . '.name', array('value' => $resposeTag));

                            ?>
                        
                    
                
                    
                        
                        Form->submit('Done', array('class' => 'btn btnBlack pull-left', 'id' => 'setResponseTags')); ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                            [5] => 
                            
                            Form->input('RpaTag.' . $key . '.alias', array('label' => false, 'div' => false, 'id' => $key, 'placeholder' => 'Alias Name'));

                            echo $this->Form->hidden('RpaTag.' . $key . '.organisation_id', array('value' => $organisationId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.product_id', array('value' => $productId));

                            echo $this->Form->hidden('RpaTag.' . $key . '.response_id', array('value' => $key));

                            echo $this->Form->hidden('RpaTag.' . $key . '.name', array('value' => $resposeTag));

                            ?>
                        
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => 
                            [4] => Set response tags
                            [5] => Selectbehaviours
                            [6] => Setresponse tags
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/Categories] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Category'), array('action' => 'edit', $category['Category']['id'])); ?> 
        Form->postLink(__('Delete Category'), array('action' => 'delete', $category['Category']['id']), null, __('Are you sure you want to delete # %s?', $category['Category']['id'])); ?> 
        Html->link(__('List Categories'), array('action' => 'index')); ?> 
        Html->link(__('New Category'), array('action' => 'add')); ?> 
        Html->link(__('List Core Themes'), array('controller' => 'core_themes', 'action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
        Html->link(__('List Da Organisations Products'), array('controller' => 'da_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'core_themes', 'action' => 'view', $coreTheme['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'core_themes', 'action' => 'edit', $coreTheme['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'core_themes', 'action' => 'delete', $coreTheme['id']), null, __('Are you sure you want to delete # %s?', $coreTheme['id'])); ?>
                
            
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
        
                            [4] => 
    
    
            
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'da_organisations_products', 'action' => 'view', $daOrganisationsProduct['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'da_organisations_products', 'action' => 'edit', $daOrganisationsProduct['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'da_organisations_products', 'action' => 'delete', $daOrganisationsProduct['id']), null, __('Are you sure you want to delete # %s?', $daOrganisationsProduct['id'])); ?>
                
            
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
        

                            [5] => 
        Html->link(__('New Da Organisations Product'), array('controller' => 'da_organisations_products', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 add
            2 select Questions& Set Passing Score
        
    
    

        Form->create('CoreThemesOrganisationsProduct', array('url' => array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add',), 'class' => 'competencySave'));
        ?>
         $coreTheme): ?>
                
                    
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                    
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                
                
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes', 'div' => false));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    


                            [1] => 
                            [2] => 
        1 add
            2 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        Form->create('CoreThemesOrganisationsProduct', array('url' => array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add',), 'class' => 'competencySave'));
        ?>
         $coreTheme): ?>
                
                    
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                    
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                
                
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes', 'div' => false));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    
                            [5] => 
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                            [6] => 
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                            [7] => 
                            [8] => 
                            [9] => 
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes', 'div' => false));

                        echo $this->Form->end();
                        ?>
                    
                
                            [10] => 
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes', 'div' => false));

                        echo $this->Form->end();
                        ?>
                    
                            [11] => 
            Html->image('ajax-loader_product.gif');?>
        
                        )

                    [span] => Array
                        (
                            [0] => add
                            [1] => select Questions& Set Passing Score
                            [2] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [edit.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Cultural Assessment
                            [1] => Done With Editing
                        )

                    [place_holders] => Array
                        (
                            [0] => user alias
                        )

                    [submit] => Array
                        (
                            [0] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select 
                            [1] => Please correct score error
                            [2] => Please correct score error
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
    Select  Questions for each cultural theme

    
        
            
                
                    request->data['CoreThemesOrganisationsProduct']['name']; ?>
                
                
                    Form->checkbox('CoreThemesOrganisationsProduct.is_critical', array('checked' => $this->request->data['CoreThemesOrganisationsProduct']['is_critical'], 'id' => $this->request->data['CoreThemesOrganisationsProduct']['id'],));
                    ?> Critical theme 

                
                    request->data['CrptCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CrptCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));


                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.core_themes_organisations_product_id ', array('value' => $this->request->data['CoreThemesOrganisationsProduct']['id']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CrptCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CrptCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    


                            [1] => 
        
             Cultural Fit Assessment
        
        
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
        
    
                            [2] => 
             Cultural Fit Assessment
        
                            [3] => 
            Html->link($this->Html->tag('i', 'Add more themes', array('class' => 'addSmallIcon')), '#', array('title' => 'Add Cultural Assessment', 'class' => 'btn btnThin',));
            ?>
        
                            [4] => 
                            [5] => 
        
            
                
                    request->data['CoreThemesOrganisationsProduct']['name']; ?>
                
                
                    Form->checkbox('CoreThemesOrganisationsProduct.is_critical', array('checked' => $this->request->data['CoreThemesOrganisationsProduct']['is_critical'], 'id' => $this->request->data['CoreThemesOrganisationsProduct']['id'],));
                    ?> Critical theme 

                
                    request->data['CrptCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CrptCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));


                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.core_themes_organisations_product_id ', array('value' => $this->request->data['CoreThemesOrganisationsProduct']['id']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CrptCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CrptCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        

    
                            [6] => 
            
                
                    request->data['CoreThemesOrganisationsProduct']['name']; ?>
                
                
                    Form->checkbox('CoreThemesOrganisationsProduct.is_critical', array('checked' => $this->request->data['CoreThemesOrganisationsProduct']['is_critical'], 'id' => $this->request->data['CoreThemesOrganisationsProduct']['id'],));
                    ?> Critical theme 

                
                    request->data['CrptCtQuestion']);?> Questions selected
                
            
            
                 $question): ?>
                        
                            

                                Form->checkbox("CrptCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));


                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.core_themes_organisations_product_id ', array('value' => $this->request->data['CoreThemesOrganisationsProduct']['id']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CrptCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CrptCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
        
                            [7] => 
                
                    request->data['CoreThemesOrganisationsProduct']['name']; ?>
                
                
                    Form->checkbox('CoreThemesOrganisationsProduct.is_critical', array('checked' => $this->request->data['CoreThemesOrganisationsProduct']['is_critical'], 'id' => $this->request->data['CoreThemesOrganisationsProduct']['id'],));
                    ?> Critical theme 

                
                    request->data['CrptCtQuestion']);?> Questions selected
                
            
                            [8] => 
                    request->data['CoreThemesOrganisationsProduct']['name']; ?>
                
                            [9] => 
                    request->data['CrptCtQuestion']);?> Questions selected
                
                            [10] => 
                 $question): ?>
                        
                            

                                Form->checkbox("CrptCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));


                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.core_themes_organisations_product_id ', array('value' => $this->request->data['CoreThemesOrganisationsProduct']['id']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            
                                
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CrptCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CrptCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                        
                        
                            [11] => 

                                Form->checkbox("CrptCtQuestion." . $key . ".crptQuestionId", array('checked' => $questionChecked, 'value' => $question['crptQuestionId'], 'class' => 'crptQuestionCheckbox pull-left', 'id' => 'crptQuestionCheckbox' . $key));


                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.title', array('value' => $question['title']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.core_themes_organisations_product_id ', array('value' => $this->request->data['CoreThemesOrganisationsProduct']['id']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.primaryId', array('value' => $question['primaryId']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.selected', array('value' => $question['selected']));
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.crpt_question_id', array('value' => $question['crptQuestionId']));




                                ?>
                                
                            
                            [12] => 
                                
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                                Form->textarea("CrptCtQuestion." . $key . ".user_alias", array('value' => $userAlias, 'label' => false, 'div' => false, 'placeholder' => 'user alias'));
                                ?>

                                Form->hidden('CrptCtQuestion.' . $key . '.assessment_image_id', array('id' => 'backgroundImage_' . $key, 'class' => 'backgroundImage', 'value' => !empty($question['assessment_image_id']) ? $question['assessment_image_id'] : $assessmentImageId));
                                if (count($cfaImages) >= 1) {
                                    echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage2 fancybox_link'));
                                }
                                ?>
                            
                            [13] => 

    
    Form->button('Set Score', array('class' => 'btnBlack noSpace btn pull-right', 'id' => 'showScale',));



    echo $this->Form->submit('Done With Editing', array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', 'id' => 'completeEditing', 'style' => 'display:none;'));



    ?>
    

                            [14] => 
    Html->image('ajax-loader_product.gif');?>

                            [15] => 
    
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [16] => 
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [17] => 
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => request->data['CrptCtQuestion']);?>
                            [1] => Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                            [2] => Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                            
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->checkbox('CoreThemesOrganisationsProduct.is_critical', array('checked' => $this->request->data['CoreThemesOrganisationsProduct']['is_critical'], 'id' => $this->request->data['CoreThemesOrganisationsProduct']['id'],));
                    ?> Critical theme 
                            [1] => 
                            [2] => 
                                    Form->checkbox("CrptCtQuestion." . $key . ".is_reverse", array('checked' => $reverseChecked, 'id' => 'reverse' . $key, 'div' => false));
                                    ?>
                                    Reverse the Scale 
                            [3] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>

                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [edit_theme.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Cultural Fit Assessment
                            [1] => Delete Cultural Theme
                            [2] => Delete Cultural Theme
                            [3] => Edit Cultural theme
                            [4] => Edit Cultural Fit Assessment
                            [5] => Done With Editing
                        )

                    [submit] => Array
                        (
                            [0] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => There is only one cultural theme,You not able to delete
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Cultural Fit Assessment
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
        
    

    
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CoreThemesOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if (count($culturalAssessments) > 1) {
                            echo $this->Form->PostLink('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'delete', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Cultural Theme',

                            )//                            ,
                            //                            __(' There is only one core the,You not able to delete ')
                            );

                        }

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                
    
        
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'organisations', 'controller' => 'product_behavior_parameters', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                
            
        

    

                            [1] => 
        
             Cultural Fit Assessment
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
        
    
                            [2] => 
             Cultural Fit Assessment
        
                            [3] => 
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add Cultural Fit Assessment', 'escape' => false));
            ?>
            
        
                            [4] => 
                            [5] => 
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CoreThemesOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if (count($culturalAssessments) > 1) {
                            echo $this->Form->PostLink('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'delete', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Cultural Theme',

                            )//                            ,
                            //                            __(' There is only one core the,You not able to delete ')
                            );

                        }

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                
                            [6] => 
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CoreThemesOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if (count($culturalAssessments) > 1) {
                            echo $this->Form->PostLink('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'delete', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Cultural Theme',

                            )//                            ,
                            //                            __(' There is only one core the,You not able to delete ')
                            );

                        }

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            

                    

                        
                                        
                                            
                                        
                                            
                                    

                                    
                
                            [7] => 

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $culturalAssessment['CoreThemesOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                        );
                        /*check that if there is only one core theme is present then you can not able to delete*/
                        if (count($culturalAssessments) > 1) {
                            echo $this->Form->PostLink('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'delete', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Cultural Theme'), __('Are you sure you want to delete Cultural Theme?'));
                        } else {
                            echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Cultural Theme',

                            )//                            ,
                            //                            __(' There is only one core the,You not able to delete ')
                            );

                        }

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit', $culturalAssessment['CoreThemesOrganisationsProduct']['id']), array('class' => 'editIcon', 'title' => 'Edit Cultural theme'));

                        ?>
                        Critical theme
                            
                            [8] => 

                        
                                        
                                            
                                        
                                            
                                    

                                    
                            [9] => 
                                            
                            [10] => 
        
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'organisations', 'controller' => 'product_behavior_parameters', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                
            
        

    
                            [11] => 
            
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'organisations', 'controller' => 'product_behavior_parameters', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
            
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                
            
        
                            [12] => 
                Cultural Fit Assessment Parameters
                Html->link('', array('plugin' => 'organisations', 'controller' => 'product_behavior_parameters', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit Cultural Fit Assessment'));
                ?>

            
                            [13] => 
                        
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_questions'];
                            }
                            ?>
                        
                
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_responses'];
                    }
                    ?>
                
                
                    Responses :
                

                
                    
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                
            
                            [14] => 
                    
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                
                            [15] => 
                        User Aliases

                        
                         if (!empty($parameters['ProductBehaviorResponse'])) {
                            foreach ($parameters['ProductBehaviorResponse'] as $key => $parameter) {

                                ?>
                                

                                    
                                
                            [16] => 
                            [17] => 
    
    Form->submit('Done With Editing', array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', "id" => "completeEditing"));
    ?>

                        )

                    [span] => Array
                        (
                            [0] => Cultural Fit Assessment Parameters
                            [1] => 
                            Selected Number of Questions :
                            Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_questions'];
                            }
                            ?>
                        
                            [2] => Selected Number of Questions :
                            [3] => 
                    Selected Number of Responses :
                    Html->tag('span', '', array('class' => 'numbers')) . $parameters['ProductBehaviorParameter']['no_of_responses'];
                    }
                    ?>
                
                            [4] => Selected Number of Responses :
                            [5] => 
                    Responses :
                
                            [6] => Responses :
                        )

                    [labels] => Array
                        (
                            [0] => Critical theme
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add new theme
                            [1] => Edit Assessment
                        )

                    [alert_messages] => Array
                        (
                            [0] => You can not edit this CFA as there are active users, please try again after sometime
                        )

                    [h1] => Array
                        (
                            [0] => Preview Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Preview Cultural Fit Assessment

    
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
    
    Passing Score for this Assessment:
        
            
    

    
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                

                            [1] => 
        Form->button('Copy link to clipboard', array('class'=>'btn LinkBtn', 'link'=>$publicLink));;



        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add new Theme', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'add'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Add new theme', 'escape' => false));

        echo $this->Html->link(__($this->Html->tag('i', '', array('class' => '')) . 'Edit Assessment', true), array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'edit_theme'), array('class' => 'btn btnThin checkCandidateStatus', 'title' => 'Edit Assessment', 'escape' => false));


        ?>

    
                            [2] => 
                            [3] => 
        
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                

                
                            [4] => 
                    
                
                    
                          Critical theme 
                            
                    
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                
                            [5] => 
                
                    
                          Critical theme 
                            
                            [6] => 
                        
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                    
                            [7] => 
                            
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                        
                            [8] => 
                                Passing Score for this Cultural Theme:
                                    
                                       
                                
                                
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                                        
                            [9] => 
                                            
                                                    
                                                        
                                                    
                                                        
                                                    
                                                    The Scores have been reversed for this question
                                                    
                                                    

                                            
                            [10] => 
                                                        
                            [11] => 
                            [12] => The Scores have been reversed for this question
                                                    
                        )

                    [span] => Array
                        (
                            [0] => 
            
                            [1] => 
                    
                            [2] => 
                                       
                        )

                    [labels] => Array
                        (
                            [0] =>   Critical theme 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [preview.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add development area
                            [1] => Edit development area
                            [2] => Delete development area
                            [3] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add Development Areas', true), array('plugin' => 'das', 'controller' => 'daOrganisationsProducts', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add development area', 'escape' => false));
            ?>
        
        
    

                            [1] => 
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add Development Areas', true), array('plugin' => 'das', 'controller' => 'daOrganisationsProducts', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add development area', 'escape' => false));
            ?>
        
        
    
                            [2] => 
             
        
                            [3] => 
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Add Development Areas', true), array('plugin' => 'das', 'controller' => 'daOrganisationsProducts', 'action' => 'add'), array('class' => 'btn btnThin', 'title' => 'Add development area', 'escape' => false));
            ?>
        
                            [4] => 
                            [5] => 

    
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $category['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit development area'));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'delete', $category['DaOrganisationsProduct']['id']), array('class' => 'deleteIcon', 'title' => 'Delete development area'), __('Are you sure you want to delete development area?'));
                        ?>
                    
                    

                        Html->tag('span', 'Selected Core Themes', array('class' => 'selectHeadings clearfix'));
                        ?>

                         $coreTheme) {
                                    ?>
                                    
                                        Html->tag('span', ++$key . '. ' . $coreTheme['name']);
                                        //echo ++$key . '. ' . $competency['name'];
                                        ?>
                                    
                                    
                
                
    Html->link('Done', array('plugin' => 'das', 'controller' => 'da_organisations_products', 'action' => 'index'), array('class' => 'btn btnBlack marginBottom20', 'title' => 'Done'));

    ?>

                            [6] => 
        
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $category['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit development area'));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'delete', $category['DaOrganisationsProduct']['id']), array('class' => 'deleteIcon', 'title' => 'Delete development area'), __('Are you sure you want to delete development area?'));
                        ?>
                    
                    

                        Html->tag('span', 'Selected Core Themes', array('class' => 'selectHeadings clearfix'));
                        ?>

                         $coreTheme) {
                                    ?>
                                    
                                        Html->tag('span', ++$key . '. ' . $coreTheme['name']);
                                        //echo ++$key . '. ' . $competency['name'];
                                        ?>
                                    
                                    
                
                
                            [7] => 
                    

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $category['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit development area'));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'delete', $category['DaOrganisationsProduct']['id']), array('class' => 'deleteIcon', 'title' => 'Delete development area'), __('Are you sure you want to delete development area?'));
                        ?>
                    
                    

                        Html->tag('span', 'Selected Core Themes', array('class' => 'selectHeadings clearfix'));
                        ?>

                         $coreTheme) {
                                    ?>
                                    
                                        Html->tag('span', ++$key . '. ' . $coreTheme['name']);
                                        //echo ++$key . '. ' . $competency['name'];
                                        ?>
                                    
                                    
                
                            [8] => 

                        Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $category['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'edit'), array('class' => 'editIcon', 'title' => 'Edit development area'));

                        echo $this->Html->link('', array('plugin' => 'das', 'controller' => 'coreThemesOrganisationsProducts', 'action' => 'delete', $category['DaOrganisationsProduct']['id']), array('class' => 'deleteIcon', 'title' => 'Delete development area'), __('Are you sure you want to delete development area?'));
                        ?>
                    
                            [9] => 

                        Html->tag('span', 'Selected Core Themes', array('class' => 'selectHeadings clearfix'));
                        ?>

                         $coreTheme) {
                                    ?>
                                    
                                        Html->tag('span', ++$key . '. ' . $coreTheme['name']);
                                        //echo ++$key . '. ' . $competency['name'];
                                        ?>
                                    
                                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [select.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    

        Form->create('CoreThemesOrganisationsProduct', array('url' => array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'select',), 'class' => 'competencySave'));
        ?>
         $coreTheme): ?>
                
                    
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                    
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                
                
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

        Form->create('CoreThemesOrganisationsProduct', array('url' => array('plugin' => 'das', 'controller' => 'core_themes', 'action' => 'select',), 'class' => 'competencySave'));
        ?>
         $coreTheme): ?>
                
                    
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                    
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                
                
                
                
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
            
        
            Html->image('ajax-loader_product.gif');?>
        
        Form->end();
        ?>
    
                            [5] => 
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                    
                            [6] => 
                        Form->input('CoreThemesOrganisationsProduct.' . $key . '.alias', array('label' => false, 'id' => 'aliasName_' . $coreTheme['id'], 'class' => 'aliasTextBox_' . $coreTheme['id'] . ' disableTextBox', 'placeholder' => 'Alias Name',));
                        ?>
                        
                        
                    
                            [7] => 
                            [8] => 
                            [9] => 
                    
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                
                            [10] => 
                        Form->submit('Next', array('class' => 'btnBlack noSpace btn pull-right saveButton', 'title' => 'Done', 'id' => 'saveCoreThemes'));

                        echo $this->Form->end();
                        ?>
                    
                            [11] => 
            Html->image('ajax-loader_product.gif');?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.core_theme_id', array('value' => $coreTheme['id'], 'class' => 'CoreThemeCheckbox', 'data-id' => $coreTheme['id'], 'id' => 'CoreThemeCheckbox_' . $coreTheme['id'], 'type' => 'checkbox', 'hiddenField' => false));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.product_id', array('value' => $productId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.organisation_id', array('value' => $organisationId));
                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.name', array('value' => $coreTheme['name']));
                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [set_assessment_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
    
                            [1] => 
        

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Cultural Fit Assessment');
            ?>
        
                            [3] => 
                            [4] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [5] => 
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
                            [6] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    You can set the overall pass score between the notch (minimum possible score) and the maximum possible score.

                            [7] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [8] => Select pass score for this Assessment
                            [9] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [10] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [11] => 
                            [12] => 
                            [13] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [14] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [15] => 
                            
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [16] => 
                                

                                This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [17] => This is the sum of the pass scores of all the critical themes. The slider cannot be moved beyond this notch to the left side.
                                
                            [18] => 

    
        Form->hidden('id', array('value' => $cftSliderData['crpt_assessment_score_id']));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [19] => 
        Form->hidden('id', array('value' => $cftSliderData['crpt_assessment_score_id']));
        echo $this->Form->hidden('min_pass_score', array('value' => $cftSliderData['min_pass_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => $cftSliderData['max_pass_score'], 'id' => 'maxPassScore'));
        echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'completedAssessment'));
        ?>
    
                            [20] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => SelectCultural Themes
                            [4] => select Questions& Set Passing Score
                            [5] => 
                            [6] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CoreThemes] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            Html->link($coreTheme['Category']['name'], array('controller' => 'categories', 'action' => 'view', $coreTheme['Category']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Core Theme'), array('action' => 'edit', $coreTheme['CoreTheme']['id'])); ?> 
        Form->postLink(__('Delete Core Theme'), array('action' => 'delete', $coreTheme['CoreTheme']['id']), null, __('Are you sure you want to delete # %s?', $coreTheme['CoreTheme']['id'])); ?> 
        Html->link(__('List Core Themes'), array('action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('action' => 'add')); ?> 
        Html->link(__('List Categories'), array('controller' => 'categories', 'action' => 'index')); ?> 
        Html->link(__('New Category'), array('controller' => 'categories', 'action' => 'add')); ?> 
        Html->link(__('List Crpt Ct Questions'), array('controller' => 'crpt_ct_questions', 'action' => 'index')); ?> 
        Html->link(__('New Crpt Ct Question'), array('controller' => 'crpt_ct_questions', 'action' => 'add')); ?> 
        Html->link(__('List Crpt Questions'), array('controller' => 'crpt_questions', 'action' => 'index')); ?> 
        Html->link(__('New Crpt Question'), array('controller' => 'crpt_questions', 'action' => 'add')); ?> 
        Html->link(__('List Core Themes Organisations Products'), array('controller' => 'core_themes_organisations_products', 'action' => 'index')); ?> 
        Html->link(__('New Core Themes Organisations Product'), array('controller' => 'core_themes_organisations_products', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
        
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'crpt_ct_questions', 'action' => 'view', $crptCtQuestion['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'crpt_ct_questions', 'action' => 'edit', $crptCtQuestion['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'crpt_ct_questions', 'action' => 'delete', $crptCtQuestion['id']), null, __('Are you sure you want to delete # %s?', $crptCtQuestion['id'])); ?>
                
            
        Html->link(__('New Crpt Ct Question'), array('controller' => 'crpt_ct_questions', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Crpt Ct Question'), array('controller' => 'crpt_ct_questions', 'action' => 'add')); ?> 
        
                            [4] => 
    
    
            
            
            
            
            
        
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'crpt_questions', 'action' => 'view', $crptQuestion['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'crpt_questions', 'action' => 'edit', $crptQuestion['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'crpt_questions', 'action' => 'delete', $crptQuestion['id']), null, __('Are you sure you want to delete # %s?', $crptQuestion['id'])); ?>
                
            
        Html->link(__('New Crpt Question'), array('controller' => 'crpt_questions', 'action' => 'add')); ?> 
        

                            [5] => 
        Html->link(__('New Crpt Question'), array('controller' => 'crpt_questions', 'action' => 'add')); ?> 
        
                            [6] => 
    
    
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'core_themes_organisations_products', 'action' => 'view', $coreThemesOrganisationsProduct['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'core_themes_organisations_products', 'action' => 'edit', $coreThemesOrganisationsProduct['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'core_themes_organisations_products', 'action' => 'delete', $coreThemesOrganisationsProduct['id']), null, __('Are you sure you want to delete # %s?', $coreThemesOrganisationsProduct['id'])); ?>
                
            
        Html->link(__('New Core Themes Organisations Product'), array('controller' => 'core_themes_organisations_products', 'action' => 'add')); ?> 
        

                            [7] => 
        Html->link(__('New Core Themes Organisations Product'), array('controller' => 'core_themes_organisations_products', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => Save & Exit
                            [2] => Done
                            [3] => Clicking here will reset the order of score that you have set before
                            [4] => Click here to reverse the score
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                            [1] => Done
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select Questions to all the themes
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment
                        )

                    [h2] => Array
                        (
                            [0] => Select Question for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment

    
    
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
    
    Select Question for each cultural theme

    

         $coreTheme) : ?>
            
                
                        
                            
                            ( 0 Questions Selected )
                         
                    Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false));

                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.pass_score', array('value' => '10'));
                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']))
                    ?>
                    This is a Critical theme 
                
                
                    
                        Select pass score for this core theme

                        
                            4
                            
                            24
                        
                        
                            $(function () {
                                $('#slider_<?php echo $key;?>').slider({
                                    range:"min",
                                    value:17,
                                    min:4,
                                    max:24,
                                    slide:function (event, ui) {
                                        $(this).find(".maxValue").text(ui.value).css({
                                            marginLeft:'0'
                                        });
                                        var xyx = this;
                                        setTimeout(function () {
                                            offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                            $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                            console.log(offset1);
                                        }, 10);
//                                        console.log($(this));
                                    }
                                });
                                $('#slider_<?php echo $key;?>').find(".maxValue").text($('#slider_<?php echo $key;?>').slider("value"));

                                var minVal = $('#slider_<?php echo $key;?>').slider("option", "min");
                                var maxVal = ($('#slider_<?php echo $key;?>').slider("option", "max")) - minVal;
                                var firstVal = ($('#slider_<?php echo $key;?>').slider("value")) - minVal;
                                var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                                $('#slider_<?php echo $key;?>').find(".maxValue").css('top', '-25px').css({
                                    'left':offset1,
                                    marginLeft:'-5px'
                                });
                            });
                        
                    

                         $CrptQuestion): ?>

                        
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                        
                
            

            

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 

         $coreTheme) : ?>
            
                
                        
                            
                            ( 0 Questions Selected )
                         
                    Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false));

                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.pass_score', array('value' => '10'));
                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']))
                    ?>
                    This is a Critical theme 
                
                
                    
                        Select pass score for this core theme

                        
                            4
                            
                            24
                        
                        
                            $(function () {
                                $('#slider_<?php echo $key;?>').slider({
                                    range:"min",
                                    value:17,
                                    min:4,
                                    max:24,
                                    slide:function (event, ui) {
                                        $(this).find(".maxValue").text(ui.value).css({
                                            marginLeft:'0'
                                        });
                                        var xyx = this;
                                        setTimeout(function () {
                                            offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                            $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                            console.log(offset1);
                                        }, 10);
//                                        console.log($(this));
                                    }
                                });
                                $('#slider_<?php echo $key;?>').find(".maxValue").text($('#slider_<?php echo $key;?>').slider("value"));

                                var minVal = $('#slider_<?php echo $key;?>').slider("option", "min");
                                var maxVal = ($('#slider_<?php echo $key;?>').slider("option", "max")) - minVal;
                                var firstVal = ($('#slider_<?php echo $key;?>').slider("value")) - minVal;
                                var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                                $('#slider_<?php echo $key;?>').find(".maxValue").css('top', '-25px').css({
                                    'left':offset1,
                                    marginLeft:'-5px'
                                });
                            });
                        
                    

                         $CrptQuestion): ?>

                        
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                        
                
            

            
                            [5] => 
                
                        
                            
                            ( 0 Questions Selected )
                         
                    Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false));

                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.pass_score', array('value' => '10'));
                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']))
                    ?>
                    This is a Critical theme 
                
                
                    
                        Select pass score for this core theme

                        
                            4
                            
                            24
                        
                        
                            $(function () {
                                $('#slider_<?php echo $key;?>').slider({
                                    range:"min",
                                    value:17,
                                    min:4,
                                    max:24,
                                    slide:function (event, ui) {
                                        $(this).find(".maxValue").text(ui.value).css({
                                            marginLeft:'0'
                                        });
                                        var xyx = this;
                                        setTimeout(function () {
                                            offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                            $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                            console.log(offset1);
                                        }, 10);
//                                        console.log($(this));
                                    }
                                });
                                $('#slider_<?php echo $key;?>').find(".maxValue").text($('#slider_<?php echo $key;?>').slider("value"));

                                var minVal = $('#slider_<?php echo $key;?>').slider("option", "min");
                                var maxVal = ($('#slider_<?php echo $key;?>').slider("option", "max")) - minVal;
                                var firstVal = ($('#slider_<?php echo $key;?>').slider("value")) - minVal;
                                var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                                $('#slider_<?php echo $key;?>').find(".maxValue").css('top', '-25px').css({
                                    'left':offset1,
                                    marginLeft:'-5px'
                                });
                            });
                        
                    

                         $CrptQuestion): ?>

                        
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                        
                
            
                            [6] => 
                        
                            
                            ( 0 Questions Selected )
                         
                    Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false));

                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.pass_score', array('value' => '10'));
                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']))
                    ?>
                    This is a Critical theme 
                
                            [7] => 
                    
                        Select pass score for this core theme

                        
                            4
                            
                            24
                        
                        
                            $(function () {
                                $('#slider_<?php echo $key;?>').slider({
                                    range:"min",
                                    value:17,
                                    min:4,
                                    max:24,
                                    slide:function (event, ui) {
                                        $(this).find(".maxValue").text(ui.value).css({
                                            marginLeft:'0'
                                        });
                                        var xyx = this;
                                        setTimeout(function () {
                                            offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                            $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                            console.log(offset1);
                                        }, 10);
//                                        console.log($(this));
                                    }
                                });
                                $('#slider_<?php echo $key;?>').find(".maxValue").text($('#slider_<?php echo $key;?>').slider("value"));

                                var minVal = $('#slider_<?php echo $key;?>').slider("option", "min");
                                var maxVal = ($('#slider_<?php echo $key;?>').slider("option", "max")) - minVal;
                                var firstVal = ($('#slider_<?php echo $key;?>').slider("value")) - minVal;
                                var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                                $('#slider_<?php echo $key;?>').find(".maxValue").css('top', '-25px').css({
                                    'left':offset1,
                                    marginLeft:'-5px'
                                });
                            });
                        
                    

                         $CrptQuestion): ?>

                        
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                        
                
                            [8] => 
                        Select pass score for this core theme

                        
                            4
                            
                            24
                        
                        
                            $(function () {
                                $('#slider_<?php echo $key;?>').slider({
                                    range:"min",
                                    value:17,
                                    min:4,
                                    max:24,
                                    slide:function (event, ui) {
                                        $(this).find(".maxValue").text(ui.value).css({
                                            marginLeft:'0'
                                        });
                                        var xyx = this;
                                        setTimeout(function () {
                                            offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                            $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                            console.log(offset1);
                                        }, 10);
//                                        console.log($(this));
                                    }
                                });
                                $('#slider_<?php echo $key;?>').find(".maxValue").text($('#slider_<?php echo $key;?>').slider("value"));

                                var minVal = $('#slider_<?php echo $key;?>').slider("option", "min");
                                var maxVal = ($('#slider_<?php echo $key;?>').slider("option", "max")) - minVal;
                                var firstVal = ($('#slider_<?php echo $key;?>').slider("value")) - minVal;
                                var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                                $('#slider_<?php echo $key;?>').find(".maxValue").css('top', '-25px').css({
                                    'left':offset1,
                                    marginLeft:'-5px'
                                });
                            });
                        
                            [9] => Select pass score for this core theme
                            [10] => 
                            4
                            
                            24
                        
                            [11] => 4
                            [12] => 
                            [13] => 24
                            [14] => 

                         $CrptQuestion): ?>

                        
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                        
                            [15] => 
                            
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            

                            
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                        
                            [16] => 
                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false));

                                //if there is no alias then take it from here
                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));
                                ?>

                                
                                    
                            
                            [17] => 
                                Alias for this question
                                Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name'));
                                ?>
                                
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            
                            [18] => 
                                    Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none'));

                                    echo $this->Html->link(_('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                    ?>

                                
                            [19] => 
    
        Select pass score for this Assessment
        
            
                4
                
                    
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                
                
                24
            
            
                $(function () {
                    $("#assessmentPassScore").slider({
                        range:"min",
                        value:17,
                        min:4,
                        max:24,
                        slide:function (event, ui) {
                            $(this).find(".maxValue").text(ui.value).css({
                                marginLeft:'0'
                            });
                            var xyx = this;
                            setTimeout(function () {
                                offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                console.log(offset1);
                            }, 10);
//                            console.log($(this));
                        }
                    });
                    $("#assessmentPassScore").find(".maxValue").text($("#assessmentPassScore").slider("value"));

                    var minVal = $("#assessmentPassScore").slider("option", "min");
                    var maxVal = ($("#assessmentPassScore").slider("option", "max")) - minVal;
                    var firstVal = ($("#assessmentPassScore").slider("value")) - minVal;
                    var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                    $("#assessmentPassScore").find(".maxValue").css('top', '-25px').css({
                        'left':offset1,
                        marginLeft:'-5px'
                    });
                });
            
    

                            [20] => 
        Select pass score for this Assessment
        
            
                4
                
                    
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                
                
                24
            
            
                $(function () {
                    $("#assessmentPassScore").slider({
                        range:"min",
                        value:17,
                        min:4,
                        max:24,
                        slide:function (event, ui) {
                            $(this).find(".maxValue").text(ui.value).css({
                                marginLeft:'0'
                            });
                            var xyx = this;
                            setTimeout(function () {
                                offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                console.log(offset1);
                            }, 10);
//                            console.log($(this));
                        }
                    });
                    $("#assessmentPassScore").find(".maxValue").text($("#assessmentPassScore").slider("value"));

                    var minVal = $("#assessmentPassScore").slider("option", "min");
                    var maxVal = ($("#assessmentPassScore").slider("option", "max")) - minVal;
                    var firstVal = ($("#assessmentPassScore").slider("value")) - minVal;
                    var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                    $("#assessmentPassScore").find(".maxValue").css('top', '-25px').css({
                        'left':offset1,
                        marginLeft:'-5px'
                    });
                });
            
    
                            [21] => Select pass score for this Assessment
                            [22] => 
            
                4
                
                    
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                
                
                24
            
            
                $(function () {
                    $("#assessmentPassScore").slider({
                        range:"min",
                        value:17,
                        min:4,
                        max:24,
                        slide:function (event, ui) {
                            $(this).find(".maxValue").text(ui.value).css({
                                marginLeft:'0'
                            });
                            var xyx = this;
                            setTimeout(function () {
                                offset2 = parseInt(($(xyx).find(".ui-slider-handle").last().css("left"))) - 6;
                                $(xyx).find(".maxValue").css('top', '-25px').css('left', offset2);
//                                console.log(offset1);
                            }, 10);
//                            console.log($(this));
                        }
                    });
                    $("#assessmentPassScore").find(".maxValue").text($("#assessmentPassScore").slider("value"));

                    var minVal = $("#assessmentPassScore").slider("option", "min");
                    var maxVal = ($("#assessmentPassScore").slider("option", "max")) - minVal;
                    var firstVal = ($("#assessmentPassScore").slider("value")) - minVal;
                    var offset1 = parseInt((firstVal / maxVal) * 100) + "%";
                    $("#assessmentPassScore").find(".maxValue").css('top', '-25px').css({
                        'left':offset1,
                        marginLeft:'-5px'
                    });
                });
            
                            [23] => 
                4
                
                    
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                
                
                24
            
                            [24] => 4
                            [25] => 
                    
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                
                            [26] => 
                        
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                        13
                    
                            [27] => 
                            

                            Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            

                        
                            [28] => Minimum passing score required is a sum total of the scores of all the critical themes that you have selected.
                            
                            [29] => 
                            [30] => 24
                            [31] => 
    
        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false));
        echo $this->Form->submit('Done', array('class' => 'btn btnBlack saveButton noSpaceRight whichButtonClicked', 'title' => 'Done', 'data-name' => '2', 'div' => false));
        ?>
    

                            [32] => 
        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false));
        echo $this->Form->submit('Done', array('class' => 'btn btnBlack saveButton noSpaceRight whichButtonClicked', 'title' => 'Done', 'data-name' => '2', 'div' => false));
        ?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => select Questions& Set Passing Score
                            [2] => 
                            
                            ( 0 Questions Selected )
                        
                            [3] => 
                        )

                    [labels] => Array
                        (
                            [0] => 
                    Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false));

                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.pass_score', array('value' => '10'));
                    echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']))
                    ?>
                    This is a Critical theme 
                            [1] => 
                                    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [edit.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('CrptQuestion'); ?>
    
        Form->input('id');
        echo $this->Form->input('title');
        echo $this->Form->input('core_theme_id');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Form->postLink(__('Delete'), array('action' => 'delete', $this->Form->value('CrptQuestion.id')), null, __('Are you sure you want to delete # %s?', $this->Form->value('CrptQuestion.id'))); ?>
        Html->link(__('List Crpt Questions'), array('action' => 'index')); ?>
        Html->link(__('List Core Themes'), array('controller' => 'core_themes', 'action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('title'); ?>
            Paginator->sort('core_theme_id'); ?>
            Paginator->sort('modified'); ?>
            Paginator->sort('created'); ?>
            
         
                 
                
                    Html->link($crptQuestion['CoreTheme']['name'], array('controller' => 'core_themes', 'action' => 'view', $crptQuestion['CoreTheme']['id'])); ?>
                
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $crptQuestion['CrptQuestion']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $crptQuestion['CrptQuestion']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $crptQuestion['CrptQuestion']['id']), null, __('Are you sure you want to delete # %s?', $crptQuestion['CrptQuestion']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Crpt Question'), array('action' => 'add')); ?>
        Html->link(__('List Core Themes'), array('controller' => 'core_themes', 'action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [select.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [title] => Array
                        (
                            [0] => Click here to reverse the score
                            [1] => isLastCoreTheme
                            [2] => Save & Exit
                            [3] => Clicking here will reset the order of score that you have set before
                            [4] => Click here to reverse the score
                        )

                    [submit] => Array
                        (
                            [0] => Set Score
                            [1] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Select 
                            [1] => Please Correct the scoring error
                        )

                    [h1] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                            [1] => Setup Cultural Fit Assessment
                        )

                    [h2] => Array
                        (
                            [0] => Select  Questions for each cultural theme
                            [1] => Select  Questions for each cultural theme
                        )

                    [div] => Array
                        (
                            [0] => 

    Select  Questions for each cultural theme
    Setup Cultural Fit Assessment
    

    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Select  Questions for each cultural theme
    
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
    
    Select  Questions for each cultural theme
    

         $coreTheme) :
                //        pr($coreTheme);
                ?>
                
                    
                        
                            
                            ( 0 Questions Selected )
                        
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['core_themes_organisations_product_id'], 'checked' => $coreTheme['is_critical']));


                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']), array('class' => 'ctOrgProductId'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                            ?>
                            Critical theme 
                    
                    
                        
                        

                             $CrptQuestion):
                                ?>

                                
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                                
                    
                

                

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 
        1 SelectCultural Themes
            2 select Questions& Set Passing Score
        
                            [5] => 
                            [6] => 

         $coreTheme) :
                //        pr($coreTheme);
                ?>
                
                    
                        
                            
                            ( 0 Questions Selected )
                        
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['core_themes_organisations_product_id'], 'checked' => $coreTheme['is_critical']));


                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']), array('class' => 'ctOrgProductId'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                            ?>
                            Critical theme 
                    
                    
                        
                        

                             $CrptQuestion):
                                ?>

                                
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                                
                    
                

                
                            [7] => 
                    
                        
                            
                            ( 0 Questions Selected )
                        
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['core_themes_organisations_product_id'], 'checked' => $coreTheme['is_critical']));


                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']), array('class' => 'ctOrgProductId'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                            ?>
                            Critical theme 
                    
                    
                        
                        

                             $CrptQuestion):
                                ?>

                                
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                                
                    
                
                            [8] => 
                        
                            
                            ( 0 Questions Selected )
                        
                        
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['core_themes_organisations_product_id'], 'checked' => $coreTheme['is_critical']));


                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']), array('class' => 'ctOrgProductId'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                            ?>
                            Critical theme 
                    
                            [9] => 
                            
                            ( 0 Questions Selected )
                        
                            [10] => 
                        
                        

                             $CrptQuestion):
                                ?>

                                
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                                
                    
                            [11] => 

                             $CrptQuestion):
                                ?>

                                
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                                
                            [12] => 
                                    
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    

                                    
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                                
                            [13] => 
                                        Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.id', array('value' => $CrptQuestion['primaryId']));
                                        echo $this->Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.crpt_question_id', array('value' => $CrptQuestion['id'], 'class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' crptQuestionCheckbox pull-left', 'data-id' => $coreTheme['id'], 'id' => $CrptQuestion['id'], 'type' => 'checkbox', 'hiddenField' => false, 'div' => false, 'checked' => $CrptQuestion['selected']));

                                        //if there is no alias then take it from here
                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.name', array('value' => $CrptQuestion['title']));

                                        echo $this->Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.core_themes_organisations_product_id', array('value' => $coreTheme['core_themes_organisations_product_id']));


                                        ?>

                                        
                                            
                                    
                            [14] => 
                                        Alias for this question
                                        Form->textarea('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.user_alias', array('label' => false, 'id' => 'aliasName_' . $CrptQuestion['id'], 'class' => 'aliasTextBox_' . $CrptQuestion['id'] . ' hideTextBoxes', 'placeholder' => 'Alias Name', 'value' => $CrptQuestion['user_alias']));
                                        ?>
                                        
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                                    
                            [15] => 
                                            
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                                            Form->hidden('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.assessment_image_id', array('id' => 'backgroundImage_' . $key . '_' . $CrptQuestion['id'], 'class' => 'backgroundImage', 'value' => !empty($CrptQuestion['assessment_image_id']) ? $CrptQuestion['assessment_image_id'] : $assessmentImageId));

                                            if (count($cfaImages) >= 1) {
                                                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage3  fancybox_link'));
                                            }
                                            ?>
                                        
                            [16] => 
                                                Form->checkbox('CrptCtQuestion.' . $key . '.' . $CrptQuestionsKey . '.is_reverse', array('class' => 'crptQuestionCheckbox' . $coreTheme['id'] . ' .hide', 'label' => 'Is Reverse', 'type' => 'checkbox', 'style' => 'display:none', 'checked' => $CrptQuestion['is_reverse']));

                                                echo $this->Html->link(__('Reverse Scores'), 'javascript:void(0);', array('title' => 'Click here to reverse the score', 'class' => 'btn reverseScore', 'div' => false));

                                                ?>

                                            
                            [17] => 
    
        Form->submit('Set Score', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn', /*'id' => 'complete',*/ /*'style' => "display: none;"*/));


        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', /*'id' => 'complete',*/
            'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [18] => 
        Form->submit('Set Score', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack pull-right noSpaceRight btn', 'type' => 'button', 'div' => false, 'id' => 'doneBtn', /*'id' => 'complete',*/ /*'style' => "display: none;"*/));


        echo $this->Form->submit($coreThemeCountsData['isLastCoreTheme'] ? 'Save & Set Final Score' : 'Save & Continue', array( /*'class' => 'btn btnBlack saveButton whichButtonClicked noSpaceRight pull-right',*/
            'class' => 'btnBlack noSpaceRight btn pull-right whichButtonClicked', 'title' => $coreThemeCountsData['isLastCoreTheme'] ? 'Done With Editing' : 'Save & Continue', 'data-name' => '2', 'div' => false, 'id' => 'saveQuestions', /*'id' => 'complete',*/
            'style' => "display: none;"));

        echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));
        echo $this->Form->hidden('Save.is_last_core_theme', array('value' => $coreThemeCountsData['isLastCoreTheme'] ? 1 : 0, 'id' => 'which_button'));


        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large whichButtonClicked', 'title' => 'Save & Exit', 'data-name' => '1', 'div' => false, 'id' => 'saveExitBtn'));

        ?>
    
                            [19] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [20] => 
    
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    

                            [21] => 
        
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
    
                            [22] => 
            Crt->getCfaImages(); ?>
             $imageName): ?>
                
                    
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                
                Form->hidden('questionHiddenFieldId', array('id' => 'questionHiddenFieldId')); ?>
        
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                            [3] => SelectCultural Themes
                            [4] => select Questions& Set Passing Score
                            [5] => 
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                            [6] => 
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->checkbox('CoreThemesOrganisationsProduct.' . $key . '.is_critical', array('id' => $key, 'div' => false, 'class' => 'isCritical', 'data-id' => $coreTheme['core_themes_organisations_product_id'], 'checked' => $coreTheme['is_critical']));


                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.id', array('value' => $coreTheme['core_themes_organisations_product_id']), array('class' => 'ctOrgProductId'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.min_pass_score', array('value' => '', 'id' => 'minPassScore'));

                            echo $this->Form->hidden('CoreThemesOrganisationsProduct.' . $key . '.max_pass_score', array('value' => '', 'id' => 'maxPassScore'));


                            ?>
                            Critical theme 
                            [1] => 
                                            
                            [2] => 
                        
                            Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 60)); ?>
                        
                        
                                Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));

                            ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [select_image.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Crt->getCfaImages(); ?>
    request->query['imageName']) && !empty($this->request->query['imageName']) ? $this->request->query['imageName'] : 'image_1.jpg';?>
     $imageName): ?>
        
            Html->image('/img/questions/150x60/' . $imageName, array('width' => 150, 'height' => 60)); ?>
            Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'style' => 'margin:5px 0 0 0', 'checked' => $checked, 'value' => $imageName, 'hiddenField' => false));
            ?>
        
        
                            [1] => Html->image('/img/questions/150x60/' . $imageName, array('width' => 150, 'height' => 60)); ?>
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Das/View/CrptQuestions] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            
             
        
        
        
            Html->link($crptQuestion['CoreTheme']['name'], array('controller' => 'core_themes', 'action' => 'view', $crptQuestion['CoreTheme']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Crpt Question'), array('action' => 'edit', $crptQuestion['CrptQuestion']['id'])); ?> 
        Form->postLink(__('Delete Crpt Question'), array('action' => 'delete', $crptQuestion['CrptQuestion']['id']), null, __('Are you sure you want to delete # %s?', $crptQuestion['CrptQuestion']['id'])); ?> 
        Html->link(__('List Crpt Questions'), array('action' => 'index')); ?> 
        Html->link(__('New Crpt Question'), array('action' => 'add')); ?> 
        Html->link(__('List Core Themes'), array('controller' => 'core_themes', 'action' => 'index')); ?> 
        Html->link(__('New Core Theme'), array('controller' => 'core_themes', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/Assessments] => Array
        (
            [index.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="center">Please enter your basic information.</p>
                        )

                    [h2] => Array
                        (
                            [0] => Candidate Information
                        )

                    [div] => Array
                        (
                            [0] => 
                
                    
                
                    Webonise

                    Cultural Fit assessment
                
            
                            [1] => 
                    
                            [2] => 
                    Webonise

                    Cultural Fit assessment
                
                            [3] => Cultural Fit assessment
                            [4] => 
                
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
            
                            [5] => 
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
                            [6] => 
                        Candidate Information
                    
                            [7] => 
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                            [8] => 
                                Name

                                
                            
                            [9] => 
                            [10] => 
                                Email

                                
                                    
                            
                            [11] => 
                                    
                            [12] => 
                
                     Terms of use
                         Privacy Policy 
                        
                    
                © Chemistry 2012
            
                            [13] => 
                     Terms of use
                         Privacy Policy 
                        
                    
                            [14] => 
                        )

                    [labels] => Array
                        (
                            [0] => Name
                            [1] => Email
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/Assessments] => Array
        (
            [live_test.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="center">Please enter your basic information.</p>
                        )

                    [h2] => Array
                        (
                            [0] => Candidate Information
                        )

                    [div] => Array
                        (
                            [0] => 
                
                    
                
                    Webonise

                    Team Development Tool
                
            
                            [1] => 
                    
                            [2] => 
                    Webonise

                    Team Development Tool
                
                            [3] => Team Development Tool
                            [4] => 
                
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
            
                            [5] => 
                    
                        Candidate Information
                    
                    Please enter your basic information.

                    
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                
                            [6] => 
                        Candidate Information
                    
                            [7] => 
                        
                            
                                Name

                                
                            
                            
                                Email

                                
                                    
                            
                        
                    
                            [8] => 
                                Name

                                
                            
                            [9] => 
                            [10] => 
                                Email

                                
                                    
                            
                            [11] => 
                                    
                            [12] => 
                
                     Terms of use
                         Privacy Policy 
                        
                    
                © Chemistry 2012
            
                            [13] => 
                     Terms of use
                         Privacy Policy 
                        
                    
                            [14] => 
                        )

                    [labels] => Array
                        (
                            [0] => Name
                            [1] => Email
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/Elements] => Array
        (
            [job_roles_candidates_list.ctp] => Array
                (
                    [alert_messages] => Array
                        (
                            [0] => Unable to send email to anonymous candidate
                        )

                    [title] => Array
                        (
                            [0] => Click here to view report
                            [1] => Click here to send email
                        )

                    [div] => Array
                        (
                            [0] => 
    Paginator->options(array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'job_roles_candidates_list')));
    ?>
    element('pagination');?>

                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [add.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please Enter a Job Role Title
                            [1] => Job Role Title already exist
                            [2] => Please enter valid job role title
                            [3] => Please enter a hierarchy level
                        )

                    [title] => Array
                        (
                            [0] => Back
                            [1] => Select Date
                            [2] => Reset Date
                            [3] => Save and Move to Next Step
                        )

                    [place_holders] => Array
                        (
                            [0] => eg. Branch Manager
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Create Job Role
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index', $organisationId), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    

                            [1] => 
        
             Create Job Role
        
        
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index', $organisationId), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        
    
                            [2] => 
             Create Job Role
        
                            [3] => 
            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index', $organisationId), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
                            [4] => 
                            [5] => 
    Form->create('JobRole', array('class' => 'form-horizontal', 'id' => 'createJobRole'));
    ?>
    
        Job Role Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));

                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $organisationId));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $productId));
                ?>
            
            
            
        
    
    Form->hidden('lastSelected', array('id' => 'lastSelected'));

    if (!empty($levels)) {

        $i = 0; //to populate the 1st level only all other levels will be ajaxified
        foreach ($levels as $level) {
            ?>

            
                *
                        

                
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector',));
                    ?>

                    
                    
                
            
            
        Expiry Date

        
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
    
    
        
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
    
    
        
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,));
                ?>
                Enable demographics page 
        
    
    
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    
    
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    
    
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
    
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    
    Form->end();
    ?>

                            [6] => 
        Job Role Title *

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));

                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $organisationId));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $productId));
                ?>
            
            
            
        
    
                            [7] => 
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));

                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $organisationId));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $productId));
                ?>
            
            
            
        
                            [8] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'eg. Branch Manager'));

                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $organisationId));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $productId));
                ?>
            
                            [9] => 
                *
                        

                
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector',));
                    ?>

                    
                    
                
            
                            [10] => 
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector',));
                    ?>

                    
                    
                
                            [11] => 
        Expiry Date

        
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
    
                            [12] => 
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
                            [13] => 
        
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
    
                            [14] => 
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
        
                            [15] => 
        
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,));
                ?>
                Enable demographics page 
        
    
                            [16] => 
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,));
                ?>
                Enable demographics page 
        
                            [17] => 
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    
                            [18] => 
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
                            [19] => 
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    
                            [20] => 
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
                            [21] => 
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
                            [22] => 
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
                            [23] => 
        
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
    
                            [24] => 
            Form->submit(__('Done? Move to Next Step'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save and Move to Next Step'));
            ?>
        
                            [25] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => 
            
                            [2] => *
                            [3] => 
                    
                        )

                    [labels] => Array
                        (
                            [0] => Job Role Title *
                            [1] => *
                        
                            [2] => Expiry Date
                            [3] => 
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,));
                ?>
                Choose five questions per page 
                            [4] => 
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,));
                ?>
                Enable demographics page 
                            [5] => 
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
                            [6] => 
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
                            [7] => 
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [add_assessments.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please select the Rpa
                        )

                    [title] => Array
                        (
                            [0] => Save
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Select assessment(s)
        
    

                            [1] => 
        
            Select assessment(s)
        
    
                            [2] => 
            Select assessment(s)
        
                            [3] => 
    Form->create('JobRole', array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add_assessments', $jrId), 'class' => 'form-horizontal', 'id' => 'createJobRoleStep2'));
    ?>
    
        Select CFA

        
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'id' => 'cfa', 'class' => 'levelSelector', 'disabled' => empty($cfas) ? true : false, 'value' => isset($jrAssessmentCfa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentCfa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
    
    
        Select RPA*

        
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($jrAssessmentRpa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentRpa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                ?>
                   Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => 'true', 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => isset($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory']) && ($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory'] == 1) ? true : false));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
    
    
        
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save'));
            ?>
        
    
    Form->end(); ?>

                            [4] => 
        Select CFA

        
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'id' => 'cfa', 'class' => 'levelSelector', 'disabled' => empty($cfas) ? true : false, 'value' => isset($jrAssessmentCfa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentCfa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
    
                            [5] => 
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'id' => 'cfa', 'class' => 'levelSelector', 'disabled' => empty($cfas) ? true : false, 'value' => isset($jrAssessmentCfa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentCfa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
                            [6] => 
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'id' => 'cfa', 'class' => 'levelSelector', 'disabled' => empty($cfas) ? true : false, 'value' => isset($jrAssessmentCfa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentCfa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
                            [7] => 
        Select RPA*

        
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($jrAssessmentRpa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentRpa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                ?>
                   Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => 'true', 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => isset($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory']) && ($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory'] == 1) ? true : false));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
    
                            [8] => 
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($jrAssessmentRpa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentRpa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                ?>
                   Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => 'true', 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => isset($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory']) && ($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory'] == 1) ? true : false));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
                            [9] => 
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($jrAssessmentRpa['JobRoleAssessment']['assessment_id']) ? $jrAssessmentRpa['JobRoleAssessment']['assessment_id'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                if (isset($jrAssessmentCfa['JobRoleAssessment']) && isset($jrAssessmentCfa['JobRoleAssessment']['id'])) {
                    echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => $jrAssessmentCfa['JobRoleAssessment']['id']));
                }
                ?>
                   Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => 'true', 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => isset($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory']) && ($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory'] == 1) ? true : false));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
                            [10] => 
        
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save'));
            ?>
        
    
                            [11] => 
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save'));
            ?>
        
                            [12] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                        )

                    [labels] => Array
                        (
                            [0] => Select CFA
                            [1] => Select RPA*
                            [2] =>    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => 'true', 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => isset($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory']) && ($jrAssessmentCfa['JobRoleAssessment']['passing_cfa_mandatory'] == 1) ? true : false));
                    ?>Select to choose passing CFA is compulsory to take RPA 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [edit.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter jor role title
                            [1] => Job Title already exist
                            [2] => Please enter valid job role title
                            [3] => Please enter a hierarchy level
                        )

                    [place_holders] => Array
                        (
                            [0] => Tom
                        )

                    [title] => Array
                        (
                            [0] => Select Date
                            [1] => Reset Date
                            [2] => Save
                            [3] => Cancel
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Edit Job Role
        
        
    

                            [1] => 
        
             Edit Job Role
        
        
    
                            [2] => 
             Edit Job Role
        
                            [3] => 
                            [4] => 
    Form->create('JobRole', array('class' => 'form-horizontal', 'id' => 'createJobRole'));
    ?>
    
        Job Role Title*

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $this->request->data['Organisation']['id']));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $this->request->data['Product']['id']));
                ?>
            
                Loading
            ...
            
        
    

    
                *
                        

                
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector', 'default' => $selected));
                    ?>

                     class='spinner'>Loading ...
                    
                
            
            Form->hidden('JobRole.lastSelected', array('id' => 'lastSelected', 'value' => $levelId));
    }
    ?>

    
        Expiry Date

        
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
    
    
        
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,

                ));
                ?>
                Choose five questions per page 
        
    
    
        
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,

                ));
                ?>
                Enable demographics page 
        
    
    
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    

    
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    
    
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    

    
        
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index'), array('class' => 'back', 'title' => 'Cancel', 'id' => 'cancelBtn'));
            ?>
        
    
    Form->end();
    ?>

                            [5] => 
        Job Role Title*

        
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $this->request->data['Organisation']['id']));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $this->request->data['Product']['id']));
                ?>
            
                Loading
            ...
            
        
    
                            [6] => 
            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $this->request->data['Organisation']['id']));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $this->request->data['Product']['id']));
                ?>
            
                Loading
            ...
            
        
                            [7] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                echo $this->Form->hidden('organisation_id', array('id' => 'organisation_id', 'value' => $this->request->data['Organisation']['id']));
                echo $this->Form->hidden('product_id', array('id' => 'organisation_id', 'value' => $this->request->data['Product']['id']));
                ?>
            
                            [8] => 
                *
                        

                
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector', 'default' => $selected));
                    ?>

                     class='spinner'>Loading ...
                    
                
            
                            [9] => 
                    Form->select('JobRole.level_id.' . $level['Level']['id'], $level['Level']['AliasesLevel'], array('empty' => 'Select ' . $level['Level']['name'], 'id' => $i, 'rev' => $level['Level']['id'], 'class' => 'levelSelector', 'default' => $selected));
                    ?>

                     class='spinner'>Loading ...
                    
                
                            [10] => 
        Expiry Date

        
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
    
                            [11] => 
            Form->input('expiry_date', array('id' => 'datepicker', 'label' => false, 'div' => false, 'type' => 'text', 'readonly' => 'readonly', 'class' => 'expiryDate', 'title' => 'Select Date'

            ));
            echo $this->Html->link('Reset Date', 'javascript:void(0)', array('class' => 'resetDate', 'title' => 'Reset Date'));
            ?>
        
                            [12] => 
        
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,

                ));
                ?>
                Choose five questions per page 
        
    
                            [13] => 
            
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,

                ));
                ?>
                Choose five questions per page 
        
                            [14] => 
        
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,

                ));
                ?>
                Enable demographics page 
        
    
                            [15] => 
            
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,

                ));
                ?>
                Enable demographics page 
        
                            [16] => 
        
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
    
                            [17] => 
            
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
        
                            [18] => 
        
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
    
                            [19] => 
            
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
        
                            [20] => 
        
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
    
                            [21] => 
            
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
        
                            [22] => 
        
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index'), array('class' => 'back', 'title' => 'Cancel', 'id' => 'cancelBtn'));
            ?>
        
    
                            [23] => 
            Form->submit(__('Save'), array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index'), array('class' => 'back', 'title' => 'Cancel', 'id' => 'cancelBtn'));
            ?>
        
                            [24] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => Loading
            ...
            
                            [2] => *
                            [3] =>  class='spinner'>Loading ...
                    
                        )

                    [labels] => Array
                        (
                            [0] => Job Role Title*
                            [1] => *
                        
                            [2] => Expiry Date
                            [3] => 
                Form->checkbox('questions_per_page', array('id' => 'question_per_page', 'div' => false,

                ));
                ?>
                Choose five questions per page 
                            [4] => 
                Form->checkbox('can_show_demographic_page', array('id' => 'can_show_demographic_page', 'div' => false,

                ));
                ?>
                Enable demographics page 
                            [5] => 
                Form->checkbox('is_anonymous_candidate_allowed', array('id' => 'is_anonymous_candidate_allowed', 'div' => false,));
                ?>
                Allow Anonymous Candidates 
                            [6] => 
                Form->checkbox('can_tab_be_closed', array('id' => 'can_tab_be_closed', 'div' => false,));
                ?>
                Close the browser tab on clicking the button after assessment is completed 
                            [7] => 
                Form->checkbox('can_show_country_list', array('id' => 'can_show_country_list', 'div' => false,));
                ?>
                Show country list to a candidate 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [edit_job_role.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please select the Rpa
                        )

                    [title] => Array
                        (
                            [0] => Save
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Select assessment(s)
        
    

                            [1] => 
        
            Select assessment(s)
        
    
                            [2] => 
            Select assessment(s)
        
                            [3] => 
    Form->create('JobRole', array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit_job_role', $jobRoleId), 'class' => 'form-horizontal', 'id' => 'editJobRole'));
    ?>
    
        Select CFA

        
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'class' => 'levelSelector', 'id' => 'cfa', 'value' => isset($cfaRpaData['cfaId']) ? $cfaRpaData['cfaId'] : '', 'disabled' => empty($cfas) ? true : false));

                echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => isset($cfaRpaData['cfaJobRoleAssessmentId']) ? $cfaRpaData['cfaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
    
    
        Select RPA *

        
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($cfaRpaData['rpaId']) ? $cfaRpaData['rpaId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => isset($cfaRpaData['rpaJobRoleAssessmentId']) ? $cfaRpaData['rpaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                ?>


                
                    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => $status, 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => $checkedStatus

                    ));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
    

    

    
        
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
    
    Form->end();?>

                            [4] => 
        Select CFA

        
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'class' => 'levelSelector', 'id' => 'cfa', 'value' => isset($cfaRpaData['cfaId']) ? $cfaRpaData['cfaId'] : '', 'disabled' => empty($cfas) ? true : false));

                echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => isset($cfaRpaData['cfaJobRoleAssessmentId']) ? $cfaRpaData['cfaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
    
                            [5] => 
            
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'class' => 'levelSelector', 'id' => 'cfa', 'value' => isset($cfaRpaData['cfaId']) ? $cfaRpaData['cfaId'] : '', 'disabled' => empty($cfas) ? true : false));

                echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => isset($cfaRpaData['cfaJobRoleAssessmentId']) ? $cfaRpaData['cfaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
        
                            [6] => 
                Form->select('JobRoleAssessment.0.assessment_id', $cfas, array('empty' => 'Select CFA', 'class' => 'levelSelector', 'id' => 'cfa', 'value' => isset($cfaRpaData['cfaId']) ? $cfaRpaData['cfaId'] : '', 'disabled' => empty($cfas) ? true : false));

                echo $this->Form->hidden('JobRoleAssessment.0.id', array('value' => isset($cfaRpaData['cfaJobRoleAssessmentId']) ? $cfaRpaData['cfaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.0.type', array('value' => 1));
                echo empty($cfas) ? 'There is no CFA to add.' : '';
                ?>
            
                            [7] => 
        Select RPA *

        
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($cfaRpaData['rpaId']) ? $cfaRpaData['rpaId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => isset($cfaRpaData['rpaJobRoleAssessmentId']) ? $cfaRpaData['rpaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                ?>


                
                    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => $status, 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => $checkedStatus

                    ));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
    
                            [8] => 
            
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($cfaRpaData['rpaId']) ? $cfaRpaData['rpaId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => isset($cfaRpaData['rpaJobRoleAssessmentId']) ? $cfaRpaData['rpaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                ?>


                
                    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => $status, 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => $checkedStatus

                    ));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
        
                            [9] => 
                Form->select('JobRoleAssessment.1.assessment_id', $rpas, array('empty' => 'Select RPA', 'class' => 'levelSelector', 'value' => isset($cfaRpaData['rpaId']) ? $cfaRpaData['rpaId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.id', array('value' => isset($cfaRpaData['rpaJobRoleAssessmentId']) ? $cfaRpaData['rpaJobRoleAssessmentId'] : ''));
                echo $this->Form->hidden('JobRoleAssessment.1.type', array('value' => 2));
                ?>


                
                    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => $status, 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => $checkedStatus

                    ));
                    ?>Select to choose passing CFA is compulsory to take RPA 
            
                            [10] => 
        
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
    
                            [11] => 
            Form->submit(__('Done'), array('name' => 'save', 'class' => 'btn btnBlack', 'title' => 'Save'));
            ?>
        
                            [12] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                        )

                    [labels] => Array
                        (
                            [0] => Select CFA
                            [1] => Select RPA *
                            [2] => 
                    Form->checkbox('passing_cfa_mandatory', array('label' => false, 'div' => false, 'disabled' => $status, 'name' => 'passing_cfa_mandatory', 'id' => 'cfaMandatory', 'checked' => $checkedStatus

                    ));
                    ?>Select to choose passing CFA is compulsory to take RPA 
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [index.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New
                            [1] => Add New
                            [2] => label
                            [3] => View Job Role
                            [4] => Edit Job Role
                            [5] => Delete Assessment
                        )

                    [place_holders] => Array
                        (
                            [0] => Search
                        )

                    [alert_messages] => Array
                        (
                            [0] => You can not delete this Job Role as there are active users, please try again after sometime
                            [1] => Are you sure you want to delete this Job Role
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Job Roles 
            Job Roles Listing
        
        
            Job Role
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), '#', array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false, 'disabled' => 'disabled'));
            }
            ?>
        

        
            Form->create('JobRole', array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                 'Filter By', 'name' => 'Name');

                //show the organisation hierarchy
                if (!empty($organisationLevels)) {
                    foreach ($organisationLevels as $level) {
                        $options[$level['Level']['id']] = $level['Level']['name'];
                    }
                }
                /*Need to format this condition is due to no validation in levels after
                *validation are done then remove this condition
                 * */
                if (empty($levelId)) {
                    $levelId = '';
                }
                echo $this->Form->select('filter', $options, array('label' => false, 'value' => $levelId, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'ProductsUserFilter'

                ));
                ?>
            
            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => $query, 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
        

                            [1] => 
        
            Job Roles 
            Job Roles Listing
        
        
            Job Role
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), '#', array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false, 'disabled' => 'disabled'));
            }
            ?>
        

        
            Form->create('JobRole', array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                 'Filter By', 'name' => 'Name');

                //show the organisation hierarchy
                if (!empty($organisationLevels)) {
                    foreach ($organisationLevels as $level) {
                        $options[$level['Level']['id']] = $level['Level']['name'];
                    }
                }
                /*Need to format this condition is due to no validation in levels after
                *validation are done then remove this condition
                 * */
                if (empty($levelId)) {
                    $levelId = '';
                }
                echo $this->Form->select('filter', $options, array('label' => false, 'value' => $levelId, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'ProductsUserFilter'

                ));
                ?>
            
            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => $query, 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
        
                            [2] => 
            Job Roles 
            Job Roles Listing
        
                            [3] => 
            Job Role
             0) {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));
            } else {
                echo $this->Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), '#', array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false, 'disabled' => 'disabled'));
            }
            ?>
        
                            [4] => 
            Form->create('JobRole', array('url' => array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));
            ?>
            
                 'Filter By', 'name' => 'Name');

                //show the organisation hierarchy
                if (!empty($organisationLevels)) {
                    foreach ($organisationLevels as $level) {
                        $options[$level['Level']['id']] = $level['Level']['name'];
                    }
                }
                /*Need to format this condition is due to no validation in levels after
                *validation are done then remove this condition
                 * */
                if (empty($levelId)) {
                    $levelId = '';
                }
                echo $this->Form->select('filter', $options, array('label' => false, 'value' => $levelId, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'ProductsUserFilter'

                ));
                ?>
            
            
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => $query, 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
            Form->end(); ?>
            
        
                            [5] => 
                 'Filter By', 'name' => 'Name');

                //show the organisation hierarchy
                if (!empty($organisationLevels)) {
                    foreach ($organisationLevels as $level) {
                        $options[$level['Level']['id']] = $level['Level']['name'];
                    }
                }
                /*Need to format this condition is due to no validation in levels after
                *validation are done then remove this condition
                 * */
                if (empty($levelId)) {
                    $levelId = '';
                }
                echo $this->Form->select('filter', $options, array('label' => false, 'value' => $levelId, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'ProductsUserFilter'

                ));
                ?>
            
                            [6] => 
                Form->input('title', array('label' => false, 'div' => false, 'id' => 'name', 'value' => $query, 'placeholder' => 'Search'));
                echo $this->Form->submit('', array('div' => false, 'class' => 'searchIcon'));
                ?>
            
                            [7] => 
                            [8] => 
    
                    
                    
                        Text->truncate($jobRole['JobRole']['name'], 20, array('ending' => '...', 'exact' => true));

                            ?>
                        
                        
                        
                        
                    
                        
                                Job Role created
                                    successfully
                                
                        
                        Html->link($this->Html->tag('i', '', array('class' => 'icon-wrench')) . 'Manage CMS', array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $jobRole['JobRole']['id'], 2), array('class' => 'manageCMSLink', 'escape' => false));
                        }

                        echo $this->Form->button('Copy link to clipboard', array('class' => 'btn LinkBtn', 'link' => $publicLink . $jobRole['JobRole']['hash']));
                    } else {
                        ?> Recent Activities
                        Basic information created
                         0) {
                            echo $this->Html->link(__('Click Here to Complete'), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add_assessments', $jobRole['JobRole']['id']), array('class' => 'btn'));
                        } else {
                            echo $this->Html->link(__('Click Here to Complete'), '#', array('class' => 'btn', 'disabled' => 'disabled'));
                        }

                    }?>
                    
                    
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'view', $jobRole['JobRole']['id']), array('title' => 'View Job Role', 'escape' => false,));
                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn editJobRole'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']), array('title' => 'Edit Job Role', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'delete', $jobRole['JobRole']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $jobRole['JobRole']['id']));
                        ?>
                    
                
                No Job Roles found
            
    
        element('pagination');?>
    

                            [9] => 
                            [10] => 
                        Text->truncate($jobRole['JobRole']['name'], 20, array('ending' => '...', 'exact' => true));

                            ?>
                        
                        
                        
                        
                            [11] => 
                            [12] => 
                            [13] => 
                        
                                Job Role created
                                    successfully
                                
                        
                        Html->link($this->Html->tag('i', '', array('class' => 'icon-wrench')) . 'Manage CMS', array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $jobRole['JobRole']['id'], 2), array('class' => 'manageCMSLink', 'escape' => false));
                        }

                        echo $this->Form->button('Copy link to clipboard', array('class' => 'btn LinkBtn', 'link' => $publicLink . $jobRole['JobRole']['hash']));
                    } else {
                        ?> Recent Activities
                        Basic information created
                         0) {
                            echo $this->Html->link(__('Click Here to Complete'), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add_assessments', $jobRole['JobRole']['id']), array('class' => 'btn'));
                        } else {
                            echo $this->Html->link(__('Click Here to Complete'), '#', array('class' => 'btn', 'disabled' => 'disabled'));
                        }

                    }?>
                    
                            [14] => 
                                Job Role created
                                    successfully
                                
                        
                            [15] => 
                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'view', $jobRole['JobRole']['id']), array('title' => 'View Job Role', 'escape' => false,));
                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn editJobRole'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']), array('title' => 'Edit Job Role', 'escape' => false,));

                        echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'deleteBtn deleteJobRole'))), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'delete', $jobRole['JobRole']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'checkCandidateStatus', 'data-id' => $jobRole['JobRole']['id']));
                        ?>
                    
                            [16] => 
                            [17] => 
        element('pagination');?>
    
                            [18] => 
                        )

                    [span] => Array
                        (
                            [0] => Job Roles
                            [1] => 
                            [2] => Job Roles Listing
                            [3] => Job Role created
                                    successfully
                                
                            [4] => Recent Activities
                        )

                )

        )

)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [select_behaviours.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours
    
    
        1 Selectbehaviours
            2 Setrole scenario
            3 Setresponse tags
        

    

    
        Form->create('RpaBehaviour', array('class' => 'form-horizontal')); ?>
        Form->hidden('Rpas.job_role_id', array('value' => $jobRoleId));
            echo $this->Form->hidden('Rpas.on_which_step', array('value' => '0', 'id' => 'on_which_step'));
            if ($rpa_assesment_id != 0) {
                echo $this->Form->hidden('Rpas.id', array('value' => $rpa_assesment_id));
            }


            foreach ($das as $key => $da) {
                ?>

                
                    
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                

                
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            Form->end(); ?>
        


                            [1] => 
        Parameters and Settings 
        Select behaviours
    
                            [2] => 
        1 Selectbehaviours
            2 Setrole scenario
            3 Setresponse tags
        
                            [3] => 
                            [4] => 
        Form->create('RpaBehaviour', array('class' => 'form-horizontal')); ?>
        Form->hidden('Rpas.job_role_id', array('value' => $jobRoleId));
            echo $this->Form->hidden('Rpas.on_which_step', array('value' => '0', 'id' => 'on_which_step'));
            if ($rpa_assesment_id != 0) {
                echo $this->Form->hidden('Rpas.id', array('value' => $rpa_assesment_id));
            }


            foreach ($das as $key => $da) {
                ?>

                
                    
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                

                
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            Form->end(); ?>
        
                            [5] => 
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                            [6] => 
                            [7] => 
                            [8] => 
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
                            [9] => 
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => Selectbehaviours
                            [4] => Setrole scenario
                            [5] => Setresponse tags
                            [6] => 
                        )

                    [labels] => Array
                        (
                            [0] =>  Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [set_scenarios.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="noteText">Select scenarios for the selected Behaviours</p>
                        )

                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Done
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select at least one scenario per behaviour
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Setup RPA
        
    
    
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        

                            [1] => 
        
            Setup RPA
        
    
                            [2] => 
            Setup RPA
        
                            [3] => 
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        
                            [4] => 
    Select scenarios for the selected Behaviours

    Form->create('RpaScenario', array('class' => 'form-horizontal')); ?>

    

        
                    
                
                
                    

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " out of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " scenarios selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                         Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id']));


                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                

    
        
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssesmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
    Form->end(); ?>

                            [5] => 

        
                    
                
                
                    

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " out of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " scenarios selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                         Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id']));


                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                
                            [6] => 
                    
                
                
                    

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " out of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " scenarios selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                         Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id']));


                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                            [7] => 
                
                
                    

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " out of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " scenarios selected";
                            ?>
                        
                    
                            [8] => 
                            Html->tag('span', 0, array('class' => 'selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " out of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " scenarios selected";
                            ?>
                        
                            [9] => 


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                         Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id']));


                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                            [10] => 
        
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssesmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
                            [11] => 
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssesmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Done', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => select behaviours
                            [1] => Selectrole scenarios
                            [2] => Set response tagsto the scenarios
                            [3] => 
                
                    
                            [4] => 
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        
                            [5] => Select All
                        )

                    [labels] => Array
                        (
                            [0] => 
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                            [1] =>  Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id']));


                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/JobRoles] => Array
        (
            [view.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Manage CMS
                            [1] => Edit Assessment
                            [2] => Delete Assessment
                            [3] => Back
                        )

                    [place_holders] => Array
                        (
                            [0] => Start Date
                            [1] => End Date
                            [2] => Search
                        )

                    [div] => Array
                        (
                            [0] => 


    Html->link(__($this->Html->tag('i', '', array('class' => 'icon-wrench iconManageCMS')), true), array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $jobRoleDetails['JobRole']['id'], 2), array('title' => 'Manage CMS', 'escape' => false, 'class' => 'btn'));
    }
    echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', isset($jobRoleDetails['JobRole']['id']) ? $jobRoleDetails['JobRole']['id'] : ''), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn'));

    echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'delete', $jobRoleDetails['JobRole']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));

    ?>


    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>




    
        
            
                Job Role: 
                    
            
            
                Status :
                    
                        
                
                Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                
        
        
            Candidates
                Job Role Information
            
                
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
            
        

    
    


                            [1] => 

    Html->link(__($this->Html->tag('i', '', array('class' => 'icon-wrench iconManageCMS')), true), array('plugin' => 'cms', 'controller' => 'instructions', 'action' => 'edit_assessment_pages', 'welcome_page', $jobRoleDetails['JobRole']['id'], 2), array('title' => 'Manage CMS', 'escape' => false, 'class' => 'btn'));
    }
    echo $this->Html->link(__($this->Html->tag('span', '', array('class' => 'editBtn')), true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', isset($jobRoleDetails['JobRole']['id']) ? $jobRoleDetails['JobRole']['id'] : ''), array('title' => 'Edit Assessment', 'escape' => false, 'class' => 'btn'));

    echo $this->Form->postLink(__($this->Html->tag('span', '', array('class' => 'deleteIcon')), true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'delete', $jobRoleDetails['JobRole']['id']), array('title' => 'Delete Assessment', 'escape' => false, 'class' => 'btn'));

    ?>

                            [2] => 
    Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
    ?>

                            [3] => 
                            [4] => 

    
        
            
                Job Role: 
                    
            
            
                Status :
                    
                        
                
                Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                
        
        
            Candidates
                Job Role Information
            
                
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
            
        

    
    

                            [5] => 
        
            
                Job Role: 
                    
            
            
                Status :
                    
                        
                
                Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                
        
        
            Candidates
                Job Role Information
            
                
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
            
        

    
                            [6] => 
            
                Job Role: 
                    
            
            
                Status :
                    
                        
                
                Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                
        
                            [7] => 
                Job Role: 
                    
            
                            [8] => 
                Status :
                    
                        
                
                Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                
                            [9] => Status :
                    
                        
                
                            [10] => Expiry Date :
                    
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                
                            [11] => 
            Candidates
                Job Role Information
            
                
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
            
        
                            [12] => 
                
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
            
                            [13] => 
                    
                        Filter Candidates:
                        Download Report
                    

                    
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    

                    
                        element('JobRoles.job_roles_candidates_list');?>
                    
                
                            [14] => 
                        Filter Candidates:
                        Download Report
                    
                            [15] => 
                        
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                        
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        

                        
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                        

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                    
                            [16] => 
                             'All', 2 => 'Candidates passed CFA', 12 => 'Candidates passed assessments', 14 => 'Candidates failed');
                            } else {
                                $options = array(1 => 'All', 11 => 'Candidates passed assessments', 13 => 'Candidates failed');
                            }
                            echo $this->Form->select(__('filters'), array($options), array('default' => 1, 'id' => 'candidateFilter', 'empty' => false));
                            echo $this->Form->hidden('jobRoleId', array('value' => $jobRoleDetails['JobRole']['id'], 'id' => 'jobRoleId'));

                            ?>
                        
                            [17] => 
                            Form->input('reportStartDate', array('label' => false, 'div' => false, 'id' => 'reportStartDate', 'placeholder' => 'Start Date'));
                            ?>
                        
                            [18] => 
                            Form->input('reportEndDate', array('label' => false, 'div' => false, 'id' => 'reportEndDate', 'placeholder' => 'End Date'));
                            ?>
                        
                            [19] => 

                            
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            

                            
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            

                            
                        
                            [20] => 
                                 'Filter By', 'name' => 'Name', 'email' => 'Email', 'certificate_no' => 'Certificate Number', 'country' => 'Country');

                                echo $this->Form->select('searchFilter', $options, array('label' => false, 'class' => 'cstSelList', 'div' => false, 'empty' => false, 'id' => 'searchFilter'));
                                ?>
                            
                            [21] => 
                                Form->input('searchQuery', array('label' => false, 'div' => false, 'id' => 'searchQuery', 'placeholder' => 'Search'));
                                echo $this->Form->button('', array('div' => false, 'class' => 'searchIcon', 'disabled' => true));
                                ?>
                            
                            [22] => 
                            [23] => 
                        element('JobRoles.job_roles_candidates_list');?>
                    
                            [24] => 
                    
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                    
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                
                            [25] => 
                        Hierarchy
                        
                                    
                                         :

                                        
                                    
                                        
                                        
                                    

                                
                                
                            [26] => 
                                         :

                                        
                                    
                                        
                                        
                                    
                            [27] => 
                                    
                                        
                                        
                            [28] => 
                        Assessments
                         $assessment) {
                                    if ($assessmentType == 1) {
                                        ?>
                                        
                                            CFA : 
                                        
                                            RPA :
                                        Assessments are yet to select";
                            }

                            if (isset($assessmentsDetails['Assessment']) && count($assessmentsDetails['Assessment']) == 2) {
                                if (!empty($assessmentsDetails['is_mandatory'])) {
                                    $cfaStatus = 'Passing CFA is mandatory';
                                } else {
                                    $cfaStatus = 'Passing CFA is not mandatory';
                                }
                            }
                            ?>
                            

                            Configured for anonymous users
                            Demographics page is configured

                                
                                    Candidate has to select country while taking an assessment
                                
                                 1) {
                                ?>
                                
                                    CFA:configured with 5 questions per page
                                
                                
                            [29] => 
                        )

                    [span] => Array
                        (
                            [0] => 
                    
                            [1] => 
                        
                            [2] => 
                     Html->tag('span', date('d/m/Y', strtotime($jobRoleDetails['JobRole']['expiry_date'])), array('class' => 'darkTextReg'));
                        ?>
                
                            [3] => 
                                        
                        )

                    [labels] => Array
                        (
                            [0] =>  :
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [add.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('RpaAssessment'); ?>
    
        Form->input('job_role_id');
        echo $this->Form->input('on_which_step');
        echo $this->Form->input('is_completed');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Html->link(__('List Rpa Assessments'), array('action' => 'index')); ?>
        Html->link(__('List Job Roles'), array('controller' => 'job_roles', 'action' => 'index')); ?> 
        Html->link(__('New Job Role'), array('controller' => 'job_roles', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [add_response_tags.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            Html->tag('h4', 'Setup RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Setup RPA');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));
                    //echo $this->Form->hidden('RpaAssessment.is_completed', array('value' => 1));
                    //echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => 3));
                }
                echo $this->Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [5] => 
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));
                    //echo $this->Form->hidden('RpaAssessment.is_completed', array('value' => 1));
                    //echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => 3));
                }
                echo $this->Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [6] => 
            Scenario 
                of 
            

        
                            [7] => 
            

            
                Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));
                    //echo $this->Form->hidden('RpaAssessment.is_completed', array('value' => 1));
                    //echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => 3));
                }
                echo $this->Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [8] => 
                Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));
                    //echo $this->Form->hidden('RpaAssessment.is_completed', array('value' => 1));
                    //echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => 3));
                }
                echo $this->Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));

                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [9] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [10] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [11] => 
                     Response 
                        
                    
            
                            [12] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [13] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [14] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [15] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    /*echo $this->Form->hidden('RpaBehaviour.pass_score', array('id'=>'passScore', 'value'=> !empty($rpaBehaviourData['RpaBehaviour']['pass_score']) ? $rpaBehaviourData['RpaBehaviour']['pass_score']:0 ));*/
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [16] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
    
                            [17] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenarios multiplied by '8' whereas minimum score is the total number of scenarios multiplied by '-8'.
            
                For Critical Behaviours, the pass score should always be a positive value and if a user does not achieve that score, they fail that particular RPA. After selecting scenarios for all the behaviours, the admin can set the overall score, which starts from zero and ends with the maximum possible value.
        
                            [18] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [19] => Set Pass Score for this Behaviour
                            [20] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [21] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [22] => 
                            -
                            [23] => 
                            [24] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [25] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [26] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [27] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [28] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [29] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [30] => 
    
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [31] => 
        Form->hidden('ButtonClicked.is_last_scenario', array('value' => $isLastScenario));

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        echo $this->Form->hidden('ButtonClicked.on_which_button', array('id' => 'onWhichButton'));

        echo $this->Form->submit('Save & Exit', array('class' => 'btn btn-large saveResponses', 'data-value' => '1', 'div' => false, 'id' => 'saveAndExit'));


        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour'] && !$isLastScenario) {
            $buttonTitle = 'Save & Continue';
        } else if ($isLastScenario) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');

        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [32] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [33] => 
    
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    

                            [34] => 
        
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
    
                            [35] => 
             $imageName): ?>
                
                    
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                
                
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] =>  Response 
                        
                    
                            [5] =>  Response 
                            [6] => 
                            [7] =>  
                            [8] => 
                            [9] => 
                            [10] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                            [11] => 
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                        
                        )

                    [labels] => Array
                        (
                            [0] => 
                        
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                    
                    
                        Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                        ?>
                         
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [edit.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New Behaviour
                            [1] => Edit Behaviour
                            [2] => Delete Behaviour
                            [3] => Delete Behaviour
                            [4] => Edit Behaviour
                            [5] => Done With Editing
                        )

                    [alert_messages] => Array
                        (
                            [0] => " . $message . "
                            [1] => There is only one core the,You not able to delete
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'add_more_behaviours', $rpaAssessmentId), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
        
    

    
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $jobRoleLink = array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']);
                $jobRoleAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                if ($jobRole['JobRole']['is_invited']) {
                    $jobRoleLink = 'javascript:void(0)';
                    $message = "You can not edit the basic information, as this role is used in other tools";
                    $jobRoleAttr['onclick'] = "alert('" . $message . "')";
                }
                echo $this->Html->link('', $jobRoleLink, $jobRoleAttr);

                ?>
            
        
    
    

        
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if (count($behaviours) > 1) {
                                echo $this->Form->PostLink('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'delete_behaviour', $behaviour['RpaBehaviour']['rpa_assessment_id'], $behaviour['RpaBehaviour']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } /*else {
                            echo $this->Html->link('',
                                array(
                                    'plugin' => 'job_roles',
                                    'controller' => 'rpa_assessments',
                                    'action' => 'edit'
                                ),
                                array(
                                    'class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Behaviour',

                                )

                            );

                        }*/

                            echo $this->Html->link('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'edit_response_tags', $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                    


                            [1] => 
        
             
        
        
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'add_more_behaviours', $rpaAssessmentId), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
        
    
                            [2] => 
             
        
                            [3] => 
            Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'New Behaviours to RPA', true), array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'add_more_behaviours', $rpaAssessmentId), array('class' => 'btn btnThin', 'title' => 'Add New Behaviour', 'escape' => false));
            }
            ?>
        
                            [4] => 
                            [5] => 
        
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $jobRoleLink = array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']);
                $jobRoleAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                if ($jobRole['JobRole']['is_invited']) {
                    $jobRoleLink = 'javascript:void(0)';
                    $message = "You can not edit the basic information, as this role is used in other tools";
                    $jobRoleAttr['onclick'] = "alert('" . $message . "')";
                }
                echo $this->Html->link('', $jobRoleLink, $jobRoleAttr);

                ?>
            
        
    
                            [6] => 
            
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $jobRoleLink = array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']);
                $jobRoleAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                if ($jobRole['JobRole']['is_invited']) {
                    $jobRoleLink = 'javascript:void(0)';
                    $message = "You can not edit the basic information, as this role is used in other tools";
                    $jobRoleAttr['onclick'] = "alert('" . $message . "')";
                }
                echo $this->Html->link('', $jobRoleLink, $jobRoleAttr);

                ?>
            
        
                            [7] => 
                Html->tag('div', 'Basic information', array('class' => 'notab', 'escape' => false)

                );

                $jobRoleLink = array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'edit', $jobRole['JobRole']['id']);
                $jobRoleAttr = array('class' => 'editIcon', 'title' => 'Edit Behaviour');
                if ($jobRole['JobRole']['is_invited']) {
                    $jobRoleLink = 'javascript:void(0)';
                    $message = "You can not edit the basic information, as this role is used in other tools";
                    $jobRoleAttr['onclick'] = "alert('" . $message . "')";
                }
                echo $this->Html->link('', $jobRoleLink, $jobRoleAttr);

                ?>
            
                            [8] => 

        
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if (count($behaviours) > 1) {
                                echo $this->Form->PostLink('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'delete_behaviour', $behaviour['RpaBehaviour']['rpa_assessment_id'], $behaviour['RpaBehaviour']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } /*else {
                            echo $this->Html->link('',
                                array(
                                    'plugin' => 'job_roles',
                                    'controller' => 'rpa_assessments',
                                    'action' => 'edit'
                                ),
                                array(
                                    'class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Behaviour',

                                )

                            );

                        }*/

                            echo $this->Html->link('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'edit_response_tags', $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                    
                            [9] => 
                        

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if (count($behaviours) > 1) {
                                echo $this->Form->PostLink('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'delete_behaviour', $behaviour['RpaBehaviour']['rpa_assessment_id'], $behaviour['RpaBehaviour']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } /*else {
                            echo $this->Html->link('',
                                array(
                                    'plugin' => 'job_roles',
                                    'controller' => 'rpa_assessments',
                                    'action' => 'edit'
                                ),
                                array(
                                    'class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Behaviour',

                                )

                            );

                        }*/

                            echo $this->Html->link('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'edit_response_tags', $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                

                        

                            
                                            
                                                
                                            
                                                
                                        

                                        
                    
                            [10] => 

                            Html->tag('span', $this->Html->tag('i', '', array('class' => 'plus', 'escape' => false)) . $behaviour['DaOrganisationsProduct']['name'], array('class' => 'tab', 'escape' => false)

                            );
                            /*check that if there is only one core theme is present then you can not able to delete*/
                            if (count($behaviours) > 1) {
                                echo $this->Form->PostLink('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'delete_behaviour', $behaviour['RpaBehaviour']['rpa_assessment_id'], $behaviour['RpaBehaviour']['id']), array('class' => 'deleteIcon deleteDa ', 'title' => 'Delete Behaviour'), __('Are you sure you want to delete behaviour?'));
                            } /*else {
                            echo $this->Html->link('',
                                array(
                                    'plugin' => 'job_roles',
                                    'controller' => 'rpa_assessments',
                                    'action' => 'edit'
                                ),
                                array(
                                    'class' => 'deleteIcon deleteDa isDeleted', 'title' => 'Delete Behaviour',

                                )

                            );

                        }*/

                            echo $this->Html->link('', array('plugin' => 'job_roles', 'controller' => 'rpa_assessments', 'action' => 'edit_response_tags', $behaviour['RpaBehaviour']['id']), array('class' => 'editIcon', 'title' => 'Edit Behaviour'));

                            ?>
                            Critical
                                
                            [11] => 

                            
                                            
                                                
                                            
                                                
                                        

                                        
                            [12] => 
                                                
                            [13] => 
     'job_roles', 'controller' => 'rpa_assessments', 'action' => 'set_rpa_score', $rpaAssessmentId);

    } else {
        $link = array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'index',);

    }
    ?>
    Html->link('Done With Editing', $link, array('class' => 'btnBlack noSpace btn pull-right', 'title' => 'Done With Editing', "id" => "completeEditing"));
    ?>


                        )

                    [labels] => Array
                        (
                            [0] => Critical
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [edit_response_tags.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Enter alias to the scenario
                            [1] => Enter alias to the response
                        )

                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [submit] => Array
                        (
                            [0] => Save 
                        )

                    [alert_messages] => Array
                        (
                            [0] => Response Tag is not allocated to one of the response
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            Html->tag('h4', 'Edit RPA');
            ?>
        
    
    

                            [1] => 
        

            Html->tag('h4', 'Edit RPA');
            ?>
        
    
                            [2] => 

            Html->tag('h4', 'Edit RPA');
            ?>
        
                            [3] => 
    
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
    
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        

                            [4] => 
        
            Scenario 
                of 
            

        
        
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
    
                            [5] => 
            Scenario 
                of 
            

        
                            [6] => 
            

            
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
        
                            [7] => 
                Form->hidden('RpaScenario.assessment_image_id', array('id' => 'backgroundImage', 'value' => !empty($rpaScenario['RpaScenario']['assessment_image_id']) ? $rpaScenario['RpaScenario']['assessment_image_id'] : $assessmentImageId));
                echo $this->Form->hidden('RpaScenario.id', array('value' => $rpaScenario['RpaScenario']['id']));
                echo $this->Form->hidden('RpaScenario.title', array('value' => $rpaScenario['Scenario']['title']));
                echo $this->Form->textarea('RpaScenario.alias', array('class' => 'textarea500', 'placeholder' => 'Enter alias to the scenario', 'value' => $rpaScenario['RpaScenario']['alias']));
                echo $this->Html->link('Select Image', '#imagePopUpBox', array('class' => 'pull-right btn smlBtn selectImage fancybox_link'));
                ?>
            
                            [8] => 
         $scenarioResponse): ?>
        
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
        
                            [9] => 
            
                     Response 
                        
                    
            
            
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
        
                            [10] => 
                     Response 
                        
                    
            
                            [11] => 
                
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                Form->hidden('RpaResponse.' . $key . '.response', array('value' => $scenarioResponse['response']));
                echo $this->Form->textarea('RpaResponse.' . $key . '.name', array('class' => 'responsesTextarea', 'placeholder' => 'Enter alias to the response', 'value' => (isset($scenarioResponse['name']) ? $scenarioResponse['name'] : '')));
                ?>
            
                            [12] => 
                     

                    
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                
                            [13] => 
                        Form->hidden('RpaResponse.' . $key . '.id', array('value' => $scenarioResponse['rpa_response_id']));
                        }
                        echo $this->Form->hidden('RpaResponse.' . $key . '.rpa_scenario_id', array('value' => $rpaScenario['RpaScenario']['id']));
                        echo $this->Form->hidden('RpaResponse.' . $key . '.scenario_response_id', array('value' => $scenarioResponse['id']));

                        echo $this->Form->select('RpaResponse.' . $key . '.rpa_tag_id', $rpaTags, array('class' => 'point rpaResponseTag', 'default' => (isset($scenarioResponse['rpa_tag_id']) ? $scenarioResponse['rpa_tag_id'] : ''), 'empty' => 'Allocate Response tag',));
                        ?>
                    
                            [14] => 
    
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
    
    Form->hidden('RpaBehaviour.id', array('id' => 'rpaBehaviourId', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['id']) ? $rpaBehaviourData['RpaBehaviour']['id'] : 0));
    /*echo $this->Form->hidden('RpaBehaviour.pass_score', array('id'=>'passScore', 'value'=> !empty($rpaBehaviourData['RpaBehaviour']['pass_score']) ? $rpaBehaviourData['RpaBehaviour']['pass_score']:0 ));*/
    echo $this->Form->hidden('RpaBehaviour.min_pass_score', array('id' => 'minPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['min_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['min_pass_score'] : 0));
    echo $this->Form->hidden('RpaBehaviour.max_pass_score', array('id' => 'maxPassScore', 'value' => !empty($rpaBehaviourData['RpaBehaviour']['max_pass_score']) ? $rpaBehaviourData['RpaBehaviour']['max_pass_score'] : 1));
    ?>

                            [15] => 
        
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
    
                            [16] => 
            
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
            The maximum score for the behaviour scale is the total number of scenario multiplied by '8' whereas minimum score is the total number of scenario multiplied by '8'.
            For critical behaviour, the pass score should always be a positive value and if a User doesn't acheive that score, he/she fails that particular RPA. After selecting scenarios for all the behaviors, Admin can set overall score,which start from zero and ends with the maximum positive value.
        
                            [17] => 
                Set Pass Score for this Behaviour
                
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
            
                            [18] => Set Pass Score for this Behaviour
                            [19] => 
                    
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                    The maximum score for the behaviour scale is the total number of scenario
                    
                
                            [20] => 
                        
                            -
                        
                        
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                    
                            [21] => 
                            -
                            [22] => 
                            [23] => 
                            
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                        
                            [24] => 
                                

                                
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            
                            [25] => 
                                    
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                                
                            [26] => 
                                        

                                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                                    
                            [27] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                        
                            [28] => The maximum score for the behaviour scale is the total number of scenario
                    
                            [29] => 
    
        Form->hidden('ButtonClicked.is_last_scenario',
            array(
                'value'=> $isLastScenario
        ));*/
        /* echo $this->Form->hidden('ButtonClicked.on_which_button',
             array(
                 'id'=>'onWhichButton'
             ));*/

        /* echo $this->Form->submit('Save & Exit',
             array(
                 'class'=>'btn btn-large saveResponses',
                 'data-value'=>'1',
                 'div'=>false
             ));*/

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

                            [30] => 
        Form->hidden('ButtonClicked.is_last_scenario',
            array(
                'value'=> $isLastScenario
        ));*/
        /* echo $this->Form->hidden('ButtonClicked.on_which_button',
             array(
                 'id'=>'onWhichButton'
             ));*/

        /* echo $this->Form->submit('Save & Exit',
             array(
                 'class'=>'btn btn-large saveResponses',
                 'data-value'=>'1',
                 'div'=>false
             ));*/

        echo $this->Form->hidden('ButtonClicked.isLastScenarioOfCurrentBehaviour', array('value' => $rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']));

        $buttonTitle = 'Next';
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $buttonTitle = 'Done';
        }

        $submitButtonOptions = array('class' => 'btn btn-large btnBlack noSpaceRight saveResponses', 'data-value' => '2', 'div' => false, 'id' => 'saveAndContinue');
        if ($rpaCurrentBehaviourData['isLastScenarioOfCurrentBehaviour']) {
            $submitButtonOptions['style'] = 'display:none;';
            echo $this->Form->button('Next', array('class' => 'btn btn-large btnBlack noSpaceRight pull-right', 'div' => false, 'id' => 'toggleScoreSlider', 'type' => 'button'));
        }
        echo $this->Form->submit($buttonTitle, $submitButtonOptions);
        ?>
    
                            [31] => 
        Html->image('ajax-loader_product.gif');?>
    
                            [32] => 
    
        
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
    

                            [33] => 
        
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
    
                            [34] => 
            Crt->getRpaImages(); ?>
             $imageName): ?>
                
                    
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                
                
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] =>  Response 
                        
                    
                            [2] =>  Response 
                            [3] => 
                            [4] =>  
                            [5] => 
                            [6] => 
                            [7] => Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                            [8] => 
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                            
                        )

                    [labels] => Array
                        (
                            [0] => 
                        Html->image($organisationPath . '/questions/148X50/' . $imageName['AssessmentImage']['image'], array('width' => 150, 'height' => 69)); ?>
                        
                    Form->checkbox('imgChkBox_' . $key, array('class' => 'pull-right imageChkBox', 'checked' => $checked, 'value' => $imageName['AssessmentImage']['id'], 'hiddenField' => false));
                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [get_rpa_data.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit pass score for this 
    
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    

                            [1] => Edit pass score for this 
                            [2] => 
        
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
        
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
        
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
    
                            [3] => 
            
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [4] => 
                
                
                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [5] => 
                            [6] => 
                            [7] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [8] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [9] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [10] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [11] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [12] => 
            The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â
        
                            [13] => 
            Cancel

            Form->button(__('Done', true), array('class' => 'btn btnThin', 'id' => 'scoreFormSubmit', 'title' => 'Done', 'div' => false, 'escape' => true, 'type' => 'button'));
            ?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [get_rpa_data_for_detail_view.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [div] => Array
                        (
                            [0] => 
    
        
        
        
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
    
    The range for the cultural fit assessment is defined by the minimum possible points (that one can score) as a start and the maximum possible points (that one can score) as the end point. You can move the slider anywhere between the points for âmaximum passing score requiredâ and the âmaximum passing score one can score.â

                            [1] => 
        
        
        
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
    
                            [2] => 
                            [3] => 
                            [4] => 
            
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
        
                            [5] => 
                

                
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
            
                            [6] => 
                    
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                
                            [7] => 
                        

                        This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                    
                            [8] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                        
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('job_role_id'); ?>
            Paginator->sort('on_which_step'); ?>
            Paginator->sort('is_completed'); ?>
            Paginator->sort('created'); ?>
            Paginator->sort('modified'); ?>
            
         
                
                    Html->link($rpaAssessment['JobRole']['name'], array('controller' => 'job_roles', 'action' => 'view', $rpaAssessment['JobRole']['id'])); ?>
                
                 
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $rpaAssessment['RpaAssessment']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $rpaAssessment['RpaAssessment']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $rpaAssessment['RpaAssessment']['id']), null, __('Are you sure you want to delete # %s?', $rpaAssessment['RpaAssessment']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Rpa Assessment'), array('action' => 'add')); ?>
        Html->link(__('List Job Roles'), array('controller' => 'job_roles', 'action' => 'index')); ?> 
        Html->link(__('New Job Role'), array('controller' => 'job_roles', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [select_behaviours.ctp] => Array
                (
                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Parameters and Settings 
        Select behaviours
    
    
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        

    

    
        Form->create('RpaBehaviour', array('class' => 'form-horizontal')); ?>
        Form->hidden('Rpas.job_role_id', array('value' => $jobRoleId));
            echo $this->Form->hidden('Rpas.on_which_step', array('value' => '0', 'id' => 'on_which_step'));
            if ($rpaAssessmentId != 0) {
                echo $this->Form->hidden('Rpas.id', array('value' => $rpaAssessmentId));
            }
            foreach ($das as $key => $da) {
                ?>
                
                    
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                

                
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        


                            [1] => 
        Parameters and Settings 
        Select behaviours
    
                            [2] => 
        1 Selectbehaviours
            2 Setrole scenario
            3  Set response tagsto scenarios
        
                            [3] => 
                            [4] => 
        Form->create('RpaBehaviour', array('class' => 'form-horizontal')); ?>
        Form->hidden('Rpas.job_role_id', array('value' => $jobRoleId));
            echo $this->Form->hidden('Rpas.on_which_step', array('value' => '0', 'id' => 'on_which_step'));
            if ($rpaAssessmentId != 0) {
                echo $this->Form->hidden('Rpas.id', array('value' => $rpaAssessmentId));
            }
            foreach ($das as $key => $da) {
                ?>
                
                    
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                

                
                
                
                
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
            
            
                Html->image('ajax-loader_product.gif');?>
            
            Form->end(); ?>
        
                            [5] => 
                         Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                    
                            [6] => 
                            [7] => 
                            [8] => 
                    
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                
                            [9] => 
                        Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

                        echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

                        echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));

                        ?>
                    
                        )

                    [span] => Array
                        (
                            [0] => Parameters and Settings
                            [1] => 
                            [2] => Select behaviours
                            [3] => Selectbehaviours
                            [4] => Setrole scenario
                            [5] =>  Set response tagsto scenarios
                            [6] => 
                        )

                    [labels] => Array
                        (
                            [0] =>  Form->checkbox('RpaBehaviour.' . $key . '.da_organisations_product_id', array('value' => $da['DaOrganisationsProduct']['id'], 'id' => 'RpaBehaviour' . $key . 'da_organisations_product_id', 'class' => 'daCheckBox', 'data-id' => $key, 'data-id-div' => $key, 'checked' => $da['DaOrganisationsProduct']['selected']));

                            if ($da['DaOrganisationsProduct']['primary_id'] != 0) {

                                echo $this->Form->hidden('RpaBehaviour.' . $key . '.id', array('value' => $da['DaOrganisationsProduct']['primary_id']));
                            }

                            ?>
                             
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [set_rpa_score.ctp] => Array
                (
                    [tool_tip] => Array
                        (
                            [0] => <div class="toolTipInner">This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.

                        )

                    [para_message] => Array
                        (
                            [0] => <p class="topSpace30">The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.</p>
                        )

                    [place_holders] => Array
                        (
                            [0] => Retake Days
                            [1] => Button title
                            [2] => http://example.com/test
                        )

                    [title] => Array
                        (
                            [0] => Done
                        )

                    [submit] => Array
                        (
                            [0] => Done
                        )

                    [validation_messages] => Array
                        (
                            [0] => Retake days should be numeric, should not be zero(0) and less than 365 days
                            [1] => Button title should not be blank
                            [2] => Please enter valid URL
                        )

                    [alert_messages] => Array
                        (
                            [0] => Retake days should be numeric and less than 365 days
                            [1] => Enter a valid url
                        )

                    [div] => Array
                        (
                            [0] => 
    
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
    
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        

                            [1] => 
        

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
    
                            [2] => 

            html->tag('h4', 'Setup Role Preference Assessment');
            ?>
        
                            [3] => 
        1 SelectBehaviors
            2 SelectRole scenarios
            3  Set response tagsto scenarios
        
                            [4] => 
    
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
    The overall scale for the role preference assessment ranges from zero to maximum possible score that can be achieved. You can set the overall pass score between the position of the notch (minimum possible score) and the maximum possible score.

                            [5] => 
        Select pass score for this Assessment
        
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        

    
                            [6] => Select pass score for this Assessment
                            [7] => 
            
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
        
                            [8] => 
                
                

                
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
            
                            [9] => 
                            [10] => 
                            [11] => 
                    
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                
                            [12] => 
                        

                        
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                    
                            [13] => 
                            
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                        
                            [14] => 
                                

                                This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            
                            [15] => This is the sum of the pass scores of all the critical behaviors. The slider cannot be moved beyond this notch to the left side.
                                
                            [16] => 
    Form->create('RpaAssessment', array('id' => 'setFinalScore'));?>

    
        Enter the time period after which the candidate can retake this assessment (in days)
            *
        Form->input('retake_days', array('value' => $retakeDays, 'class' => '', 'label' => false, 'placeholder' => 'Retake Days', 'id' => 'retakeDays', 'type' => 'text', 'div' => false));

        echo $this->Form->hidden('id', array('value' => $rpaAssessmentId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
    
        Customise link on RPA pass page

        
            Button Title *
            Form->input('button_title', array('value' => !empty($rpaAssessmentData['RpaAssessment']['button_title']) ? $rpaAssessmentData['RpaAssessment']['button_title'] : 'register and apply now', 'class' => '', 'label' => false, 'placeholder' => 'Button title', 'id' => 'buttonTitle', 'type' => 'text', 'div' => false));
            ?>
            e.g. register and apply now
        
        
            Url *
            Form->input('job_role_url', array('value' => $rpaAssessmentData['RpaAssessment']['job_role_url'], 'class' => '', 'label' => false, 'placeholder' => 'http://example.com/test', 'id' => 'jobRoleUrl', 'type' => 'text', 'div' => false));
            ?>
            e.g. http://example.com/test
        

    
    
        Form->submit('Done', array('class' => 'btn btn-large btnBlack pull-right noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'scoreFormSubmit'));
        ?>
    
    
        Html->image('ajax-loader_product.gif');?>
    

    Form->end();?>

                            [17] => 
        Enter the time period after which the candidate can retake this assessment (in days)
            *
        Form->input('retake_days', array('value' => $retakeDays, 'class' => '', 'label' => false, 'placeholder' => 'Retake Days', 'id' => 'retakeDays', 'type' => 'text', 'div' => false));

        echo $this->Form->hidden('id', array('value' => $rpaAssessmentId));
        echo $this->Form->hidden('min_pass_score', array('value' => ($rpaSliderData['min_pass_score'] >= $rpaSliderData['min_score']) ? $rpaSliderData['min_pass_score'] : $rpaSliderData['min_score'], 'id' => 'minPassScore'));
        echo $this->Form->hidden('max_pass_score', array('value' => ($rpaSliderData['max_pass_score']  'maxPassScore'));
        ?>
    
                            [18] => 
        Customise link on RPA pass page

        
            Button Title *
            Form->input('button_title', array('value' => !empty($rpaAssessmentData['RpaAssessment']['button_title']) ? $rpaAssessmentData['RpaAssessment']['button_title'] : 'register and apply now', 'class' => '', 'label' => false, 'placeholder' => 'Button title', 'id' => 'buttonTitle', 'type' => 'text', 'div' => false));
            ?>
            e.g. register and apply now
        
        
            Url *
            Form->input('job_role_url', array('value' => $rpaAssessmentData['RpaAssessment']['job_role_url'], 'class' => '', 'label' => false, 'placeholder' => 'http://example.com/test', 'id' => 'jobRoleUrl', 'type' => 'text', 'div' => false));
            ?>
            e.g. http://example.com/test
        

    
                            [19] => 
            Button Title *
            Form->input('button_title', array('value' => !empty($rpaAssessmentData['RpaAssessment']['button_title']) ? $rpaAssessmentData['RpaAssessment']['button_title'] : 'register and apply now', 'class' => '', 'label' => false, 'placeholder' => 'Button title', 'id' => 'buttonTitle', 'type' => 'text', 'div' => false));
            ?>
            e.g. register and apply now
        
                            [20] => 
            Url *
            Form->input('job_role_url', array('value' => $rpaAssessmentData['RpaAssessment']['job_role_url'], 'class' => '', 'label' => false, 'placeholder' => 'http://example.com/test', 'id' => 'jobRoleUrl', 'type' => 'text', 'div' => false));
            ?>
            e.g. http://example.com/test
        
                            [21] => 
        Form->submit('Done', array('class' => 'btn btn-large btnBlack pull-right noSpaceRight', 'title' => 'Done', 'div' => false, 'id' => 'scoreFormSubmit'));
        ?>
    
                            [22] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => SelectBehaviors
                            [1] => SelectRole scenarios
                            [2] =>  Set response tagsto scenarios
                            [3] => 
                            [4] => 
                            [5] => *
                            [6] => *
                            [7] => e.g. register and apply now
                            [8] => *
                            [9] => e.g. http://example.com/test
                        )

                    [labels] => Array
                        (
                            [0] => Enter the time period after which the candidate can retake this assessment (in days)
            *
                            [1] => Button Title *
                            [2] => Url *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [set_scenarios.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="noteText">Select scenarios for the Behaviours Selected</p>
                        )

                    [submit] => Array
                        (
                            [0] => Save and Exit
                            [1] => Next
                        )

                    [alert_messages] => Array
                        (
                            [0] => Please select at least one scenario per behaviour
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Setup RPA
        
    
    
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        

                            [1] => 
        
            Setup RPA
        
    
                            [2] => 
            Setup RPA
        
                            [3] => 
        1 select behaviours
            2 Selectrole scenarios
            3 Set response tagsto the scenarios
        
                            [4] => 
    Select scenarios for the Behaviours Selected

    Form->create('RpaScenario', array('class' => 'form-horizontal')); ?>

    

         $categoryAndScenario) {
                if (!isset($categoryAndScenario['Scenario']) || empty($categoryAndScenario['Scenario'])) {
                    continue;
                }
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $categoryAndScenario['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id'], 'checked' => $scenario['selected']));
                                            if ($scenario['primary_id'] != 0) {
                                                echo $this->Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['primary_id']));
                                            }

                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                

    
        
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
    
        Html->image('ajax-loader_product.gif');?>
    
    Form->end(); ?>

                            [5] => 

         $categoryAndScenario) {
                if (!isset($categoryAndScenario['Scenario']) || empty($categoryAndScenario['Scenario'])) {
                    continue;
                }
                ?>
                
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $categoryAndScenario['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id'], 'checked' => $scenario['selected']));
                                            if ($scenario['primary_id'] != 0) {
                                                echo $this->Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['primary_id']));
                                            }

                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                
                            [6] => 
                    
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $categoryAndScenario['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " selected";
                            ?>
                        
                    
                    


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id'], 'checked' => $scenario['selected']));
                                            if ($scenario['primary_id'] != 0) {
                                                echo $this->Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['primary_id']));
                                            }

                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                
                            [7] => 
                
                
                    

                        
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $categoryAndScenario['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 

                        
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " selected";
                            ?>
                        
                    
                            [8] => 
                            Html->tag('span', 0, array('class' => 'selectedScenarios selectedScenarios' . $categoryAndScenario['Category']['id']));

                            echo " of ";

                            echo $this->Html->tag('span', count($categoryAndScenario['Scenario']), array('class' => 'totalScenarios totalScenarios' . $categoryAndScenario['Category']['id']));

                            echo " selected";
                            ?>
                        
                            [9] => 


                        
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        

                         $scenario) {
                                    ?>
                                    
                                        
                                            Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id'], 'checked' => $scenario['selected']));
                                            if ($scenario['primary_id'] != 0) {
                                                echo $this->Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['primary_id']));
                                            }

                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                                    
                                    
                            [10] => 
        
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
    
                            [11] => 
            Form->hidden('RpaAssessment.id', array('value' => $rpaAssessmentId));

            echo $this->Form->hidden('RpaAssessment.on_which_step', array('value' => '1', 'id' => 'on_which_step'));

            echo $this->Form->hidden('Save.which_button', array('value' => '0', 'id' => 'which_button'));

            echo $this->Form->submit('Save and Exit', array('class' => 'btn btn-large whichButtonClicked', 'div' => false, 'data-name' => '1'));

            echo $this->Form->submit('Next', array('class' => 'btn btn-large btnBlack noSpaceRight whichButtonClicked nextBtn', 'div' => false, 'data-name' => '2'));
            ?>
        
                            [12] => 
        Html->image('ajax-loader_product.gif');?>
    
                        )

                    [span] => Array
                        (
                            [0] => select behaviours
                            [1] => Selectrole scenarios
                            [2] => Set response tagsto the scenarios
                            [3] => 
                
                    
                            [4] => 
                            
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                        
                            [5] => Select All
                        )

                    [labels] => Array
                        (
                            [0] => 
                            Form->hidden('RpaBehaviour.' . $keyBehaviours . '.id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id']));
                            echo $this->Form->checkbox('RpaBehaviour.' . $keyBehaviours . '.is_critical', array('checked' => $categoryAndScenario['RpaBehaviour']['is_critical']));
                            ?>
                              Critical Behaviour 
                            [1] => 
                                Form->input('Dummy.select_all', array('type' => 'checkbox', 'class' => 'selectAll', 'id' => $categoryAndScenario['Category']['id'], 'hiddenField' => false, 'div' => false, 'label' => false,));
                                ?>


                                Select All 
                            [2] => 
                                            Form->hidden('RpaScenario.' . $count . '.rpa_behaviour_id', array('value' => $categoryAndScenario['RpaBehaviour']['rpa_behaviour_id'],));

                                            echo $this->Form->checkbox('RpaScenario.' . $count . '.scenario_id', array('value' => $scenario['id'], 'class' => 'scenarioCheckboxes scenarioCheckbox' . $categoryAndScenario['Category']['id'], 'data-id' => $categoryAndScenario['Category']['id'], 'checked' => $scenario['selected']));
                                            if ($scenario['primary_id'] != 0) {
                                                echo $this->Form->hidden('RpaScenario.' . $count . '.id', array('value' => $scenario['primary_id']));
                                            }

                                            echo $this->Html->tag('span', $scenario['title']);

                                            ?>
                                        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/RpaAssessments] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            Html->link($rpaAssessment['JobRole']['name'], array('controller' => 'job_roles', 'action' => 'view', $rpaAssessment['JobRole']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Rpa Assessment'), array('action' => 'edit', $rpaAssessment['RpaAssessment']['id'])); ?> 
        Form->postLink(__('Delete Rpa Assessment'), array('action' => 'delete', $rpaAssessment['RpaAssessment']['id']), null, __('Are you sure you want to delete # %s?', $rpaAssessment['RpaAssessment']['id'])); ?> 
        Html->link(__('List Rpa Assessments'), array('action' => 'index')); ?> 
        Html->link(__('New Rpa Assessment'), array('action' => 'add')); ?> 
        Html->link(__('List Job Roles'), array('controller' => 'job_roles', 'action' => 'index')); ?> 
        Html->link(__('New Job Role'), array('controller' => 'job_roles', 'action' => 'add')); ?> 
        Html->link(__('List Rpa Behaviours'), array('controller' => 'rpa_behaviours', 'action' => 'index')); ?> 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
        
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'rpa_behaviours', 'action' => 'view', $rpaBehaviour['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'rpa_behaviours', 'action' => 'edit', $rpaBehaviour['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'rpa_behaviours', 'action' => 'delete', $rpaBehaviour['id']), null, __('Are you sure you want to delete # %s?', $rpaBehaviour['id'])); ?>
                
            
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Rpa Behaviour'), array('controller' => 'rpa_behaviours', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/Users] => Array
        (
            [edit.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter a first name
                            [1] => Please enter a last name
                            [2] => Should be a valid name
                            [3] => Should be a valid name
                        )

                    [title] => Array
                        (
                            [0] => Back
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
             Edit User Details

        
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false, 'id' => 'editUser'));
            ?>
        
        
    

                            [1] => 
        
             Edit User Details

        
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false, 'id' => 'editUser'));
            ?>
        
        
    
                            [2] => 
             Edit User Details

        
                            [3] => 

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false, 'id' => 'editUser'));
            ?>
        
                            [4] => 
                            [5] => 
    Form->create('User', array('type' => 'file', 'url' => array('plugin' => 'job_roles', 'controller' => 'users', 'action' => 'edit'), 'class' => 'form-horizontal', 'id' => 'editUser'));
    /*when there is role 5 i.e key contact  then retrieve  data from key contact else show from profile */
    $jobTitle = '';
    $employeeId = '';
    $reportingManger = '';
    $profileId = '';
    if (!empty($userProfile)) {
        /*if user is keyContact*/
        if ($isKeyContact) {

            $jobTitle = $userProfile['KeyContact']['job_title'];
        } else {
            /*if user is normal user*/
            $jobTitle = $userProfile['Profile']['job_title'];
            $employeeId = $userProfile['Profile']['employee_id'];
            $reportingManger = $userProfile['Manager']['user_title'];
            $profileId = $userProfile['Profile']['id'];
        }
    }
    ?>
    
        Profile Image

        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
    
    
        Change Image

        
            Form->hidden('Profile.id', array('value' => $profileId));

            echo $this->Form->hidden('dummy.image', array('value' => $userProfile['User']['image']));

            echo $this->Form->file('User.image', array('label' => false, 'id' => 'image'));
            ?>
            
                (Please upload an image file in png/jpeg/jpg format)
            

        

    
    
        First Name

        
            Form->input('User.first_name', array('label' => false, 'div' => false, 'type' => 'text', 'value' => $userProfile['User']['first_name']));
            ?>
        
    
    
        Last Name

        
            Form->input('User.last_name', array('label' => false, 'type' => 'text', 'div' => false, 'value' => $userProfile['User']['last_name']));
            ?>
        
    
    
        Employee ID

        
            
    
    
        Employee Email ID

        
            
    

    
        Job Title

        
            
    

    
        Reporting Manager

        
            
    
    
        

            Form->submit(__('Submit'), array('class' => 'btn btnBlack', 'div' => false));
            ?>
        
    
    Form->end();
    ?>

                            [6] => 
        Profile Image

        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
    
                            [7] => 
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
                            [8] => 
        Change Image

        
            Form->hidden('Profile.id', array('value' => $profileId));

            echo $this->Form->hidden('dummy.image', array('value' => $userProfile['User']['image']));

            echo $this->Form->file('User.image', array('label' => false, 'id' => 'image'));
            ?>
            
                (Please upload an image file in png/jpeg/jpg format)
            

        

    
                            [9] => 
            Form->hidden('Profile.id', array('value' => $profileId));

            echo $this->Form->hidden('dummy.image', array('value' => $userProfile['User']['image']));

            echo $this->Form->file('User.image', array('label' => false, 'id' => 'image'));
            ?>
            
                (Please upload an image file in png/jpeg/jpg format)
            

        
                            [10] => 
                (Please upload an image file in png/jpeg/jpg format)
            
                            [11] => 
        First Name

        
            Form->input('User.first_name', array('label' => false, 'div' => false, 'type' => 'text', 'value' => $userProfile['User']['first_name']));
            ?>
        
    
                            [12] => 
            Form->input('User.first_name', array('label' => false, 'div' => false, 'type' => 'text', 'value' => $userProfile['User']['first_name']));
            ?>
        
                            [13] => 
        Last Name

        
            Form->input('User.last_name', array('label' => false, 'type' => 'text', 'div' => false, 'value' => $userProfile['User']['last_name']));
            ?>
        
    
                            [14] => 
            Form->input('User.last_name', array('label' => false, 'type' => 'text', 'div' => false, 'value' => $userProfile['User']['last_name']));
            ?>
        
                            [15] => 
        Employee ID

        
            
    
                            [16] => 
            
                            [17] => 
        Employee Email ID

        
            
    
                            [18] => 
            
                            [19] => 
        Job Title

        
            
    
                            [20] => 
            
                            [21] => 
        Reporting Manager

        
            
    
                            [22] => 
            
                            [23] => 
        

            Form->submit(__('Submit'), array('class' => 'btn btnBlack', 'div' => false));
            ?>
        
    
                            [24] => 

            Form->submit(__('Submit'), array('class' => 'btn btnBlack', 'div' => false));
            ?>
        
                            [25] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [labels] => Array
                        (
                            [0] => Profile Image
                            [1] => Change Image
                            [2] => First Name
                            [3] => Last Name
                            [4] => Employee ID
                            [5] => Employee Email ID
                            [6] => Job Title
                            [7] => Reporting Manager
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/JobRoles/View/Users] => Array
        (
            [view.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/default-pic.png');
            }
            ?>
        
        
            Welcome,
            Html->tag('span', $this->Text->truncate($userProfile['User']['first_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            echo $this->Html->tag('span', $this->Text->truncate($userProfile['User']['last_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            $jobTitle = '';
            $employeeId = '';
            $reportingManger = '';
            if (!empty($userProfile)) {
                /*if user is keyContact*/
                if ($isKeyContact) {

                    $jobTitle = $userProfile['KeyContact']['job_title'];
                } else {
                    /*if user is normal user*/
                    $jobTitle = $userProfile['Profile']['job_title'];
                    $employeeId = $userProfile['Profile']['employee_id'];
                    $reportingManger = $userProfile['Manager']['user_title'];
                }
            }

            echo $this->Html->tag('p', $jobTitle);
            ?>

        

        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', '', array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        

    
    
        
            
                
                    More Details
                

            
            
                Hierarchy
                

                        
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
                

            
            
                User Details
                
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Employee Id :

                                
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Reporting Manager :

                                
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                    
                

            
        

        
    

                            [1] => 
        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/default-pic.png');
            }
            ?>
        
        
            Welcome,
            Html->tag('span', $this->Text->truncate($userProfile['User']['first_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            echo $this->Html->tag('span', $this->Text->truncate($userProfile['User']['last_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            $jobTitle = '';
            $employeeId = '';
            $reportingManger = '';
            if (!empty($userProfile)) {
                /*if user is keyContact*/
                if ($isKeyContact) {

                    $jobTitle = $userProfile['KeyContact']['job_title'];
                } else {
                    /*if user is normal user*/
                    $jobTitle = $userProfile['Profile']['job_title'];
                    $employeeId = $userProfile['Profile']['employee_id'];
                    $reportingManger = $userProfile['Manager']['user_title'];
                }
            }

            echo $this->Html->tag('p', $jobTitle);
            ?>

        

        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', '', array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
        

    
                            [2] => 
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/default-pic.png');
            }
            ?>
        
                            [3] => 
            Welcome,
            Html->tag('span', $this->Text->truncate($userProfile['User']['first_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            echo $this->Html->tag('span', $this->Text->truncate($userProfile['User']['last_name'], 20, array('ending' => '...', 'exact' => true)), array('class' => "nameOfUser"));
            $jobTitle = '';
            $employeeId = '';
            $reportingManger = '';
            if (!empty($userProfile)) {
                /*if user is keyContact*/
                if ($isKeyContact) {

                    $jobTitle = $userProfile['KeyContact']['job_title'];
                } else {
                    /*if user is normal user*/
                    $jobTitle = $userProfile['Profile']['job_title'];
                    $employeeId = $userProfile['Profile']['employee_id'];
                    $reportingManger = $userProfile['Manager']['user_title'];
                }
            }

            echo $this->Html->tag('p', $jobTitle);
            ?>

        
                            [4] => 

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', '', array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>

        
                            [5] => 
                            [6] => 
        
            
                
                    More Details
                

            
            
                Hierarchy
                

                        
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
                

            
            
                User Details
                
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Employee Id :

                                
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Reporting Manager :

                                
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                    
                

            
        

        
    
                            [7] => 
            
                
                    More Details
                

            
            
                Hierarchy
                

                        
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
                

            
            
                User Details
                
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Employee Id :

                                
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Reporting Manager :

                                
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                    
                

            
        
                            [8] => 
                
                    More Details
                

            
                            [9] => 
                    More Details
                
                            [10] => 
                Hierarchy
                

                        
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
                

            
                            [11] => 
                                
                                    

                                
                                    
                                    
                                
                            
                            [12] => 
                                    
                                    
                                
                            [13] => 
                User Details
                
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Employee Id :

                                
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Reporting Manager :

                                
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                    
                

            
                            [14] => 
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [15] => 
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            [16] => 
                                Employee Id :

                                
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [17] => 
                                    Html->tag('span', $employeeId, array('class' => "darkTextReg"));
                                    ?>
                                
                            [18] => 
                                Reporting Manager :

                                
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [19] => 
                                    Html->tag('span', $reportingManger, array('class' => "darkTextReg"));
                                    ?>
                                
                            [20] => 
                        )

                    [span] => Array
                        (
                            [0] => Welcome,
                            [1] => 
                                    
                        )

                    [labels] => Array
                        (
                            [0] => 
                                    
                            [1] => Email Id :
                            [2] => Employee Id :
                            [3] => Reporting Manager :
                        )

                )

        )

)
Array
(
)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Organisations/View/ProductBehaviorParameters] => Array
        (
            [add.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Setup Cultural Fit Assessment Parameters
                        )

                    [div] => Array
                        (
                            [0] => 
    Setup Cultural Fit Assessment Parameters

    
    
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
    
    Form->create('ProductBehaviorParameter');?>
    
        
            
                Select max. no. of questions for each Cultural Theme
                 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions'));

                echo $this->Form->hidden('ProductBehaviorParameter.organisation_id', array('value' => $organisationId));
                echo $this->Form->hidden('ProductBehaviorParameter.product_id', array('value' => $productId));
                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                        array('value'=> 6));
                $options = array('4' => 4, '5' => 5, '6' => 6);
                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
    Form->end();?>

                            [1] => 
                            [2] => 
        1 SelectCultural Themes
            2 Setparameters
            3 select Questions& Set Passing Score
        
                            [3] => 
                            [4] => 
        
            
                Select max. no. of questions for each Cultural Theme
                 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions'));

                echo $this->Form->hidden('ProductBehaviorParameter.organisation_id', array('value' => $organisationId));
                echo $this->Form->hidden('ProductBehaviorParameter.product_id', array('value' => $productId));
                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                        array('value'=> 6));
                $options = array('4' => 4, '5' => 5, '6' => 6);
                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [5] => 
            
                Select max. no. of questions for each Cultural Theme
                 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions'));

                echo $this->Form->hidden('ProductBehaviorParameter.organisation_id', array('value' => $organisationId));
                echo $this->Form->hidden('ProductBehaviorParameter.product_id', array('value' => $productId));
                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                        array('value'=> 6));
                $options = array('4' => 4, '5' => 5, '6' => 6);
                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
        
                            [6] => 
                Select max. no. of questions for each Cultural Theme
                 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions'));

                echo $this->Form->hidden('ProductBehaviorParameter.organisation_id', array('value' => $organisationId));
                echo $this->Form->hidden('ProductBehaviorParameter.product_id', array('value' => $productId));
                ?>
            
                            [7] => 
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                        array('value'=> 6));
                $options = array('4' => 4, '5' => 5, '6' => 6);
                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses'));
                ?>
            
                            [8] => 
            Responses
                    User Alias
                Crt->motivationalResponses(6);
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name'));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                        )

                    [span] => Array
                        (
                            [0] => SelectCultural Themes
                            [1] => Setparameters
                            [2] => select Questions& Set Passing Score
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Organisations/View/ProductBehaviorParameters] => Array
        (
            [edit.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                    [h1] => Array
                        (
                            [0] => Edit Cultural Fit Assessment Parameters
                        )

                    [div] => Array
                        (
                            [0] => 
    Edit Cultural Fit Assessment Parameters

    

    Form->create('ProductBehaviorParameter', array('url' => array('plugin' => 'organisations', 'controller' => 'product_behavior_parameters', 'action' => 'edit',), 'class' => 'topSpace'));
    ?>
    
        
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('ProductBehaviorParameter.id', array('value' => $this->request->data('ProductBehaviorParameter.id')));
                $options = '';
                if ($maxQuestionCount > 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_questions')));


                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_questions', array('value' => $this->request->data('ProductBehaviorParameter.no_of_questions')));

                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_responses', array('value' => $this->request->data('ProductBehaviorParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                    array('value'=> 6));

                $options = array('4' => 4, '5' => 5, '6' => 6);

                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_responses')));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('ProductBehaviorParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.id', array('value' => $productBehaviourResponsesIds[$key]));

                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
    Form->end();?>

                            [1] => 
                            [2] => 
        
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('ProductBehaviorParameter.id', array('value' => $this->request->data('ProductBehaviorParameter.id')));
                $options = '';
                if ($maxQuestionCount > 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_questions')));


                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_questions', array('value' => $this->request->data('ProductBehaviorParameter.no_of_questions')));

                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_responses', array('value' => $this->request->data('ProductBehaviorParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                    array('value'=> 6));

                $options = array('4' => 4, '5' => 5, '6' => 6);

                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_responses')));
                ?>
            
        
        
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('ProductBehaviorParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.id', array('value' => $productBehaviourResponsesIds[$key]));

                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
    
                            [3] => 
            
                Select max. no. of questions for each Cultural Theme
                Form->hidden('ProductBehaviorParameter.id', array('value' => $this->request->data('ProductBehaviorParameter.id')));
                $options = '';
                if ($maxQuestionCount > 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_questions')));


                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_questions', array('value' => $this->request->data('ProductBehaviorParameter.no_of_questions')));

                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_responses', array('value' => $this->request->data('ProductBehaviorParameter.no_of_responses')));

                ?>
            
            
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                    array('value'=> 6));

                $options = array('4' => 4, '5' => 5, '6' => 6);

                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_responses')));
                ?>
            
        
                            [4] => 
                Select max. no. of questions for each Cultural Theme
                Form->hidden('ProductBehaviorParameter.id', array('value' => $this->request->data('ProductBehaviorParameter.id')));
                $options = '';
                if ($maxQuestionCount > 0) {
                    for ($i = 4; $i Form->input('ProductBehaviorParameter.no_of_questions', array('label' => false, 'options' => $options, 'id' => 'totalQuestions', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_questions')));


                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_questions', array('value' => $this->request->data('ProductBehaviorParameter.no_of_questions')));

                echo $this->Form->hidden('ProductBehaviorParameterPrev.no_of_responses', array('value' => $this->request->data('ProductBehaviorParameter.no_of_responses')));

                ?>
            
                            [5] => 
                Select no. of responses for each question
                Form->hidden('ProductBehaviorParameter.no_of_responses',
                //                    array('value'=> 6));

                $options = array('4' => 4, '5' => 5, '6' => 6);

                echo $this->Form->input('ProductBehaviorParameter.no_of_responses', array('label' => false, 'options' => $options, 'default' => '6', 'id' => 'totalResponses', 'selected' => $this->request->data('ProductBehaviorParameter.no_of_responses')));
                ?>
            
                            [6] => 
            Responses
                    User Alias
                Crt->motivationalResponses($this->request->data('ProductBehaviorParameter.no_of_responses'));
                if (!empty($responseArray)):
                    foreach ($responseArray as $key => $response):
                        ?>
                    
                            Form->hidden('ProductBehaviorResponse.' . $key . '.id', array('value' => $productBehaviourResponsesIds[$key]));

                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.title', array('value' => $response));
                            echo $this->Form->hidden('ProductBehaviorResponse.' . $key . '.response_number', array('value' => $key));
                            ?>
                        
                        
                            Form->input('ProductBehaviorResponse.' . $key . '.user_alias', array('label' => false, 'placeholder' => 'Alias Name', 'value' => $alias));
                            ?>
                        
                    
                    
                        Form->submit('Next', array('class' => 'btn btnBlack pull-left noSpace saveButton', 'div' => false, 'id' => 'paramSubmit',));
                        ?>
                    
                
                        Html->image('ajax-loader_product.gif');?>
                    
                
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Organisations/View/ProductBehaviorParameters] => Array
        (
            [get_question_responses.ctp] => Array
                (
                    [place_holders] => Array
                        (
                            [0] => Alias Name
                        )

                    [submit] => Array
                        (
                            [0] => Next
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Organisations/View/ProductBehaviorParameters] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('product_id'); ?>
            Paginator->sort('organisation_id'); ?>
            Paginator->sort('no_of_questions'); ?>
            Paginator->sort('no_of_responses'); ?>
            Paginator->sort('is_active'); ?>
            Paginator->sort('is_deleted'); ?>
            Paginator->sort('modified'); ?>
            Paginator->sort('created'); ?>
            
         
                
                    Html->link($productBehaviorParameter['Product']['name'], array('controller' => 'products', 'action' => 'view', $productBehaviorParameter['Product']['id'])); ?>
                
                
                    Html->link($productBehaviorParameter['Organisation']['name'], array('controller' => 'organisations', 'action' => 'view', $productBehaviorParameter['Organisation']['id'])); ?>
                
                
                     
                
                     
                 
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $productBehaviorParameter['ProductBehaviorParameter']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $productBehaviorParameter['ProductBehaviorParameter']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $productBehaviorParameter['ProductBehaviorParameter']['id']), null, __('Are you sure you want to delete # %s?', $productBehaviorParameter['ProductBehaviorParameter']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New Product Behavior Parameter'), array('action' => 'add')); ?>
        Html->link(__('List Products'), array('controller' => 'products', 'action' => 'index')); ?> 
        Html->link(__('New Product'), array('controller' => 'products', 'action' => 'add')); ?> 
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
        Html->link(__('List Product Behavior Responses'), array('controller' => 'product_behavior_responses', 'action' => 'index')); ?> 
        Html->link(__('New Product Behavior Response'), array('controller' => 'product_behavior_responses', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Organisations/View/ProductBehaviorParameters] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            Html->link($productBehaviorParameter['Product']['name'], array('controller' => 'products', 'action' => 'view', $productBehaviorParameter['Product']['id'])); ?>
             
        
        
        
            Html->link($productBehaviorParameter['Organisation']['name'], array('controller' => 'organisations', 'action' => 'view', $productBehaviorParameter['Organisation']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit Product Behavior Parameter'), array('action' => 'edit', $productBehaviorParameter['ProductBehaviorParameter']['id'])); ?> 
        Form->postLink(__('Delete Product Behavior Parameter'), array('action' => 'delete', $productBehaviorParameter['ProductBehaviorParameter']['id']), null, __('Are you sure you want to delete # %s?', $productBehaviorParameter['ProductBehaviorParameter']['id'])); ?> 
        Html->link(__('List Product Behavior Parameters'), array('action' => 'index')); ?> 
        Html->link(__('New Product Behavior Parameter'), array('action' => 'add')); ?> 
        Html->link(__('List Products'), array('controller' => 'products', 'action' => 'index')); ?> 
        Html->link(__('New Product'), array('controller' => 'products', 'action' => 'add')); ?> 
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
        Html->link(__('List Product Behavior Responses'), array('controller' => 'product_behavior_responses', 'action' => 'index')); ?> 
        Html->link(__('New Product Behavior Response'), array('controller' => 'product_behavior_responses', 'action' => 'add')); ?> 
    
                            [2] => 
    
    
            
            
            
            
            
            
            
            
            
        
                
                
                
                
                
                
                
                
                
                    Html->link(__('View'), array('controller' => 'product_behavior_responses', 'action' => 'view', $productBehaviorResponse['id'])); ?>
                    Html->link(__('Edit'), array('controller' => 'product_behavior_responses', 'action' => 'edit', $productBehaviorResponse['id'])); ?>
                    Form->postLink(__('Delete'), array('controller' => 'product_behavior_responses', 'action' => 'delete', $productBehaviorResponse['id']), null, __('Are you sure you want to delete # %s?', $productBehaviorResponse['id'])); ?>
                
            
        Html->link(__('New Product Behavior Response'), array('controller' => 'product_behavior_responses', 'action' => 'add')); ?> 
        

                            [3] => 
        Html->link(__('New Product Behavior Response'), array('controller' => 'product_behavior_responses', 'action' => 'add')); ?> 
        
                        )

                )

        )

)
Array
(
)
Array
(
)
Array
(
)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [button_settings.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Apply
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Header

                
                    
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>

        
    

                            [1] => 
        
            Parameters & settings
        
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Header

                
                    
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>

        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Header

                
                    
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>

        
                            [6] => 
                Header

                
                    
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                
            
                            [7] => 
                    
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                
                            [8] => 
                        
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                        
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                    
                            [9] => 
                            Button Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                        
                            [10] => 
                                
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            
                            [11] => 
                                    
                                    Form->hidden("theme.button_color.color", array('value' => $this->request->data['theme']['button_color']['color']));
                                    ?>
                                
                            [12] => 
                            [13] => 
                            Text Color:

                            
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                        
                            [14] => 
                                
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            
                            [15] => 
                                    
                                    Form->hidden("theme.button_color.text", array('value' => $this->request->data['theme']['button_color']['text']));
                                    ?>
                                
                            [16] => 
                            [17] => 
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
                        )

                    [labels] => Array
                        (
                            [0] => Button Color:
                            [1] => Text Color:
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [edit.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Apply
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                
                    Header

                    
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                
                
                    Footer

                    
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    

                            [1] => 
        
            Parameters & settings
        
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                
                    Header

                    
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                
                
                    Footer

                    
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                
                    Header

                    
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                
                
                    Footer

                    
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
                            [6] => 
                
                    Header

                    
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                
                
                    Footer

                    
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                
            
                            [7] => 
                    Header

                    
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                
                            [8] => 
                        
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                        
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                    
                            [9] => 
                            Header Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                        
                            [10] => 
                                
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            
                            [11] => 
                                    
                                    Form->hidden("theme.header_color_text.header_color", array('value' => $this->request->data['theme']['header_color_text']['header_color'], 'id' => 'header_color'));
                                    ?>
                                
                            [12] => 
                            [13] => 
                            Tagline Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                        
                            [14] => 
                                
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            
                            [15] => 
                                    
                                    Form->hidden("theme.header_color_text.tag_line_color", array('value' => $this->request->data['theme']['header_color_text']['tag_line_color'], 'id' => 'tag_line_color'));
                                    ?>
                                
                            [16] => 
                            [17] => 
                        Tagline Text:

                        
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                    
                            [18] => 
                            Form->input('theme.header_color_text.tag_line_text', array('label' => false, 'rows' => false, 'id' => 'tagLineBox', 'type' => 'textarea'));
                            ?>
                            Maximum 140 characters
                        
                            [19] => Maximum 140 characters
                            [20] => 
                    Footer

                    
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                    
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                
                            [21] => 
                        
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                        
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                    
                            [22] => 
                            Footer Color:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                        
                            [23] => 
                                
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            
                            [24] => 
                                    
                                    Form->hidden("theme.header_color_text.footer_color", array('value' => $this->request->data['theme']['header_color_text']['footer_color'], 'id' => 'footer_color'));
                                    ?>
                                
                            [25] => 
                            [26] => 
                            Text Colour:

                            
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                        
                            [27] => 
                                
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            
                            [28] => 
                                    
                                    Form->hidden("theme.header_color_text.text_color", array('value' => $this->request->data['theme']['header_color_text']['text_color'], 'id' => 'text_color'));
                                    ?>
                                
                            [29] => 
                            [30] => 
                        Footer Text:

                        
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                    
                            [31] => 
                            Form->input('theme.header_color_text.footer_text', array('label' => false, 'rows' => false, 'id' => 'prevFooter', 'type' => 'textarea'));
                            ?>

                            Maximum 140 characters
                        
                            [32] => Maximum 140 characters
                            [33] => 
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
                        )

                    [labels] => Array
                        (
                            [0] => Header Color:
                            [1] => Tagline Color:
                            [2] => Tagline Text:
                            [3] => Footer Color:
                            [4] => Text Colour:
                            [5] => Footer Text:
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [font_settings.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Apply
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            
                Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
                Header

                
                    
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    

                            [1] => 
        
            Parameters & settings
        
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            
                Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
                Header

                
                    
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            
                Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
                Header

                
                    
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
                            [6] => 
                Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
                Header

                
                    
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                
            
                            [7] => 
                    
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                
                            [8] => 
                        
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                    
                            [9] => 
                            Font:

                            
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                        
                            [10] => 
                                
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            
                            [11] => 
                                    
                                        request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                                        $text = $this->request->data['theme']['font']['style'];
                                        $times = strtolower($this->request->data['theme']['font']['style']);
                                        if ($times == 'times new roman') {
                                            $class = 'times';
                                        } else {
                                            $class = strtolower($this->request->data['theme']['font']['style']);
                                        }
                                    } else {
                                        $text = 'Helvaitca';
                                        $class = 'helvaitca';
                                    }?>
                                        
                                         
                                    
                                            Html->link('Helvaitca', "#", array('data-id' => 'Helvaitca'));
                                            ?>
                                        
                                        
                                            Html->link('Arial', "#", array('data-id' => 'Arial'));
                                            ?>
                                        
                                        
                                            Html->link('Times new roman', "#", array('data-id' => 'Times new roman'));
                                            ?>
                                        
                                        
                                            Html->link('Georgia', "#", array('data-id' => 'Georgia',));

                                            echo $this->Form->hidden("theme.font.style", array('id' => 'font_style', 'value' => 'Helvaitca'));
                                            ?>
                                        
                                    
                            [12] => 
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
                        )

                    [span] => Array
                        (
                            [0] => 
                            [1] => 
                        )

                    [labels] => Array
                        (
                            [0] => Font:
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [parameters_n_setting_access_option.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Apply
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Accessibility Options

                
                    
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                    
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    

                            [1] => 
        
            Parameters & settings
        
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Accessibility Options

                
                    
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                    
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            Form->create('theme', array('class' => ' form-horizontal viewpage')); ?>
            
                Accessibility Options

                
                    
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                    
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                
            
            
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();
            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
                            [6] => 
                Accessibility Options

                
                    
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                    
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                
            
                            [7] => 
                    
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                    
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                    
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                
                            [8] => 
                        Enable Colour combinations for text container?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        

                    
                            [9] => 
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_container', 'id' => 'text_container', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_container_color', $options, $attributes);
                            ?>
                        
                            [10] => 
                        Enable âHaving difficulty in reading textâ button?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                    
                            [11] => 
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left text_reading_button', 'id' => 'text_reading_button', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.text_reading_button', $options, $attributes);
                            ?>
                        
                            [12] => 
                        Enable Screen reader?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                    
                            [13] => 
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left screen_reader', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.screen_reader', $options, $attributes);
                            ?>
                        
                            [14] => 
                        Enable horizontal line in the header?

                        
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                    
                            [15] => 
                             'Yes', '0' => 'No');
                            $attributes = array('legend' => false, 'class' => 'pull-left horizontal_line', 'id' => 'horizontal_line', 'default' => 1);

                            echo $this->Form->radio('accessibility_options.horizontal_line', $options, $attributes);
                            ?>
                        
                            [16] => 
                Form->submit(__('Apply', true), array('class' => 'btn lightBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
                        )

                    [labels] => Array
                        (
                            [0] => Enable Colour combinations for text container?
                            [1] => Enable âHaving difficulty in reading textâ button?
                            [2] => Enable Screen reader?
                            [3] => Enable horizontal line in the header?
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [parameters_n_setting_logo_upload.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Apply
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage', 'type' => 'file')); ?>
            
                
                    Organisation Logo

                    

                    Or drag and drop the image here.Image size: 193 x 77 

                    
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                
                
                    Container Icon

                    

                    Or drag and drop the image here.Image size: 52 x 90

                    
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                
                
                    Favicon

                    

                    Or drag and drop the image here.Image size: 16 x 16 

                    
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                
            

            Form->hidden('theme.logo_icon_favicon.organisation_logo', array('label' => false, 'id' => 'organisationLogoName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.container_icon', array('label' => false, 'id' => 'containerIconName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.fav_icon', array('label' => false, 'id' => 'favIconName'));
            ?>
            
                Form->submit(__('Apply', true), array('class' => 'btn darkBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();

            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    

                            [1] => 
        
            Parameters & settings
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            Form->create('theme', array('class' => ' form-horizontal viewpage', 'type' => 'file')); ?>
            
                
                    Organisation Logo

                    

                    Or drag and drop the image here.Image size: 193 x 77 

                    
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                
                
                    Container Icon

                    

                    Or drag and drop the image here.Image size: 52 x 90

                    
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                
                
                    Favicon

                    

                    Or drag and drop the image here.Image size: 16 x 16 

                    
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                
            

            Form->hidden('theme.logo_icon_favicon.organisation_logo', array('label' => false, 'id' => 'organisationLogoName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.container_icon', array('label' => false, 'id' => 'containerIconName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.fav_icon', array('label' => false, 'id' => 'favIconName'));
            ?>
            
                Form->submit(__('Apply', true), array('class' => 'btn darkBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();

            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            Form->create('theme', array('class' => ' form-horizontal viewpage', 'type' => 'file')); ?>
            
                
                    Organisation Logo

                    

                    Or drag and drop the image here.Image size: 193 x 77 

                    
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                
                
                    Container Icon

                    

                    Or drag and drop the image here.Image size: 52 x 90

                    
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                
                
                    Favicon

                    

                    Or drag and drop the image here.Image size: 16 x 16 

                    
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                
            

            Form->hidden('theme.logo_icon_favicon.organisation_logo', array('label' => false, 'id' => 'organisationLogoName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.container_icon', array('label' => false, 'id' => 'containerIconName'));
            echo $this->Form->hidden('theme.logo_icon_favicon.fav_icon', array('label' => false, 'id' => 'favIconName'));
            ?>
            
                Form->submit(__('Apply', true), array('class' => 'btn darkBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
            Form->end();

            if (!empty($this->request->data['theme']['font']['style']) && isset($this->request->data['theme']['font']['style'])) {
                $times = strtolower($this->request->data['theme']['font']['style']);
                if ($times == 'times new roman') {
                    $class = 'times';
                } else {
                    $class = strtolower($this->request->data['theme']['font']['style']);
                }
            } else {
                $class = 'helvaitca';
            }
            echo $this->element('theme/preview', array('class' => $class));
            ?>
        
                            [6] => 
                
                    Organisation Logo

                    

                    Or drag and drop the image here.Image size: 193 x 77 

                    
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                
                
                    Container Icon

                    

                    Or drag and drop the image here.Image size: 52 x 90

                    
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                
                
                    Favicon

                    

                    Or drag and drop the image here.Image size: 16 x 16 

                    
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                
            
                            [7] => 
                    Organisation Logo

                    

                    Or drag and drop the image here.Image size: 193 x 77 

                    
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                
                            [8] => 
                            [9] => 
                        request->data['theme']['logo_icon_favicon']['organisation_logo'])) { ?>
                        request->data['theme']['logo_icon_favicon']['organisation_logo']; ?>
                        Uploaded
                        
                            [10] => 
                    Container Icon

                    

                    Or drag and drop the image here.Image size: 52 x 90

                    
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                
                            [11] => 
                            [12] => 
                        request->data['theme']['logo_icon_favicon']['container_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['container_icon']; ?>
                        Uploaded
                        
                            [13] => 
                    Favicon

                    

                    Or drag and drop the image here.Image size: 16 x 16 

                    
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                
                            [14] => 
                            [15] => 
                        request->data['theme']['logo_icon_favicon']['fav_icon'])) { ?>
                        request->data['theme']['logo_icon_favicon']['fav_icon']; ?>
                        Uploaded
                        
                            [16] => 
                Form->submit(__('Apply', true), array('class' => 'btn darkBtn', 'title' => 'Apply', 'div' => false, 'escape' => true,));?>
            
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductThemes] => Array
        (
            [save_assessment_image.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & settings
        
        
    
    
        
            element('product/left_side_bar'); ?>
        
        
            
            Or drag and drop the image here. Image size: 1600 x 810 

            
                
                        

                            

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        
                        
        
    

                            [1] => 
        
            Parameters & settings
        
        
    
                            [2] => 
            Parameters & settings
        
                            [3] => 
        
            element('product/left_side_bar'); ?>
        
        
            
            Or drag and drop the image here. Image size: 1600 x 810 

            
                
                        

                            

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        
                        
        
    
                            [4] => 
            element('product/left_side_bar'); ?>
        
                            [5] => 
            
            Or drag and drop the image here. Image size: 1600 x 810 

            
                
                        

                            

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        
                        
        
                            [6] => 
                            [7] => 
                
                        

                            

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        
                        
                            [8] => 
                        

                            

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        
                            [9] => 

                                Html->image($organisationPath . '/questions/148X50/' . $assessmentImage['AssessmentImage']['image']) ?>
                            
                        )

                    [span] => Array
                        (
                            [0] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductsUsers] => Array
        (
            [admins.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add Product Admins
                            [1] => Back
                            [2] => escape
                            [3] => View Profile
                        )

                    [div] => Array
                        (
                            [0] => 

    
        
            Product Admins
        
        Html->link(__($this->Html->tag('i', '', array('class' => 'plusiconWhite')) . 'Add Product Admins', true), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'assign', 'pa', $productId, $organisationId), array('title' => 'Add Product Admins', 'class' => 'btn btnThin', 'escape' => false));
    } ?>
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn noSpace', 'title' => 'Back', 'escape' => false));
            ?>
        
    

                            [1] => 
        
            Product Admins
        
        Html->link(__($this->Html->tag('i', '', array('class' => 'plusiconWhite')) . 'Add Product Admins', true), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'assign', 'pa', $productId, $organisationId), array('title' => 'Add Product Admins', 'class' => 'btn btnThin', 'escape' => false));
    } ?>
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn noSpace', 'title' => 'Back', 'escape' => false));
            ?>
        
    
                            [2] => 
            Product Admins
        
                            [3] => 

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'dashboard'), array('class' => 'backBtn noSpace', 'title' => 'Back', 'escape' => false));
            ?>
        
                            [4] => 
    log($productUsers);
        if (!empty($productUsers)) {
            foreach ($productUsers as $user) {
                ?>

                
                    
                        
                            Html->image('products/User_blank_img.jpg');
                            } else {
                                echo $this->Html->image('/img/profileImage/80X80/' . $user['User']['image']);
                            }
                            ?>
                        
                        
                            Employee Name:
                            
                        
                    
                    
                        Email Id: 
                    
                    
                        Job Title:
                         
                    
                    
                        Html->link(__($this->Html->tag('span ', '', array('class' => $class)) . '', true), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'status', $user['ProductsUser']['id'], $user['ProductsUser']['is_active']), array('title' => $message, 'escape' => false), 'Are you sure to ' . $alert . ' ' . $user['ProductsUser']['is_psa'] . $user['User']['first_name'] . " " . $user['User']['last_name'] . '?');?>

                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn  adminView'))), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'view_admin_profile', $user['User']['id']), array('title' => 'View Profile', 'escape' => false));
                        ?>

                    
                
                Product Admins not found
            
                            [5] => 
                        
                            Html->image('products/User_blank_img.jpg');
                            } else {
                                echo $this->Html->image('/img/profileImage/80X80/' . $user['User']['image']);
                            }
                            ?>
                        
                        
                            Employee Name:
                            
                        
                    
                            [6] => 
                            Html->image('products/User_blank_img.jpg');
                            } else {
                                echo $this->Html->image('/img/profileImage/80X80/' . $user['User']['image']);
                            }
                            ?>
                        
                            [7] => 
                            Employee Name:
                            
                        
                            [8] => 
                        Email Id: 
                    
                            [9] => 
                        Job Title:
                         
                    
                            [10] => 
                        Html->link(__($this->Html->tag('span ', '', array('class' => $class)) . '', true), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'status', $user['ProductsUser']['id'], $user['ProductsUser']['is_active']), array('title' => $message, 'escape' => false), 'Are you sure to ' . $alert . ' ' . $user['ProductsUser']['is_psa'] . $user['User']['first_name'] . " " . $user['User']['last_name'] . '?');?>

                        Html->link(__($this->Html->tag('span', '', array('class' => 'viewBtn  adminView'))), array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'view_admin_profile', $user['User']['id']), array('title' => 'View Profile', 'escape' => false));
                        ?>

                    
                            [11] => Product Admins not found
                        )

                    [span] => Array
                        (
                            [0] => Employee Name:
                            [1] => 
                            [2] => Email Id:
                            [3] => 
                            [4] => Job Title:
                            [5] =>  
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductsUsers] => Array
        (
            [assign_pa.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                            [1] => Done
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'admins'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
        ?>
    
    
    
        
            Add Product Admin

        

    

                            [1] => 
        Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'admins'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
        ?>
    
                            [2] => 
                            [3] => 
        
            Add Product Admin

        

    
                            [4] => 
            Add Product Admin

        
                            [5] => 
    
        
            Form->checkbox('Dummy.select_all', array('class' => 'selectAll',)) ?>  Select All
                
    
    Form->create('OrganisationsProduct', array('class' => ' form-horizontal viewpage')); ?>
    

         $userData): ?>

            
                
                 
                    Html->image('products/User_blank_img.jpg');
                    } else {
                        echo $this->Html->image('/img/profileImage/35X35/' . $userData['User']['image']);
                    }
                    ?>
                
            
                Text->truncate($userData['User']['user_title'], 15, array('ending' => '', 'exact' => true));?>
            
                    Form->checkbox('ProductsUser.' . $count . '.user_id', array('id' => $userData['User']['id'], 'value' => $userData['User']['id'], 'class' => 'userChk checkBox', //user class is used ajax call to save or remove the user,
                        'hiddenField' => false,));
                    $count++
                    ?>
                
            
            Form->hidden('organisation_id', array('label' => false, 'value' => $organisation['Organisation']['id']));
        echo $this->Form->hidden('product_id', array('label' => false, 'value' => $product['product_id']));
        ?>

    
    

        

            Form->submit(__('Done', true), array('class' => 'btn btnBlack done', 'title' => 'Done', 'div' => false, 'escape' => true, 'data-name' => '1', 'disabled' => true));?>
        

    
    Form->end();?>

                            [6] => 

         $userData): ?>

            
                
                 
                    Html->image('products/User_blank_img.jpg');
                    } else {
                        echo $this->Html->image('/img/profileImage/35X35/' . $userData['User']['image']);
                    }
                    ?>
                
            
                Text->truncate($userData['User']['user_title'], 15, array('ending' => '', 'exact' => true));?>
            
                    Form->checkbox('ProductsUser.' . $count . '.user_id', array('id' => $userData['User']['id'], 'value' => $userData['User']['id'], 'class' => 'userChk checkBox', //user class is used ajax call to save or remove the user,
                        'hiddenField' => false,));
                    $count++
                    ?>
                
            
            Form->hidden('organisation_id', array('label' => false, 'value' => $organisation['Organisation']['id']));
        echo $this->Form->hidden('product_id', array('label' => false, 'value' => $product['product_id']));
        ?>

    
                            [7] => 

        

            Form->submit(__('Done', true), array('class' => 'btn btnBlack done', 'title' => 'Done', 'div' => false, 'escape' => true, 'data-name' => '1', 'disabled' => true));?>
        

    
                            [8] => 

            Form->submit(__('Done', true), array('class' => 'btn btnBlack done', 'title' => 'Done', 'div' => false, 'escape' => true, 'data-name' => '1', 'disabled' => true));?>
        
                        )

                    [span] => Array
                        (
                            [0] => 
        
            Form->checkbox('Dummy.select_all', array('class' => 'selectAll',)) ?>  Select All
                
    
                            [1] => 
                Text->truncate($userData['User']['user_title'], 15, array('ending' => '', 'exact' => true));?>
            
                        )

                    [labels] => Array
                        (
                            [0] => 
            Form->checkbox('Dummy.select_all', array('class' => 'selectAll',)) ?>  Select All
                
                            [1] =>  
                    Html->image('products/User_blank_img.jpg');
                    } else {
                        echo $this->Html->image('/img/profileImage/35X35/' . $userData['User']['image']);
                    }
                    ?>
                
            
                Text->truncate($userData['User']['user_title'], 15, array('ending' => '', 'exact' => true));?>
            
                    Form->checkbox('ProductsUser.' . $count . '.user_id', array('id' => $userData['User']['id'], 'value' => $userData['User']['id'], 'class' => 'userChk checkBox', //user class is used ajax call to save or remove the user,
                        'hiddenField' => false,));
                    $count++
                    ?>
                
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductsUsers] => Array
        (
            [dashboard.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Add New
                            [1] => label
                        )

                    [place_holders] => Array
                        (
                            [0] => Search Job Role/CFA
                        )

                    [para_message] => Array
                        (
                            [0] => <p class="tipForJobRole">Type three letters to search</p>
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                Total Candidate- 
            
                Total Job Roles- 
            Total CFA- 
        
    

    Html->link(__($this->Html->tag('i', '', array('class' => 'addSmallIcon')) . 'Create Job Role', true), array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'add'), array('title' => 'Add New', 'class' => 'btn btnThin', 'escape' => false));

    ?>


                            [1] => 
        
            
                Total Candidate- 
            
                Total Job Roles- 
            Total CFA- 
        
    
                            [2] => 
            
                Total Candidate- 
            
                Total Job Roles- 
            Total CFA- 
        
                            [3] => 
                Total Candidate- 
                            [4] => 
                Total Job Roles- 
                            [5] => Total CFA- 
                            [6] => 
    
        
            Form->create('ProductsUser', array('url' => array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));

            echo $this->Form->input('title', array('label' => false, 'div' => false, 'id' => 'search_job_role', 'value' => '', 'type' => 'text', 'placeholder' => 'Search Job Role/CFA'));
            ?>
            Type three letters to search
            Form->hidden('jobRoleId', array('value' => isset($candidateDetails['id']) ? $candidateDetails['id'] : '', 'id' => 'jobRoleOrCfaId'));
            ?>

            Form->end(); ?>
        
    

    
        
            element('Products.dashboard/doughnut_line_graph', array('candidateDetails' => $candidateDetails, 'graphDetails' => $graphDetails));

            ?>
        
    

    
    element('dashboard/activities', array('activities' => $activities)); ?>


                            [7] => 
        
            Form->create('ProductsUser', array('url' => array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));

            echo $this->Form->input('title', array('label' => false, 'div' => false, 'id' => 'search_job_role', 'value' => '', 'type' => 'text', 'placeholder' => 'Search Job Role/CFA'));
            ?>
            Type three letters to search
            Form->hidden('jobRoleId', array('value' => isset($candidateDetails['id']) ? $candidateDetails['id'] : '', 'id' => 'jobRoleOrCfaId'));
            ?>

            Form->end(); ?>
        
    
                            [8] => 
            Form->create('ProductsUser', array('url' => array('plugin' => 'products', 'controller' => 'products_users', 'action' => 'search'), 'type' => 'get', 'class' => 'pull-left margin0'));

            echo $this->Form->input('title', array('label' => false, 'div' => false, 'id' => 'search_job_role', 'value' => '', 'type' => 'text', 'placeholder' => 'Search Job Role/CFA'));
            ?>
            Type three letters to search
            Form->hidden('jobRoleId', array('value' => isset($candidateDetails['id']) ? $candidateDetails['id'] : '', 'id' => 'jobRoleOrCfaId'));
            ?>

            Form->end(); ?>
        
                            [9] => 
        
            element('Products.dashboard/doughnut_line_graph', array('candidateDetails' => $candidateDetails, 'graphDetails' => $graphDetails));

            ?>
        
    
                            [10] => 
            element('Products.dashboard/doughnut_line_graph', array('candidateDetails' => $candidateDetails, 'graphDetails' => $graphDetails));

            ?>
        
                            [11] => 
    
                        )

                    [span] => Array
                        (
                            [0] => - 
                            [1] => - 
                            [2] => - 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/ProductsUsers] => Array
        (
            [view_admin_profile.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Back
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
        
            Welcome,
            Html->tag('span', $userProfile['User']['user_title'], array('class' => "nameOfUser"));
            echo $this->Html->tag('p', $userProfile['KeyContact']['job_title']);
            ?>
        
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products', 'action' => 'admins'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
        
    
    
        
            
                
                    More Details
                
            
            
                Hierarchy

                
                    
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
            
            
                User Details

                
                    
                            
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        

                    
            
        
        
    

                            [1] => 
        
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
        
            Welcome,
            Html->tag('span', $userProfile['User']['user_title'], array('class' => "nameOfUser"));
            echo $this->Html->tag('p', $userProfile['KeyContact']['job_title']);
            ?>
        
        

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products', 'action' => 'admins'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
        
    
                            [2] => 
            Html->image('/img/profileImage/80X80/' . $userProfile['User']['image']);
            } else {
                echo $this->Html->image('products/User_blank_img.jpg');
            }
            ?>
        
                            [3] => 
            Welcome,
            Html->tag('span', $userProfile['User']['user_title'], array('class' => "nameOfUser"));
            echo $this->Html->tag('p', $userProfile['KeyContact']['job_title']);
            ?>
        
                            [4] => 

            Html->link($this->Html->tag('i', '', array('class' => 'backBtnIcon')) . 'Back', array('plugin' => 'products', 'controller' => 'products', 'action' => 'admins'), array('class' => 'backBtn', 'title' => 'Back', 'escape' => false));
            ?>
        
                            [5] => 
                            [6] => 
        
            
                
                    More Details
                
            
            
                Hierarchy

                
                    
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
            
            
                User Details

                
                    
                            
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        

                    
            
        
        
    
                            [7] => 
            
                
                    More Details
                
            
            
                Hierarchy

                
                    
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
            
            
                User Details

                
                    
                            
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        

                    
            
        
                            [8] => 
                
                    More Details
                
            
                            [9] => 
                    More Details
                
                            [10] => 
                Hierarchy

                
                    
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
            
                            [11] => 
                    
                            
                                
                                    

                                
                                    
                                    
                                
                            
                        
                        
                            [12] => 
                                
                                    

                                
                                    
                                    
                                
                            
                            [13] => 
                                    
                                    
                                
                            [14] => 
                User Details

                
                    
                            
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        

                    
            
                            [15] => 
                    
                            
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        
                        
                            
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                        

                    
                            [16] => 
                                Employee Name :

                                
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [17] => 
                                    Html->tag('span', $userProfile['User']['user_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            [18] => 
                                Email Id :

                                
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [19] => 
                                    Html->tag('span', $userProfile['User']['username'], array('class' => "darkTextReg"));
                                    ?>
                                
                            [20] => 
                                Job Title :

                                
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            
                            [21] => 
                                    Html->tag('span', $userProfile['KeyContact']['job_title'], array('class' => "darkTextReg"));
                                    ?>
                                
                            [22] => 
                        )

                    [span] => Array
                        (
                            [0] => Welcome,
                            [1] => 
                                    
                        )

                    [labels] => Array
                        (
                            [0] => 
                                    
                            [1] => Employee Name :
                            [2] => Email Id :
                            [3] => Job Title :
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Products/View/Supports] => Array
        (
            [configurations.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter email
                            [1] => Please enter email
                            [2] => Please enter a valid email id
                            [3] => Please enter a valid email id
                        )

                    [submit] => Array
                        (
                            [0] => Apply the changes
                        )

                    [h2] => Array
                        (
                            [0] => Support
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Parameters & Setting
        
    
    
        element('product/left_side_bar'); ?>
        
            Form->create('Supports', array('plugin' => 'products', 'controller' => 'supports', 'action' => 'configurations')); ?>
            
                
                    Support
                
                
                    
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                
                
                    Add Admin & Technical email addresses

                    
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                
                

                
                Form->submit('Apply the changes', array('id' => 'backupReports', 'class' => 'btn pull-right backupBtn'));?>
            
            Form->end(); ?>
        
    

                            [1] => 
        
            Parameters & Setting
        
    
                            [2] => 
            Parameters & Setting
        
                            [3] => 
        element('product/left_side_bar'); ?>
        
            Form->create('Supports', array('plugin' => 'products', 'controller' => 'supports', 'action' => 'configurations')); ?>
            
                
                    Support
                
                
                    
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                
                
                    Add Admin & Technical email addresses

                    
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                
                

                
                Form->submit('Apply the changes', array('id' => 'backupReports', 'class' => 'btn pull-right backupBtn'));?>
            
            Form->end(); ?>
        
    
                            [4] => 
            Form->create('Supports', array('plugin' => 'products', 'controller' => 'supports', 'action' => 'configurations')); ?>
            
                
                    Support
                
                
                    
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                
                
                    Add Admin & Technical email addresses

                    
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                
                

                
                Form->submit('Apply the changes', array('id' => 'backupReports', 'class' => 'btn pull-right backupBtn'));?>
            
            Form->end(); ?>
        
                            [5] => 
                
                    Support
                
                
                    
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                
                
                    Add Admin & Technical email addresses

                    
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                
                

                
                Form->submit('Apply the changes', array('id' => 'backupReports', 'class' => 'btn pull-right backupBtn'));?>
            
                            [6] => 
                    Support
                
                            [7] => 
                    
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                
                            [8] => 
                        
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                         
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                    
                            [9] => 
                            [10] => 
                            [11] => 
                    Add Admin & Technical email addresses

                    
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                
                            [12] => 
                        
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        

                        
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                    
                            [13] => 
                            Admin email *

                            
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                        
                            [14] => 
                                Form->input('OrganisationsProduct.administrative_email', array('id' => 'administrative_email', 'class' => 'field', 'label' => false));
                                ?>
                            
                            [15] => 
                            Technical email *

                            
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                        
                            [16] => 
                                Form->input('OrganisationsProduct.technical_email', array('id' => 'technical_email', 'class' => 'field', 'label' => false)); ?>
                            
                            [17] => 

                
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => 
                            
                            Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(0 => 'Disable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                        
                            [1] => 
                        
                        Form->input('OrganisationsProduct.is_support_enabled', array('options' => array(1 => 'Enable'), 'label' => false, 'div' => false, 'type' => 'radio', 'class' => 'radioStatus'));?>

                    
                            [2] => Admin email *
                            [3] => Technical email *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Candidates] => Array
        (
            [add.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter name
                            [1] => Please enter the email
                            [2] => Please enter valid email address.
                        )

                    [para_message] => Array
                        (
                            [0] => <p class="center">Please enter your basic information.</p>
                        )

                    [place_holders] => Array
                        (
                            [0] => Tom
                            [1] => Tom@web.com
                        )

                    [title] => Array
                        (
                            [0] => Take the assessment
                        )

                    [h2] => Array
                        (
                            [0] => Candidate Information
                        )

                    [div] => Array
                        (
                            [0] => 
    
        Candidate Information
    
    Please enter your basic information.

    
        Form->create('Candidate', array('class' => 'form-horizontal createKeyContactForm'));
        ?>
        
            Name * 

            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                ?>
            
        
        
            Email * 

            
                Form->input('email', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom@web.com'));

                //echo $this->Form->hidden('JobRolesCandidate.job_role_id',array('value'=> $jobRoleId));

                ?>
            
        

        
            
                Form->submit(__('Take the assessment'), array('class' => 'btn btnBlack', 'title' => 'Take the assessment', 'div' => false));
                ?>
            
        
        Form->end();
        ?>
    

                            [1] => 
        Candidate Information
    
                            [2] => 
        Form->create('Candidate', array('class' => 'form-horizontal createKeyContactForm'));
        ?>
        
            Name * 

            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                ?>
            
        
        
            Email * 

            
                Form->input('email', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom@web.com'));

                //echo $this->Form->hidden('JobRolesCandidate.job_role_id',array('value'=> $jobRoleId));

                ?>
            
        

        
            
                Form->submit(__('Take the assessment'), array('class' => 'btn btnBlack', 'title' => 'Take the assessment', 'div' => false));
                ?>
            
        
        Form->end();
        ?>
    
                            [3] => 
            Name * 

            
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                ?>
            
        
                            [4] => 
                Form->input('name', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom'));
                ?>
            
                            [5] => 
            Email * 

            
                Form->input('email', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom@web.com'));

                //echo $this->Form->hidden('JobRolesCandidate.job_role_id',array('value'=> $jobRoleId));

                ?>
            
        
                            [6] => 
                Form->input('email', array('label' => false, 'div' => false, 'type' => 'text', 'placeholder' => 'Tom@web.com'));

                //echo $this->Form->hidden('JobRolesCandidate.job_role_id',array('value'=> $jobRoleId));

                ?>
            
                            [7] => 
            
                Form->submit(__('Take the assessment'), array('class' => 'btn btnBlack', 'title' => 'Take the assessment', 'div' => false));
                ?>
            
        
                            [8] => 
                Form->submit(__('Take the assessment'), array('class' => 'btn btnBlack', 'title' => 'Take the assessment', 'div' => false));
                ?>
            
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => Name * 
                            [1] => Email * 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Candidates] => Array
        (
            [email_candidate.ctp] => Array
                (
                    [title] => Array
                        (
                            [0] => Send Email
                        )

                    [validation_messages] => Array
                        (
                            [0] => Please enter a subject
                        )

                    [div] => Array
                        (
                            [0] => 
    Form->create('Candidate', array('class' => 'form-horizontal'));?>
    
        To:

        
            Form->input('email', array('label' => false, 'type' => 'text', 'value' => $this->request->data['Candidate']['email'], 'readonly' => true));
            echo $this->Form->hidden('name', array('value' => $this->request->data['Candidate']['name']));
            ?>
        
    
    
        Subject:*

        
            Form->input('subject', array('label' => false, 'type' => 'text', 'id' => 'candidateSubject'));?>
        
    
    
        

        
            Form->input('body', array('label' => false, 'type' => 'textarea'));?>
        
    
    
        

        
            Form->submit(__('Send ', true), array('class' => 'btn btn-inverse btn-large', 'title' => 'Send Email', 'div' => false, 'escape' => true,));?>
        
    
    Form->end(); ?>

                            [1] => 
        To:

        
            Form->input('email', array('label' => false, 'type' => 'text', 'value' => $this->request->data['Candidate']['email'], 'readonly' => true));
            echo $this->Form->hidden('name', array('value' => $this->request->data['Candidate']['name']));
            ?>
        
    
                            [2] => 
            Form->input('email', array('label' => false, 'type' => 'text', 'value' => $this->request->data['Candidate']['email'], 'readonly' => true));
            echo $this->Form->hidden('name', array('value' => $this->request->data['Candidate']['name']));
            ?>
        
                            [3] => 
        Subject:*

        
            Form->input('subject', array('label' => false, 'type' => 'text', 'id' => 'candidateSubject'));?>
        
    
                            [4] => 
            Form->input('subject', array('label' => false, 'type' => 'text', 'id' => 'candidateSubject'));?>
        
                            [5] => 
        

        
            Form->input('body', array('label' => false, 'type' => 'textarea'));?>
        
    
                            [6] => 
            Form->input('body', array('label' => false, 'type' => 'textarea'));?>
        
                            [7] => 
        

        
            Form->submit(__('Send ', true), array('class' => 'btn btn-inverse btn-large', 'title' => 'Send Email', 'div' => false, 'escape' => true,));?>
        
    
                            [8] => 
            Form->submit(__('Send ', true), array('class' => 'btn btn-inverse btn-large', 'title' => 'Send Email', 'div' => false, 'escape' => true,));?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                        )

                    [labels] => Array
                        (
                            [0] => To:
                            [1] => Subject:*
                            [2] => 
                            [3] => 
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Candidates] => Array
        (
            [instructions.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="paraCnt">The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.</p>
                            [1] => <p class="paraCnt">We also look at your values and motivations although the assessment does not define whether you are motivated or not. </p>
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
        
            Welcome, John Devis

            Product Super Admin
        
        
            
            Action
                Another action
            
    
    
         Values Assessment
    
    Instructions

    
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.

        We also look at your values and motivations although the assessment does not define whether you are motivated or not. 
    
    Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum 
    The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
    Html->link('Take the assessment', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'cfa',), array('class' => 'btn btnBlack pull-right'))

    ?>

                            [1] => 
        
            
        
            Welcome, John Devis

            Product Super Admin
        
        
            
            Action
                Another action
            
    
                            [2] => 
            
                            [3] => 
            Welcome, John Devis

            Product Super Admin
        
                            [4] => 
            
            Action
                Another action
            
                            [5] => 
         Values Assessment
    
                            [6] => 
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.

        We also look at your values and motivations although the assessment does not define whether you are motivated or not. 
    
                        )

                    [span] => Array
                        (
                            [0] => Welcome,
                            [1] => John Devis
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Candidates] => Array
        (
            [rpa_instructions.ctp] => Array
                (
                    [para_message] => Array
                        (
                            [0] => <p class="paraCnt">The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.</p>
                            [1] => <p class="paraCnt">We also look at your values and motivations although the assessment does not define whether you are motivated or not. </p>
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
        
            Welcome, John Devis

            Product Super Admin
        
        
            
            Action
                Another action
            
    
    
         Values Assessment
    
    Instructions

    
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.

        We also look at your values and motivations although the assessment does not define whether you are motivated or not. 
    
    Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum 
    The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.
        
    Html->link('Take the assessment', array('plugin' => 'job_roles', 'controller' => 'job_roles', 'action' => 'rpa',), array('class' => 'btn btnBlack pull-right'))

    ?>

                            [1] => 
        
            
        
            Welcome, John Devis

            Product Super Admin
        
        
            
            Action
                Another action
            
    
                            [2] => 
            
                            [3] => 
            Welcome, John Devis

            Product Super Admin
        
                            [4] => 
            
            Action
                Another action
            
                            [5] => 
         Values Assessment
    
                            [6] => 
        The following process will assess your strengths and development areas against the capabilities identified as essential for your role. These capabilities are a combination of knowledge, performance and behaviour. Your knowledge, skill and behaviour can improve over time through development, and this tool will also help you track this movement.

        We also look at your values and motivations although the assessment does not define whether you are motivated or not. 
    
                        )

                    [span] => Array
                        (
                            [0] => Welcome,
                            [1] => John Devis
                        )

                )

        )

)
Array
(
)
Array
(
)
Array
(
)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [add.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('User'); ?>
    
        Form->input('username');
        echo $this->Form->input('password');
        echo $this->Form->input('first_name');
        echo $this->Form->input('last_name');
        echo $this->Form->input('user_title');
        echo $this->Form->input('image');
        echo $this->Form->input('phone_number');
        echo $this->Form->input('gender');
        echo $this->Form->input('dob');
        echo $this->Form->input('show_instruction');
        echo $this->Form->input('assesment_instruction');
        echo $this->Form->input('organisation_id');
        echo $this->Form->input('is_verified');
        echo $this->Form->input('verify_token');
        echo $this->Form->input('is_active');
        echo $this->Form->input('is_deleted');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Html->link(__('List Users'), array('action' => 'index')); ?>
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [change_password.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter your current password
                            [1] => Please enter minimum of length 6 characters
                            [2] => Please enter your new password
                            [3] => Please enter minimum of length 6 characters
                            [4] => Your password should contain least one Alphabet
                            [5] => Your password should contain least one Numeric
                            [6] => Your password should contain least one Special Character
                            [7] => Please confirm your new password
                            [8] => Please enter minimum of length 6 characters
                            [9] => Your password should contain least one Alphabet
                            [10] => Your password should contain least one Numeric
                            [11] => Your password should contain least one Special Character
                            [12] => Confirm password field doesn't match the password field
                        )

                    [title] => Array
                        (
                            [0] => Save
                            [1] => Cancel
                        )

                    [submit] => Array
                        (
                            [0] => Save
                        )

                    [h2] => Array
                        (
                            [0] => Change password
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Change password

        
        
        
    

                            [1] => 
        
            Change password

        
        
        
    
                            [2] => 
            Change password

        
                            [3] => 
                            [4] => 
                            [5] => 
    Form->create('User', array('class' => 'form-horizontal createKeyContactForm', 'id' => 'changePassword'));
    ?>
    
        Old Password * 

        
            Form->input("old_password", array('label' => false, 'type' => 'password', 'id' => 'oldPassword', 'autocomplete' => 'off'));?>
        
    
    
        New Password *

        
            Form->input("new_password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'autocomplete' => 'off'));?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
    
    
        Confirm Password *

        
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'autocomplete' => 'off'));?>

        
    

    
        
            Form->submit('Save', array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', 'javascript:history.go(-1);', array('class' => 'back', 'title' => 'Cancel'));

            ?>
        
    
    Form->end();
    ?>

                            [6] => 
        Old Password * 

        
            Form->input("old_password", array('label' => false, 'type' => 'password', 'id' => 'oldPassword', 'autocomplete' => 'off'));?>
        
    
                            [7] => 
            Form->input("old_password", array('label' => false, 'type' => 'password', 'id' => 'oldPassword', 'autocomplete' => 'off'));?>
        
                            [8] => 
        New Password *

        
            Form->input("new_password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'autocomplete' => 'off'));?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
    
                            [9] => 
            Form->input("new_password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'autocomplete' => 'off'));?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
                            [10] => 
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            
                            [11] => 
        Confirm Password *

        
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'autocomplete' => 'off'));?>

        
    
                            [12] => 
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'autocomplete' => 'off'));?>

        
                            [13] => 
        
            Form->submit('Save', array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', 'javascript:history.go(-1);', array('class' => 'back', 'title' => 'Cancel'));

            ?>
        
    
                            [14] => 
            Form->submit('Save', array('name' => 'save', 'class' => 'btn btnBlack pull-left', 'title' => 'Save', 'div' => false));
            echo $this->Html->link('Cancel', 'javascript:history.go(-1);', array('class' => 'back', 'title' => 'Cancel'));

            ?>
        
                            [15] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                            [2] => *
                        )

                    [labels] => Array
                        (
                            [0] => Old Password * 
                            [1] => New Password *
                            [2] => Confirm Password *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [edit.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('User'); ?>
    
        Form->input('id');
        echo $this->Form->input('username');
        echo $this->Form->input('password');
        echo $this->Form->input('first_name');
        echo $this->Form->input('last_name');
        echo $this->Form->input('user_title');
        echo $this->Form->input('image');
        echo $this->Form->input('phone_number');
        echo $this->Form->input('gender');
        echo $this->Form->input('dob');
        echo $this->Form->input('show_instruction');
        echo $this->Form->input('assesment_instruction');
        echo $this->Form->input('organisation_id');
        echo $this->Form->input('is_verified');
        echo $this->Form->input('verify_token');
        echo $this->Form->input('is_active');
        echo $this->Form->input('is_deleted');
        ?>
    Form->end(__('Submit')); ?>

                            [1] => 
    
    Form->postLink(__('Delete'), array('action' => 'delete', $this->Form->value('User.id')), null, __('Are you sure you want to delete # %s?', $this->Form->value('User.id'))); ?>
        Html->link(__('List Users'), array('action' => 'index')); ?>
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [forgot_password.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter your email address
                            [1] => Please enter a valid email id
                        )

                    [h2] => Array
                        (
                            [0] => Forgot your password ? 
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Forgot your password ? 
            Submit your email address and we'll send you a link to reset your password.
        
        
        
    

                            [1] => 
        
            Forgot your password ? 
            Submit your email address and we'll send you a link to reset your password.
        
        
        
    
                            [2] => 
            Forgot your password ? 
            Submit your email address and we'll send you a link to reset your password.
        
                            [3] => 
                            [4] => 
                            [5] => 
    Form->create('User', array('class' => 'form-horizontal createKeyContactForm', 'id' => 'forgotPassword'));?>
    
        Email*

        
            Form->input("username", array('label' => false, 'id' => 'email'));?>

        
    
    
        
            Form->submit(__('Submit'), array('name' => 'save', 'class' => 'btn btnBlack pull-left'));
            echo $this->Html->link('Cancel', array('plugin' => 'users', 'controller' => 'users', 'action' => 'login'), array('class' => 'back'));
            ?>
        
    
    Form->end();
    ?>

                            [6] => 
        Email*

        
            Form->input("username", array('label' => false, 'id' => 'email'));?>

        
    
                            [7] => 
            Form->input("username", array('label' => false, 'id' => 'email'));?>

        
                            [8] => 
        
            Form->submit(__('Submit'), array('name' => 'save', 'class' => 'btn btnBlack pull-left'));
            echo $this->Html->link('Cancel', array('plugin' => 'users', 'controller' => 'users', 'action' => 'login'), array('class' => 'back'));
            ?>
        
    
                            [9] => 
            Form->submit(__('Submit'), array('name' => 'save', 'class' => 'btn btnBlack pull-left'));
            echo $this->Html->link('Cancel', array('plugin' => 'users', 'controller' => 'users', 'action' => 'login'), array('class' => 'back'));
            ?>
        
                            [10] => 
    Html->image('ajax-loader_product.gif');?>

                        )

                    [span] => Array
                        (
                            [0] => *
                        )

                    [labels] => Array
                        (
                            [0] => Email*
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [index.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    Paginator->sort('id'); ?>
            Paginator->sort('username'); ?>
            Paginator->sort('password'); ?>
            Paginator->sort('first_name'); ?>
            Paginator->sort('last_name'); ?>
            Paginator->sort('user_title'); ?>
            Paginator->sort('image'); ?>
            Paginator->sort('phone_number'); ?>
            Paginator->sort('gender'); ?>
            Paginator->sort('dob'); ?>
            Paginator->sort('show_instruction'); ?>
            Paginator->sort('assesment_instruction'); ?>
            Paginator->sort('organisation_id'); ?>
            Paginator->sort('is_verified'); ?>
            Paginator->sort('verify_token'); ?>
            Paginator->sort('is_active'); ?>
            Paginator->sort('is_deleted'); ?>
            Paginator->sort('modified'); ?>
            Paginator->sort('created'); ?>
            
         
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                
                    Html->link($user['Organisation']['name'], array('controller' => 'organisations', 'action' => 'view', $user['Organisation']['id'])); ?>
                
                 
                 
                 
                 
                 
                 
                
                    Html->link(__('View'), array('action' => 'view', $user['User']['id'])); ?>
                    Html->link(__('Edit'), array('action' => 'edit', $user['User']['id'])); ?>
                    Form->postLink(__('Delete'), array('action' => 'delete', $user['User']['id']), null, __('Are you sure you want to delete # %s?', $user['User']['id'])); ?>
                
            
        Paginator->counter(array('format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')));
        ?>    

    
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    

                            [1] => 
        Paginator->prev(' 'prev disabled'));
        echo $this->Paginator->numbers(array('separator' => ''));
        echo $this->Paginator->next(__('next') . ' >', array(), null, array('class' => 'next disabled'));
        ?>
    
                            [2] => 
    
    Html->link(__('New User'), array('action' => 'add')); ?>
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [login.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter your email address
                            [1] => Please enter valid  email address.
                            [2] => Please enter your password
                        )

                    [place_holders] => Array
                        (
                            [0] => Email
                            [1] => Password
                        )

                    [submit] => Array
                        (
                            [0] => Login
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
            
            Form->create('User', array('class' => 'form-horizontal'));
            echo $this->Form->input('username', array('id' => 'username', 'label' => false, 'type' => 'text', 'placeholder' => 'Email', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->input('password', array('id' => 'password', 'type' => 'password', 'label' => false, 'placeholder' => 'Password', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->submit('Login', array('class' => 'btn btn-inverse', 'div' => false));
            echo $this->Form->end();
            ?>
        
    
    
        
            Html->link(('Forgot your password'), array('plugin' => 'users', 'controller' => 'users', 'action' => 'forgot_password'), array('class' => 'forgotText'))?>
        
    

                            [1] => 
        
            
            
            Form->create('User', array('class' => 'form-horizontal'));
            echo $this->Form->input('username', array('id' => 'username', 'label' => false, 'type' => 'text', 'placeholder' => 'Email', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->input('password', array('id' => 'password', 'type' => 'password', 'label' => false, 'placeholder' => 'Password', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->submit('Login', array('class' => 'btn btn-inverse', 'div' => false));
            echo $this->Form->end();
            ?>
        
    
                            [2] => 
            
            
            Form->create('User', array('class' => 'form-horizontal'));
            echo $this->Form->input('username', array('id' => 'username', 'label' => false, 'type' => 'text', 'placeholder' => 'Email', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->input('password', array('id' => 'password', 'type' => 'password', 'label' => false, 'placeholder' => 'Password', 'class' => 'input-xlarge', 'div' => false));
            echo $this->Form->submit('Login', array('class' => 'btn btn-inverse', 'div' => false));
            echo $this->Form->end();
            ?>
        
                            [3] => 
                            [4] => 
                            [5] => 
        
            Html->link(('Forgot your password'), array('plugin' => 'users', 'controller' => 'users', 'action' => 'forgot_password'), array('class' => 'forgotText'))?>
        
    
                            [6] => 
            Html->link(('Forgot your password'), array('plugin' => 'users', 'controller' => 'users', 'action' => 'forgot_password'), array('class' => 'forgotText'))?>
        
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [product_set_password.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter new password
                            [1] => Please enter minimum of length 6 characters
                            [2] => Your password should contain least one Alphabet
                            [3] => Your password should contain least one Numeric
                            [4] => Your password should contain least one Special Character
                            [5] => Please enter confirm password
                            [6] => Please enter minimum of length 6 characters
                            [7] => Your password should contain least one Alphabet
                            [8] => Your password should contain least one Numeric
                            [9] => Your password should contain least one Special Character
                            [10] => Confirm password field doesn't match the new password field
                            [11] => Please accept terms and conditions
                        )

                    [place_holders] => Array
                        (
                            [0] => Enter Your New Password
                            [1] => Confirm Your New Password
                        )

                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            Set Password
        
    

                            [1] => 
        
            Set Password
        
    
                            [2] => 
            Set Password
        
                            [3] => 
    Form->create('User', array('class' => 'form-horizontal', 'id' => 'productSetPassword'));
    echo $this->Form->hidden("id", array('value' => $user['User']['id']));
    echo $this->Form->hidden("is_active", array('value' => '1'));
    echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
    echo $this->Form->hidden("ProductsUser.id", array('value' => $user['ProductsUser']['id']));
    echo $this->Form->hidden("ProductsUser.hash", array('value' => $this->Crt->createHash()));
    echo $this->Form->hidden("ProductsUser.is_active", array('value' => '1'));
    echo $this->Form->hidden("ProductsUser.is_accepted", array('value' => '1'));
    ?>
    
        New Password *

        
            Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'placeholder' => 'Enter Your New Password', 'autocomplete' => 'off'));
            ?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
    
    
        Confirm Password *

        
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'placeholder' => 'Confirm Your New Password', 'autocomplete' => 'off'));
            ?>
        
    
    
        
            Html->tag('span', $this->Form->checkbox('check.agreeTermsCond', array('id' => 'agreeTermsCond_1', 'label' => false)) . ' I accept ' . $this->Html->link('Terms of Use', '#termsOfUse', array('class' => 'fancybox_link')) . ' & ' . $this->Html->link('Privacy Policy', '#privacyPolicy', array('class' => 'fancybox_link')), array('id' => 'agreeTermsCond'));

            ?>
        
    
    
        
            Form->submit('Submit', array('class' => 'btn btnBlack'));
            ?>
        
    
    Form->end();?>

                            [4] => 
        New Password *

        
            Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'placeholder' => 'Enter Your New Password', 'autocomplete' => 'off'));
            ?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
    
                            [5] => 
            Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword', 'placeholder' => 'Enter Your New Password', 'autocomplete' => 'off'));
            ?>

            
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            

        
                            [6] => 
                (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
            
                            [7] => 
        Confirm Password *

        
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'placeholder' => 'Confirm Your New Password', 'autocomplete' => 'off'));
            ?>
        
    
                            [8] => 
            Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword', 'placeholder' => 'Confirm Your New Password', 'autocomplete' => 'off'));
            ?>
        
                            [9] => 
        
            Html->tag('span', $this->Form->checkbox('check.agreeTermsCond', array('id' => 'agreeTermsCond_1', 'label' => false)) . ' I accept ' . $this->Html->link('Terms of Use', '#termsOfUse', array('class' => 'fancybox_link')) . ' & ' . $this->Html->link('Privacy Policy', '#privacyPolicy', array('class' => 'fancybox_link')), array('id' => 'agreeTermsCond'));

            ?>
        
    
                            [10] => 
            Html->tag('span', $this->Form->checkbox('check.agreeTermsCond', array('id' => 'agreeTermsCond_1', 'label' => false)) . ' I accept ' . $this->Html->link('Terms of Use', '#termsOfUse', array('class' => 'fancybox_link')) . ' & ' . $this->Html->link('Privacy Policy', '#privacyPolicy', array('class' => 'fancybox_link')), array('id' => 'agreeTermsCond'));

            ?>
        
                            [11] => 
        
            Form->submit('Submit', array('class' => 'btn btnBlack'));
            ?>
        
    
                            [12] => 
            Form->submit('Submit', array('class' => 'btn btnBlack'));
            ?>
        
                            [13] => 
    Html->image('ajax-loader_product.gif');?>

                            [14] => 
    
        element('terms_and_policy', array('page' => $termsOfUse));?>
    
    
            element('terms_and_policy', array('page' => $privacyPolicy));?>
        
        
                            [15] => 
        element('terms_and_policy', array('page' => $termsOfUse));?>
    
                            [16] => 
            element('terms_and_policy', array('page' => $privacyPolicy));?>
        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => New Password *
                            [1] => Confirm Password *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [set_password.ctp] => Array
                (
                    [validation_messages] => Array
                        (
                            [0] => Please enter new password
                            [1] => Please enter minimum of length 6 characters
                            [2] => Your password should contain least one Alphabet
                            [3] => Your password should contain least one Numeric
                            [4] => Your password should contain least one Special Character
                            [5] => Please enter confirm password
                            [6] => Please enter minimum of length 6 characters
                            [7] => Your password should contain least one Alphabet
                            [8] => Your password should contain least one Numeric
                            [9] => Your password should contain least one Special Character
                            [10] => Confirm password field doesn't match the  new password field
                        )

                    [submit] => Array
                        (
                            [0] => Submit
                        )

                    [h2] => Array
                        (
                            [0] => Set password
                        )

                    [div] => Array
                        (
                            [0] => 
    
        
            
                
                    Set password
                
                
            
            
                

                    
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                
                
                    
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                
            
        
    
    

                            [1] => 
        
            
                
                    Set password
                
                
            
            
                

                    
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                
                
                    
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                
            
        
    
                            [2] => 
            
                
                    Set password
                
                
            
            
                

                    
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                
                
                    
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                
            
        
                            [3] => 
                
                    Set password
                
                
            
                            [4] => 
                    Set password
                
                            [5] => 
                            [6] => 
                

                    
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                
                
                    
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                
            
                            [7] => 

                    
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                
                            [8] => 
                        
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                        Form->end();?>
                    
                            [9] => 
                            Form->create('User', array('class' => 'form-horizontal', 'id' => 'setPassword'));
                            echo $this->Form->hidden("id", array('value' => $userId));
                            echo $this->Form->hidden("verify_token", array('value' => $this->Crt->createHash()));
                            echo $this->Form->hidden("is_active", array('value' => 1));
                            echo $this->Form->hidden("is_verified", array('value' => 1));
                            ?>
                            
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            

                            
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                        
                            [10] => 
                                New Password *

                                
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            
                            [11] => 
                                    Form->input("password", array('label' => false, 'type' => 'password', 'id' => 'newPassword'));
                                    ?>

                                    
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    

                                
                            [12] => 
                                        (Password should contain minimum 6 characters,at least one Alphabet, one Numeric and one Special Character)
                                    
                            [13] => 
                                Confirm Password *

                                
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            
                            [14] => 
                                    Form->input("confirm_password", array('label' => false, 'type' => 'password', 'id' => 'confirmPassword'));?>
                            [15] => 
                                
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            
                            [16] => 
                                    Form->submit('Submit', array('class' => 'btn btn-inverse'));
                                    //                                            echo $this->From->?>
                                
                            [17] => 
                    
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                
                            [18] => 
                        
                            Html->image('ajax-loader_product.gif');?>
                        
                    
                            [19] => 
                            Html->image('ajax-loader_product.gif');?>
                        
                        )

                    [span] => Array
                        (
                            [0] => *
                            [1] => *
                        )

                    [labels] => Array
                        (
                            [0] => New Password *
                            [1] => Confirm Password *
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Users] => Array
        (
            [view.ctp] => Array
                (
                    [h2] => Array
                        (
                            [0] => 
                        )

                    [div] => Array
                        (
                            [0] => 
    
    
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            Html->link($user['Organisation']['name'], array('controller' => 'organisations', 'action' => 'view', $user['Organisation']['id'])); ?>
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
        
        
            
             
        
    
                            [1] => 
    
    Html->link(__('Edit User'), array('action' => 'edit', $user['User']['id'])); ?> 
        Form->postLink(__('Delete User'), array('action' => 'delete', $user['User']['id']), null, __('Are you sure you want to delete # %s?', $user['User']['id'])); ?> 
        Html->link(__('List Users'), array('action' => 'index')); ?> 
        Html->link(__('New User'), array('action' => 'add')); ?> 
        Html->link(__('List Organisations'), array('controller' => 'organisations', 'action' => 'index')); ?> 
        Html->link(__('New Organisation'), array('controller' => 'organisations', 'action' => 'add')); ?> 
    
                        )

                )

        )

)
Array
(
    [/home/webonise/projects/apps2013/php/Crucible-CRT/app/Plugin/Users/View/Userxls] => Array
        (
            [dummy_users.ctp] => Array
                (
                    [div] => Array
                        (
                            [0] => 
    Form->create('Userxls', array('url' => array('action' => 'dummyUsers'))); ?>
    
        Form->input('method');
        echo $this->Form->input('assessment_url');
        echo $this->Form->input('number_of_users');
        echo $this->Form->input('start');
        echo $this->Form->input('name_prefix');
        ?>
    Form->end(__('Submit')); ?>

                        )

                )

        )

)
